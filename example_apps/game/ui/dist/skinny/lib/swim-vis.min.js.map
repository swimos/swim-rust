{"version":3,"file":"swim-vis.min.js","sources":["../../../../node_modules/tslib/tslib.es6.mjs","../../swim-gauge/main/DialView.ts","../../swim-gauge/main/DialTrait.ts","../../swim-gauge/main/DialController.ts","../../swim-gauge/main/GaugeView.ts","../../swim-gauge/main/GaugeTrait.ts","../../swim-gauge/main/GaugeController.ts","../../swim-pie/main/SliceView.ts","../../swim-pie/main/SliceTrait.ts","../../swim-pie/main/SliceController.ts","../../swim-pie/main/PieView.ts","../../swim-pie/main/PieTrait.ts","../../swim-pie/main/PieController.ts","../../swim-chart/main/DataPointView.ts","../../swim-chart/main/DataPointTrait.ts","../../swim-chart/main/DataPointController.ts","../../swim-chart/main/DataSetTrait.ts","../../swim-chart/main/DataSetController.ts","../../swim-chart/main/ContinuousScaleAnimator.ts","../../swim-chart/main/ScaledXView.ts","../../swim-chart/main/ScaledYView.ts","../../swim-chart/main/ScaledXYView.ts","../../swim-chart/main/ScaledView.ts","../../swim-chart/main/ScatterPlotView.ts","../../swim-chart/main/SeriesPlotView.ts","../../swim-chart/main/BubblePlotView.ts","../../swim-chart/main/LinePlotView.ts","../../swim-chart/main/AreaPlotView.ts","../../swim-chart/main/PlotTrait.ts","../../swim-chart/main/ScatterPlotTrait.ts","../../swim-chart/main/SeriesPlotTrait.ts","../../swim-chart/main/BubblePlotTrait.ts","../../swim-chart/main/LinePlotTrait.ts","../../swim-chart/main/AreaPlotTrait.ts","../../swim-chart/main/PlotController.ts","../../swim-chart/main/ScatterPlotController.ts","../../swim-chart/main/SeriesPlotController.ts","../../swim-chart/main/BubblePlotController.ts","../../swim-chart/main/LinePlotController.ts","../../swim-chart/main/AreaPlotController.ts","../../swim-chart/main/GraphView.ts","../../swim-chart/main/GraphTrait.ts","../../swim-chart/main/GraphController.ts","../../swim-chart/main/TickGenerator.ts","../../swim-chart/main/TickView.ts","../../swim-chart/main/AxisView.ts","../../swim-chart/main/AxisTrait.ts","../../swim-chart/main/AxisController.ts","../../swim-chart/main/ChartView.ts","../../swim-chart/main/ChartTrait.ts","../../swim-chart/main/ChartController.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport {FillView} from \"@swim/graphics\";\nimport {Arc} from \"@swim/graphics\";\nimport {TypesetView} from \"@swim/graphics\";\nimport {TextRunView} from \"@swim/graphics\";\n\n/** @public */\nexport type DialViewArrangement = \"auto\" | \"manual\";\n\n/** @public */\nexport interface DialViewObserver<V extends DialView = DialView> extends GraphicsViewObserver<V> {\n  viewDidSetValue?(value: number, view: V): void;\n\n  viewDidSetLimit?(limit: number, view: V): void;\n\n  viewWillAttachLabel?(labelView: GraphicsView, view: V): void;\n\n  viewDidDetachLabel?(labelView: GraphicsView, view: V): void;\n\n  viewWillAttachLegend?(legendView: GraphicsView, view: V): void;\n\n  viewDidDetachLegend?(legendView: GraphicsView, view: V): void;\n}\n\n/** @public */\nexport class DialView extends GraphicsView {\n  declare readonly observerType?: Class<DialViewObserver>;\n\n  @Animator({\n    valueType: Number,\n    value: 0,\n    updateFlags: View.NeedsRender,\n    didSetValue(value: number): void {\n      this.owner.callObservers(\"viewDidSetValue\", value, this.owner);\n    },\n  })\n  readonly value!: Animator<this, number>;\n\n  @Animator({\n    valueType: Number,\n    value: 1,\n    updateFlags: View.NeedsRender,\n    didSetValue(limit: number): void {\n      this.owner.callObservers(\"viewDidSetLimit\", limit, this.owner);\n    },\n  })\n  readonly limit!: Animator<this, number>;\n\n  @Animator({valueType: R2Point, value: R2Point.origin(), inherits: true, updateFlags: View.NeedsRender})\n  readonly center!: Animator<this, R2Point>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(30), inherits: true, updateFlags: View.NeedsRender})\n  readonly innerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(40), inherits: true, updateFlags: View.NeedsRender})\n  readonly outerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.rad(-Math.PI / 2), inherits: true, updateFlags: View.NeedsRender})\n  readonly startAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.rad(2 * Math.PI), inherits: true, updateFlags: View.NeedsRender})\n  readonly sweepAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50), inherits: true, updateFlags: View.NeedsRender})\n  readonly cornerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.etchColor, inherits: true, updateFlags: View.NeedsRender})\n  readonly dialColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.accentColor, inherits: true, updateFlags: View.NeedsRender})\n  readonly meterColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50), inherits: true, updateFlags: View.NeedsRender})\n  readonly labelPadding!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Number, value: 1, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickAlign!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(45), inherits: true, updateFlags: View.NeedsRender})\n  readonly tickRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50), inherits: true, updateFlags: View.NeedsRender})\n  readonly tickLength!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(1), inherits: true, updateFlags: View.NeedsRender})\n  readonly tickWidth!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(2), inherits: true, updateFlags: View.NeedsRender})\n  readonly tickPadding!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.legendColor, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.legendColor, inherits: true, updateFlags: View.NeedsRender})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  @ViewRef({\n    viewType: TextRunView,\n    viewKey: true,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachLabel\", labelView, this.owner);\n    },\n    fromLike(value: GraphicsView | LikeType<GraphicsView> | string | undefined): GraphicsView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        if (view instanceof TextRunView) {\n          view.text.setState(value !== void 0 ? value : \"\");\n        }\n        return view;\n      }\n      return super.fromLike(value);\n    },\n  })\n  readonly label!: ViewRef<this, Like<GraphicsView, string | undefined>>;\n\n  @ViewRef({\n    viewType: TextRunView,\n    viewKey: true,\n    binds: true,\n    willAttachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachLegend\", legendView, this.owner);\n    },\n    didDetachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachLegend\", legendView, this.owner);\n    },\n    fromLike(value: GraphicsView | LikeType<GraphicsView> | string | undefined): GraphicsView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        if (view instanceof TextRunView) {\n          view.text.setState(value !== void 0 ? value : \"\");\n        }\n        return view;\n      }\n      return super.fromLike(value);\n    },\n  })\n  readonly legend!: ViewRef<this, Like<GraphicsView, string | undefined>>;\n\n  @Property({valueType: String, value: \"auto\"})\n  readonly arrangement!: Property<this, DialViewArrangement>;\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.center.recohere(this.updateTime);\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      const context = renderer.context;\n      context.save();\n      this.renderDial(context, this.viewFrame);\n      context.restore();\n    }\n  }\n\n  protected renderDial(context: CanvasContext, frame: R2Box): void {\n    const width = frame.width;\n    const height = frame.height;\n    const size = Math.min(width, height);\n    const value = this.value.getValue();\n    const limit = this.limit.getValue();\n    const delta = limit !== 0 ? value / limit : 0;\n\n    const center = this.center.getValue();\n    const innerRadius = this.innerRadius.getValue().px(size);\n    const outerRadius = this.outerRadius.getValue().px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.startAngle.getValue().rad();\n    const sweepAngle = this.sweepAngle.getValue().rad();\n    const cornerRadius = this.cornerRadius.getValue().px(deltaRadius);\n    const dial = new Arc(center, innerRadius, outerRadius, startAngle,\n                         sweepAngle, Angle.zero(), null, cornerRadius);\n    const meter = dial.withSweepAngle(sweepAngle.times(delta));\n\n    context.save();\n\n    context.beginPath();\n    const dialColor = this.dialColor.value;\n    if (dialColor !== null) {\n      context.fillStyle = dialColor.toString();\n    }\n    dial.draw(context, frame);\n    if (dialColor !== null) {\n      context.fill();\n    }\n    context.clip();\n\n    const meterColor = this.meterColor.value;\n    if (meterColor !== null) {\n      context.beginPath();\n      context.fillStyle = meterColor.toString();\n      meter.draw(context, frame);\n      context.fill();\n    }\n\n    context.restore();\n\n    const labelView = this.label.view;\n    if (labelView !== null && !labelView.hidden) {\n      const r = (innerRadius.value + outerRadius.value) / 2;\n      const rx = r * Math.cos(startAngle.value + Equivalent.Epsilon);\n      const ry = r * Math.sin(startAngle.value + Equivalent.Epsilon);\n\n      let textAlign: CanvasTextAlign;\n      if (rx >= 0) {\n        if (ry >= 0) { // top-right\n          textAlign = \"start\";\n        } else { // bottom-right\n          textAlign = \"end\";\n        }\n      } else {\n        if (ry < 0) { // bottom-left\n          textAlign = \"end\";\n        } else { // top-left\n          textAlign = \"start\";\n        }\n      }\n      const padAngle = startAngle.value - Math.PI / 2;\n      const labelPadding = this.labelPadding.getValue().pxValue(deltaRadius);\n      const dx = labelPadding * Math.cos(padAngle);\n      const dy = labelPadding * Math.sin(padAngle);\n\n      if (TypesetView[Symbol.hasInstance](labelView)) {\n        labelView.setIntrinsic({\n          textAlign,\n          textBaseline: \"middle\",\n          textOrigin: new R2Point(center.x + rx + dx, center.y + ry + dy),\n        });\n      }\n    }\n\n    const legendView = this.legend.view;\n    if (legendView !== null && !legendView.hidden) {\n      const tickAlign = this.tickAlign.getValue();\n      const tickAngle = startAngle.value + sweepAngle.value * delta * tickAlign;\n      const tickRadius = this.tickRadius.getValue().pxValue(size);\n      const tickLength = this.tickLength.getValue().pxValue(width);\n      const tickWidth = this.tickWidth.getValue().pxValue(size);\n      const tickColor = this.tickColor.value;\n\n      const cx = center.x;\n      const cy = center.y;\n      const r1x = outerRadius.value * Math.cos(tickAngle + Equivalent.Epsilon);\n      const r1y = outerRadius.value * Math.sin(tickAngle + Equivalent.Epsilon);\n      const r2x = tickRadius * Math.cos(tickAngle + Equivalent.Epsilon);\n      const r2y = tickRadius * Math.sin(tickAngle + Equivalent.Epsilon);\n      let dx = 0;\n\n      if (tickColor !== null) {\n        context.beginPath();\n        context.lineWidth = tickWidth;\n        context.strokeStyle = tickColor.toString();\n        context.moveTo(cx + r1x, cy + r1y);\n        context.lineTo(cx + r2x, cy + r2y);\n        if (tickLength !== 0) {\n          if (r2x >= 0) {\n            context.lineTo(cx + tickLength, cy + r2y);\n            dx = tickLength - r2x;\n          } else if (r2x < 0) {\n            context.lineTo(cx - tickLength, cy + r2y);\n            dx = tickLength + r2x;\n          }\n        }\n        context.stroke();\n      }\n\n      let textAlign: CanvasTextAlign;\n      if (r2x >= 0) {\n        if (r2y >= 0) { // top-right\n          textAlign = \"end\";\n        } else { // bottom-right\n          textAlign = \"end\";\n        }\n      } else {\n        dx = -dx;\n        if (r2y < 0) { // bottom-left\n          textAlign = \"start\";\n        } else { // top-left\n          textAlign = \"start\";\n        }\n      }\n\n      if (TypesetView[Symbol.hasInstance](legendView)) {\n        const tickPadding = this.tickPadding.getValue().pxValue(size);\n        if (FillView[Symbol.hasInstance](legendView)) {\n          legendView.fill.setIntrinsic(tickColor);\n        }\n        legendView.setIntrinsic({\n          textAlign,\n          textBaseline: \"alphabetic\",\n          textOrigin: new R2Point(cx + r2x + dx, cy + r2y - tickPadding),\n        });\n      }\n    }\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestDial(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestDial(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const size = Math.min(frame.width, frame.height);\n    const center = this.center.getValue();\n    const innerRadius = this.innerRadius.getValue().px(size);\n    const outerRadius = this.outerRadius.getValue().px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.startAngle.getValue();\n    const sweepAngle = this.sweepAngle.getValue();\n    const cornerRadius = this.cornerRadius.getValue().px(deltaRadius);\n    const dial = new Arc(center, innerRadius, outerRadius, startAngle,\n                         sweepAngle, Angle.zero(), null, cornerRadius);\n\n    context.beginPath();\n    dial.draw(context, frame);\n    if (context.isPointInPath(x, y)) {\n      return this;\n    }\n    return null;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\n\n/** @public */\nexport interface DialTraitObserver<T extends DialTrait = DialTrait> extends TraitObserver<T> {\n  traitDidSetValue?(value: number, trait: T): void;\n\n  traitDidSetLimit?(limit: number, trait: T): void;\n\n  traitDidSetDialColor?(dialColor: ColorOrLook | null, trait: T): void;\n\n  traitDidSetMeterColor?(meterColor: ColorOrLook | null, trait: T): void;\n\n  traitDidSetLabel?(label: string | undefined, trait: T): void;\n\n  traitDidSetLegend?(legend: string | undefined, trait: T): void;\n}\n\n/** @public */\nexport class DialTrait extends Trait {\n  declare readonly observerType?: Class<DialTraitObserver>;\n\n  @Property({\n    valueType: Number,\n    value: 0,\n    didSetValue(value: number): void {\n      this.owner.callObservers(\"traitDidSetValue\", value, this.owner);\n    },\n  })\n  readonly value!: Property<this, number>;\n\n  @Property({\n    valueType: Number,\n    value: 1,\n    didSetValue(limit: number): void {\n      this.owner.callObservers(\"traitDidSetLimit\", limit, this.owner);\n    },\n  })\n  readonly limit!: Property<this, number>;\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    didSetValue(dialColor: ColorOrLook | null): void {\n      this.owner.callObservers(\"traitDidSetDialColor\", dialColor, this.owner);\n    },\n  })\n  readonly dialColor!: Property<this, ColorOrLook | null>;\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    didSetValue(meterColor: ColorOrLook | null): void {\n      this.owner.callObservers(\"traitDidSetMeterColor\", meterColor, this.owner);\n    },\n  })\n  readonly meterColor!: Property<this, ColorOrLook | null>;\n\n  formatLabel(value: number, limit: number): string | undefined {\n    return void 0;\n  }\n\n  @Property({\n    valueType: String,\n    didSetValue(label: string | undefined): void {\n      this.owner.callObservers(\"traitDidSetLabel\", label, this.owner);\n    },\n  })\n  readonly label!: Property<this, string | undefined>;\n\n  formatLegend(value: number, limit: number): string | undefined {\n    return void 0;\n  }\n\n  @Property({\n    valueType: String,\n    didSetValue(legend: string | undefined): void {\n      this.owner.callObservers(\"traitDidSetLegend\", legend, this.owner);\n    },\n  })\n  readonly legend!: Property<this, string | undefined>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {DialView} from \"./DialView\";\nimport {DialTrait} from \"./DialTrait\";\n\n/** @public */\nexport interface DialControllerObserver<C extends DialController = DialController> extends ControllerObserver<C> {\n  controllerWillAttachDialTrait?(dialTrait: DialTrait, controller: C): void;\n\n  controllerDidDetachDialTrait?(dialTrait: DialTrait, controller: C): void;\n\n  controllerWillAttachDialView?(dialView: DialView, controller: C): void;\n\n  controllerDidDetachDialView?(dialView: DialView, controller: C): void;\n\n  controllerDidSetDialValue?(value: number, controller: C): void;\n\n  controllerDidSetDialLimit?(limit: number, controller: C): void;\n\n  controllerWillAttachDialLabelView?(labelView: GraphicsView, controller: C): void;\n\n  controllerDidDetachDialLabelView?(labelView: GraphicsView, controller: C): void;\n\n  controllerWillAttachDialLegendView?(legendView: GraphicsView, controller: C): void;\n\n  controllerDidDetachDialLegendView?(legendView: GraphicsView, controller: C): void;\n}\n\n/** @public */\nexport class DialController extends Controller {\n  declare readonly observerType?: Class<DialControllerObserver>;\n\n  protected updateLabel(value: number, limit: number, dialTrait: DialTrait): void {\n    if (dialTrait.label.hasAffinity(Affinity.Intrinsic)) {\n      const label = dialTrait.formatLabel(value, limit);\n      if (label !== void 0) {\n        dialTrait.label.setIntrinsic(label);\n      }\n    }\n  }\n\n  protected updateLegend(value: number, limit: number, dialTrait: DialTrait): void {\n    if (dialTrait.legend.hasAffinity(Affinity.Intrinsic)) {\n      const legend = dialTrait.formatLegend(value, limit);\n      if (legend !== void 0) {\n        dialTrait.legend.setIntrinsic(legend);\n      }\n    }\n  }\n\n  protected setValue(value: number, timing?: TimingLike | boolean): void {\n    const dialView = this.dial.view;\n    if (dialView !== null && dialView.value.hasAffinity(Affinity.Intrinsic)) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dialTiming.value;\n        if (timing === true) {\n          timing = dialView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      dialView.value.setIntrinsic(value, timing);\n    }\n  }\n\n  protected setLimit(limit: number, timing?: TimingLike | boolean): void {\n    const dialView = this.dial.view;\n    if (dialView !== null && dialView.limit.hasAffinity(Affinity.Intrinsic)) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dialTiming.value;\n        if (timing === true) {\n          timing = dialView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      dialView.limit.setIntrinsic(limit, timing);\n    }\n  }\n\n  protected setDialColor(dialColor: ColorOrLook | null, timing?: TimingLike | boolean): void {\n    const dialView = this.dial.view;\n    if (dialView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dialTiming.value;\n        if (timing === true) {\n          timing = dialView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      dialView.dialColor.setIntrinsic(dialColor, timing);\n    }\n  }\n\n  protected setMeterColor(meterColor: ColorOrLook | null, timing?: TimingLike | boolean): void {\n    const dialView = this.dial.view;\n    if (dialView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dialTiming.value;\n        if (timing === true) {\n          timing = dialView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      dialView.meterColor.setIntrinsic(meterColor, timing);\n    }\n  }\n\n  protected setLabelView(label: string | undefined): void {\n    const dialView = this.dial.view;\n    if (dialView !== null) {\n      dialView.label.set(label !== void 0 ? label : \"\");\n    }\n  }\n\n  protected setLegendView(legend: string | undefined): void {\n    const dialView = this.dial.view;\n    if (dialView !== null) {\n      dialView.legend.set(legend !== void 0 ? legend : \"\");\n    }\n  }\n\n  @Property({valueType: Timing, inherits: true})\n  get dialTiming(): Property<this, Timing | boolean | undefined> {\n    return Property.getter();\n  }\n\n  @TraitViewRef({\n    traitType: DialTrait,\n    observesTrait: true,\n    willAttachTrait(dialTrait: DialTrait): void {\n      this.owner.callObservers(\"controllerWillAttachDialTrait\", dialTrait, this.owner);\n    },\n    didAttachTrait(dialTrait: DialTrait): void {\n      const dialView = this.view;\n      if (dialView !== null) {\n        this.owner.setValue(dialTrait.value.value);\n        this.owner.setLimit(dialTrait.limit.value);\n        const dialColor = dialTrait.dialColor.value;\n        if (dialColor !== null) {\n          this.owner.setDialColor(dialColor);\n        }\n        const meterColor = dialTrait.meterColor.value;\n        if (meterColor !== null) {\n          this.owner.setMeterColor(meterColor);\n        }\n        this.owner.setLabelView(dialTrait.label.value);\n        this.owner.setLegendView(dialTrait.legend.value);\n      }\n    },\n    didDetachTrait(dialTrait: DialTrait): void {\n      this.owner.callObservers(\"controllerDidDetachDialTrait\", dialTrait, this.owner);\n    },\n    traitDidSetValue(value: number): void {\n      this.owner.setValue(value);\n    },\n    traitDidSetLimit(limit: number): void {\n      this.owner.setLimit(limit);\n    },\n    traitDidSetDialColor(dialColor: ColorOrLook | null): void {\n      this.owner.setDialColor(dialColor);\n    },\n    traitDidSetMeterColor(meterColor: ColorOrLook | null): void {\n      this.owner.setMeterColor(meterColor);\n    },\n    traitDidSetLabel(label: string | undefined): void {\n      this.owner.setLabelView(label);\n    },\n    traitDidSetLegend(legend: string | undefined): void {\n      this.owner.setLegendView(legend);\n    },\n    viewType: DialView,\n    observesView: true,\n    willAttachView(dialView: DialView): void {\n      this.owner.callObservers(\"controllerWillAttachDialView\", dialView, this.owner);\n    },\n    didAttachView(dialView: DialView): void {\n      const dialTrait = this.trait;\n      if (dialTrait !== null) {\n        const dialColor = dialTrait.dialColor.value;\n        if (dialColor !== null) {\n          this.owner.setDialColor(dialColor);\n        }\n        const meterColor = dialTrait.meterColor.value;\n        if (meterColor !== null) {\n          this.owner.setMeterColor(meterColor);\n        }\n      }\n      this.owner.label.setView(dialView.label.view);\n      this.owner.legend.setView(dialView.legend.view);\n      if (dialTrait !== null) {\n        const value = dialView.value.value;\n        const limit = dialView.limit.value;\n        this.owner.updateLabel(value, limit, dialTrait);\n        this.owner.updateLegend(value, limit, dialTrait);\n        this.owner.setValue(dialTrait.value.value);\n        this.owner.setLimit(dialTrait.limit.value);\n        this.owner.setLabelView(dialTrait.label.value);\n        this.owner.setLegendView(dialTrait.legend.value);\n      }\n    },\n    willDetachView(dialView: DialView): void {\n      this.owner.label.setView(null);\n      this.owner.legend.setView(null);\n    },\n    didDetachView(dialView: DialView): void {\n      this.owner.callObservers(\"controllerDidDetachDialView\", dialView, this.owner);\n    },\n    viewDidSetValue(value: number, dialView: DialView): void {\n      const dialTrait = this.trait;\n      if (dialTrait !== null) {\n        const limit = dialView.limit.value;\n        this.owner.updateLabel(value, limit, dialTrait);\n        this.owner.updateLegend(value, limit, dialTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetDialValue\", value, this.owner);\n    },\n    viewDidSetLimit(limit: number, dialView: DialView): void {\n      const dialTrait = this.trait;\n      if (dialTrait !== null) {\n        const value = dialView.value.value;\n        this.owner.updateLabel(value, limit, dialTrait);\n        this.owner.updateLegend(value, limit, dialTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetDialLimit\", limit, this.owner);\n    },\n    viewWillAttachLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(labelView);\n    },\n    viewDidDetachLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(null);\n    },\n    viewWillAttachLegend(legendView: GraphicsView): void {\n      this.owner.legend.setView(legendView);\n    },\n    viewDidDetachLegend(legendView: GraphicsView): void {\n      this.owner.legend.setView(null);\n    },\n  })\n  readonly dial!: TraitViewRef<this, DialTrait, DialView> & Observes<DialTrait> & Observes<DialView>;\n\n  @ViewRef({\n    viewKey: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachDialLabelView\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachDialLabelView\", labelView, this.owner);\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView>;\n\n  @ViewRef({\n    viewKey: true,\n    willAttachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachDialLegendView\", legendView, this.owner);\n    },\n    didDetachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachDialLegendView\", legendView, this.owner);\n    },\n  })\n  readonly legend!: ViewRef<this, GraphicsView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport {TypesetView} from \"@swim/graphics\";\nimport {TextRunView} from \"@swim/graphics\";\nimport {DialView} from \"./DialView\";\n\n/** @public */\nexport interface GaugeViewObserver<V extends GaugeView = GaugeView> extends GraphicsViewObserver<V> {\n  viewWillAttachTitle?(titleView: GraphicsView, view: V): void;\n\n  viewDidDetachTitle?(titleView: GraphicsView, view: V): void;\n\n  viewWillAttachDial?(dialView: DialView, targetView: View | null, view: V): void;\n\n  viewDidDetachDial?(dialView: DialView, view: V): void;\n}\n\n/** @public */\nexport class GaugeView extends GraphicsView {\n  declare readonly observerType?: Class<GaugeViewObserver>;\n\n  @Animator({valueType: Number, value: 0, updateFlags: View.NeedsLayout})\n  readonly limit!: Animator<this, number>;\n\n  @Animator({valueType: R2Point, value: R2Point.origin(), updateFlags: View.NeedsLayout})\n  readonly center!: Animator<this, R2Point>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(30), updateFlags: View.NeedsLayout})\n  readonly innerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(40), updateFlags: View.NeedsLayout})\n  readonly outerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.rad(-Math.PI / 2), updateFlags: View.NeedsLayout})\n  readonly startAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.rad(2 * Math.PI), updateFlags: View.NeedsLayout})\n  readonly sweepAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50)})\n  readonly cornerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(1), updateFlags: View.NeedsLayout})\n  readonly dialSpacing!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.etchColor})\n  readonly dialColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.accentColor})\n  readonly meterColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50)})\n  readonly labelPadding!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Number, value: 1})\n  readonly tickAlign!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(45)})\n  readonly tickRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50)})\n  readonly tickLength!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(1)})\n  readonly tickWidth!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(2)})\n  readonly tickPadding!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.legendColor})\n  readonly tickColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.legendColor})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  @ViewRef({\n    viewType: TextRunView,\n    viewKey: true,\n    binds: true,\n    initView(titleView: GraphicsView): void {\n      if (TypesetView[Symbol.hasInstance](titleView)) {\n        titleView.setIntrinsic({\n          textAlign: \"center\",\n          textBaseline: \"middle\",\n          textOrigin: this.owner.center.state,\n        });\n      }\n    },\n    willAttachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachTitle\", titleView, this.owner);\n    },\n    didDetachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachTitle\", titleView, this.owner);\n    },\n    fromLike(value: GraphicsView | LikeType<GraphicsView> | string | undefined): GraphicsView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        if (view instanceof TextRunView) {\n          view.text.setState(value !== void 0 ? value : \"\");\n        }\n        return view;\n      }\n      return super.fromLike(value);\n    },\n  })\n  readonly title!: ViewRef<this, Like<GraphicsView, string | undefined>>;\n\n  @ViewSet({\n    viewType: DialView,\n    binds: true,\n    observes: true,\n    willAttachView(dialView: DialView, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachDial\", dialView, targetView, this.owner);\n    },\n    didAttachView(dialView: DialView): void {\n      const labelView = dialView.label.view;\n      if (labelView !== null) {\n        this.attachLabelView(labelView);\n      }\n      const legendView = dialView.legend.view;\n      if (legendView !== null) {\n        this.attachLegendView(legendView);\n      }\n    },\n    willDetachView(dialView: DialView): void {\n      const legendView = dialView.legend.view;\n      if (legendView !== null) {\n        this.detachLegendView(legendView);\n      }\n      const labelView = dialView.label.view;\n      if (labelView !== null) {\n        this.detachLabelView(labelView);\n      }\n    },\n    didDetachView(dialView: DialView): void {\n      this.owner.callObservers(\"viewDidDetachDial\", dialView, this.owner);\n    },\n    viewDidSetValue(value: number): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewWillAttachLabel(labelView: GraphicsView): void {\n      this.attachLabelView(labelView);\n    },\n    viewDidDetachLabel(labelView: GraphicsView): void {\n      this.detachLabelView(labelView);\n    },\n    attachLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n    detachLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n    viewWillAttachLegend(legendView: GraphicsView): void {\n      this.attachLegendView(legendView);\n    },\n    viewDidDetachLegend(legendView: GraphicsView): void {\n      this.detachLegendView(legendView);\n    },\n    attachLegendView(legendView: GraphicsView): void {\n      // hook\n    },\n    detachLegendView(legendView: GraphicsView): void {\n      // hook\n    },\n  })\n  readonly dials!: ViewSet<this, DialView> & Observes<DialView> & {\n    attachLabelView(labelView: GraphicsView): void,\n    detachLabelView(labelView: GraphicsView): void,\n    attachLegendView(legendView: GraphicsView): void,\n    detachLegendView(legendView: GraphicsView): void,\n  };\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutGauge(this.viewFrame);\n  }\n\n  protected layoutGauge(frame: R2Box): void {\n    if (this.center.hasAffinity(Affinity.Intrinsic)) {\n      const cx = (frame.xMin + frame.xMax) / 2;\n      const cy = (frame.yMin + frame.yMax) / 2;\n      this.center.setIntrinsic(new R2Point(cx, cy));\n    }\n\n    const dialViews = this.dials.views;\n\n    let autoCount = 0;\n    for (const viewId in dialViews) {\n      const dialView = dialViews[viewId]!;\n      if (dialView.arrangement.value === \"auto\") {\n        autoCount += 1;\n      }\n    }\n\n    const size = Math.min(frame.width, frame.height);\n    const gaugeLimit = this.limit.getValue();\n    const startAngle = this.startAngle.getValue();\n    const sweepAngle = this.sweepAngle.getValue();\n    let r0 = this.innerRadius.getValue().pxValue(size);\n    const r1 = this.outerRadius.getValue().pxValue(size);\n    const rs = this.dialSpacing.getValue().pxValue(size);\n    const dr = autoCount > 1 ? (r1 - r0 - rs * (autoCount - 1)) / autoCount : r1 - r0;\n\n    for (const viewId in dialViews) {\n      const dialView = dialViews[viewId]!;\n      if (dialView.arrangement.value === \"auto\") {\n        if (isFinite(gaugeLimit)) {\n          const dialLimit = dialView.limit.getValue();\n          dialView.limit.setIntrinsic(Math.max(dialLimit, gaugeLimit));\n        }\n        dialView.startAngle.setIntrinsic(startAngle);\n        dialView.sweepAngle.setIntrinsic(sweepAngle);\n        dialView.innerRadius.setIntrinsic(Length.px(r0));\n        dialView.outerRadius.setIntrinsic(Length.px(r0 + dr));\n        r0 = r0 + dr + rs;\n      }\n    }\n\n    const titleView = this.title.view;\n    if (TypesetView[Symbol.hasInstance](titleView)) {\n      titleView.textOrigin.setIntrinsic(this.center.state);\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitSet} from \"@swim/model\";\nimport {DialTrait} from \"./DialTrait\";\n\n/** @public */\nexport interface GaugeTraitObserver<T extends GaugeTrait = GaugeTrait> extends TraitObserver<T> {\n  traitDidSetTitle?(title: string | undefined, trait: T): void;\n\n  traitDidSetLimit?(limit: number, trait: T): void;\n\n  traitWillAttachDial?(dialTrait: DialTrait, targetTrait: Trait | null, trait: T): void;\n\n  traitDidDetachDial?(dialTrait: DialTrait, trait: T): void;\n}\n\n/** @public */\nexport class GaugeTrait extends Trait {\n  declare readonly observerType?: Class<GaugeTraitObserver>;\n\n  @Property({\n    valueType: String,\n    didSetValue(title: string | undefined): void {\n      this.owner.callObservers(\"traitDidSetTitle\", title, this.owner);\n    },\n  })\n  readonly title!: Property<this, string | undefined>;\n\n  @Property({\n    valueType: Number,\n    value: 0,\n    didSetValue(limit: number): void {\n      this.owner.callObservers(\"traitDidSetLimit\", limit, this.owner);\n    },\n  })\n  readonly limit!: Property<this, number>;\n\n  @TraitSet({\n    traitType: DialTrait,\n    binds: true,\n    willAttachTrait(dialTrait: DialTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachDial\", dialTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(dialTrait: DialTrait): void {\n      if (this.owner.consuming) {\n        dialTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(dialTrait: DialTrait): void {\n      if (this.owner.consuming) {\n        dialTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(dialTrait: DialTrait): void {\n      this.owner.callObservers(\"traitDidDetachDial\", dialTrait, this.owner);\n    },\n    detectModel(model: Model): DialTrait | null {\n      return model.getTrait(DialTrait);\n    },\n  })\n  readonly dials!: TraitSet<this, DialTrait>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.dials.consumeTraits(this);\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.dials.unconsumeTraits(this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {DialView} from \"./DialView\";\nimport type {DialTrait} from \"./DialTrait\";\nimport {DialController} from \"./DialController\";\nimport {GaugeView} from \"./GaugeView\";\nimport {GaugeTrait} from \"./GaugeTrait\";\n\n/** @public */\nexport interface GaugeControllerObserver<C extends GaugeController = GaugeController> extends ControllerObserver<C> {\n  controllerWillAttachGaugeTrait?(gaugeTrait: GaugeTrait, controller: C): void;\n\n  controllerDidDetachGaugeTrait?(gaugeTrait: GaugeTrait, controller: C): void;\n\n  controllerWillAttachGaugeView?(gaugeView: GaugeView, controller: C): void;\n\n  controllerDidDetachGaugeView?(gaugeView: GaugeView | null, controller: C): void;\n\n  controllerWillAttachGaugeTitleView?(titleView: GraphicsView, controller: C): void;\n\n  controllerDidDetachGaugeTitleView?(titleView: GraphicsView, controller: C): void;\n\n  controllerWillAttachDial?(dialController: DialController, controller: C): void;\n\n  controllerDidDetachDial?(dialController: DialController, controller: C): void;\n\n  controllerWillAttachDialTrait?(dialTrait: DialTrait, dialController: DialController, controller: C): void;\n\n  controllerDidDetachDialTrait?(dialTrait: DialTrait, dialController: DialController, controller: C): void;\n\n  controllerWillAttachDialView?(dialView: DialView, dialController: DialController, controller: C): void;\n\n  controllerDidDetachDialView?(dialView: DialView, dialController: DialController, controller: C): void;\n\n  controllerDidSetDialValue?(value: number, dialController: DialController, controller: C): void;\n\n  controllerDidSetDialLimit?(limit: number, dialController: DialController, controller: C): void;\n\n  controllerWillAttachDialLabelView?(labelView: GraphicsView, dialController: DialController, controller: C): void;\n\n  controllerDidDetachDialLabelView?(labelView: GraphicsView, dialController: DialController, controller: C): void;\n\n  controllerWillAttachDialLegendView?(legendView: GraphicsView, dialController: DialController, controller: C): void;\n\n  controllerDidDetachDialLegendView?(legendView: GraphicsView, dialController: DialController, controller: C): void;\n}\n\n/** @public */\nexport class GaugeController extends Controller {\n  declare readonly observerType?: Class<GaugeControllerObserver>;\n\n  protected setTitleView(title: string | undefined): void {\n    const gaugeView = this.gauge.view;\n    if (gaugeView !== null) {\n      gaugeView.title.set(title);\n    }\n  }\n\n  protected setLimit(limit: number): void {\n    const gaugeView = this.gauge.view;\n    if (gaugeView !== null) {\n      gaugeView.limit.set(limit);\n    }\n  }\n\n  @TraitViewRef({\n    traitType: GaugeTrait,\n    observesTrait: true,\n    willAttachTrait(gaugeTrait: GaugeTrait): void {\n      this.owner.callObservers(\"controllerWillAttachGaugeTrait\", gaugeTrait, this.owner);\n    },\n    didAttachTrait(gaugeTrait: GaugeTrait): void {\n      this.owner.dials.addTraits(gaugeTrait.dials.traits);\n      const gaugeView = this.view;\n      if (gaugeView !== null) {\n        this.owner.setTitleView(gaugeTrait.title.value);\n        this.owner.setLimit(gaugeTrait.limit.value);\n      }\n    },\n    willDetachTrait(gaugeTrait: GaugeTrait): void {\n      const gaugeView = this.view;\n      if (gaugeView !== null) {\n        this.owner.setTitleView(void 0);\n        this.owner.setLimit(0);\n      }\n      this.owner.dials.deleteTraits(gaugeTrait.dials.traits);\n    },\n    didDetachTrait(gaugeTrait: GaugeTrait): void {\n      this.owner.callObservers(\"controllerDidDetachGaugeTrait\", gaugeTrait, this.owner);\n    },\n    traitDidSetTitle(title: string | undefined): void {\n      this.owner.setTitleView(title);\n    },\n    traitDidSetLimit(limit: number): void {\n      this.owner.setLimit(limit);\n    },\n    traitWillAttachDial(dialTrait: DialTrait, targetTrait: Trait): void {\n      this.owner.dials.addTrait(dialTrait, targetTrait);\n    },\n    traitDidDetachDial(dialTrait: DialTrait): void {\n      this.owner.dials.deleteTrait(dialTrait);\n    },\n    viewType: GaugeView,\n    observesView: true,\n    initView(gaugeView: GaugeView): void {\n      const dialControllers = this.owner.dials.controllers;\n      for (const controllerId in dialControllers) {\n        const dialController = dialControllers[controllerId]!;\n        const dialView = dialController.dial.view;\n        if (dialView !== null && dialView.parent === null) {\n          dialController.dial.insertView(gaugeView);\n        }\n      }\n      this.owner.title.setView(gaugeView.title.view);\n      const gaugeTrait = this.trait;\n      if (gaugeTrait !== null) {\n        this.owner.setTitleView(gaugeTrait.title.value);\n        this.owner.setLimit(gaugeTrait.limit.value);\n      }\n    },\n    deinitView(gaugeView: GaugeView): void {\n      this.owner.title.setView(null);\n    },\n    willAttachView(gaugeView: GaugeView): void {\n      this.owner.callObservers(\"controllerWillAttachGaugeView\", gaugeView, this.owner);\n    },\n    didDetachView(gaugeView: GaugeView): void {\n      this.owner.callObservers(\"controllerDidDetachGaugeView\", gaugeView, this.owner);\n    },\n    viewWillAttachTitle(titleView: GraphicsView): void {\n      this.owner.title.setView(titleView);\n    },\n    viewDidDetachTitle(titleView: GraphicsView): void {\n      this.owner.title.setView(null);\n    },\n  })\n  readonly gauge!: TraitViewRef<this, GaugeTrait, GaugeView> & Observes<GaugeTrait> & Observes<GaugeView>;\n\n  @ViewRef({\n    viewKey: true,\n    willAttachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachGaugeTitleView\", titleView, this.owner);\n    },\n    didDetachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachGaugeTitleView\", titleView, this.owner);\n    },\n  })\n  readonly title!: ViewRef<this, GraphicsView>;\n\n  @Property({valueType: Timing, value: true})\n  get dialTiming(): Property<this, Timing | boolean | undefined> {\n    return Property.getter();\n  }\n\n  @TraitViewControllerSet({\n    controllerType: DialController,\n    binds: true,\n    observes: true,\n    get parentView(): GaugeView | null {\n      return this.owner.gauge.view;\n    },\n    getTraitViewRef(dialController: DialController): TraitViewRef<unknown, DialTrait, DialView> {\n      return dialController.dial;\n    },\n    willAttachController(dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDial\", dialController, this.owner);\n    },\n    didAttachController(dialController: DialController): void {\n      const dialTrait = dialController.dial.trait;\n      if (dialTrait !== null) {\n        this.attachDialTrait(dialTrait, dialController);\n      }\n      const dialView = dialController.dial.view;\n      if (dialView !== null) {\n        this.attachDialView(dialView, dialController);\n      }\n    },\n    willDetachController(dialController: DialController): void {\n      const dialView = dialController.dial.view;\n      if (dialView !== null) {\n        this.detachDialView(dialView, dialController);\n      }\n      const dialTrait = dialController.dial.trait;\n      if (dialTrait !== null) {\n        this.detachDialTrait(dialTrait, dialController);\n      }\n    },\n    didDetachController(dialController: DialController): void {\n      this.owner.callObservers(\"controllerDidDetachDial\", dialController, this.owner);\n    },\n    controllerWillAttachDialTrait(dialTrait: DialTrait, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDialTrait\", dialTrait, dialController, this.owner);\n      this.attachDialTrait(dialTrait, dialController);\n    },\n    controllerDidDetachDialTrait(dialTrait: DialTrait, dialController: DialController): void {\n      this.detachDialTrait(dialTrait, dialController);\n      this.owner.callObservers(\"controllerDidDetachDialTrait\", dialTrait, dialController, this.owner);\n    },\n    attachDialTrait(dialTrait: DialTrait, dialController: DialController): void {\n      // hook\n    },\n    detachDialTrait(dialTrait: DialTrait, dialController: DialController): void {\n      // hook\n    },\n    controllerWillAttachDialView(dialView: DialView, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDialView\", dialView, dialController, this.owner);\n      this.attachDialView(dialView, dialController);\n    },\n    controllerDidDetachDialView(dialView: DialView, dialController: DialController): void {\n      this.detachDialView(dialView, dialController);\n      this.owner.callObservers(\"controllerDidDetachDialView\", dialView, dialController, this.owner);\n    },\n    attachDialView(dialView: DialView, dialController: DialController): void {\n      const labelView = dialView.label.view;\n      if (labelView !== null) {\n        this.attachDialLabelView(labelView, dialController);\n      }\n      const legendView = dialView.legend.view;\n      if (legendView !== null) {\n        this.attachDialLegendView(legendView, dialController);\n      }\n    },\n    detachDialView(dialView: DialView, dialController: DialController): void {\n      const legendView = dialView.legend.view;\n      if (legendView !== null) {\n        this.detachDialLegendView(legendView, dialController);\n      }\n      const labelView = dialView.label.view;\n      if (labelView !== null) {\n        this.detachDialLabelView(labelView, dialController);\n      }\n      dialView.remove();\n    },\n    controllerDidSetDialValue(value: number, dialController: DialController): void {\n      this.owner.callObservers(\"controllerDidSetDialValue\", value, dialController, this.owner);\n    },\n    controllerDidSetDialLimit(limit: number, dialController: DialController): void {\n      this.owner.callObservers(\"controllerDidSetDialLimit\", limit, dialController, this.owner);\n    },\n    controllerWillAttachDialLabelView(labelView: GraphicsView, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDialLabelView\", labelView, dialController, this.owner);\n      this.attachDialLabelView(labelView, dialController);\n    },\n    controllerDidDetachDialLabelView(labelView: GraphicsView, dialController: DialController): void {\n      this.detachDialLabelView(labelView, dialController);\n      this.owner.callObservers(\"controllerDidDetachDialLabelView\", labelView, dialController, this.owner);\n    },\n    attachDialLabelView(labelView: GraphicsView, dialController: DialController): void {\n      // hook\n    },\n    detachDialLabelView(labelView: GraphicsView, dialController: DialController): void {\n      // hook\n    },\n    controllerWillAttachDialLegendView(legendView: GraphicsView, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDialLegendView\", legendView, dialController, this.owner);\n      this.attachDialLegendView(legendView, dialController);\n    },\n    controllerDidDetachDialLegendView(legendView: GraphicsView, dialController: DialController): void {\n      this.detachDialLegendView(legendView, dialController);\n      this.owner.callObservers(\"controllerDidDetachDialLegendView\", legendView, dialController, this.owner);\n    },\n    attachDialLegendView(legendView: GraphicsView, dialController: DialController): void {\n      // hook\n    },\n    detachDialLegendView(legendView: GraphicsView, dialController: DialController): void {\n      // hook\n    },\n  })\n  readonly dials!: TraitViewControllerSet<this, DialTrait, DialView, DialController> & Observes<DialController> & {\n    attachDialTrait(dialTrait: DialTrait, dialController: DialController): void;\n    detachDialTrait(dialTrait: DialTrait, dialController: DialController): void;\n    attachDialView(dialView: DialView, dialController: DialController): void;\n    detachDialView(dialView: DialView, dialController: DialController): void;\n    attachDialLabelView(labelView: GraphicsView, dialController: DialController): void;\n    detachDialLabelView(labelView: GraphicsView, dialController: DialController): void;\n    attachDialLegendView(legendView: GraphicsView, dialController: DialController): void;\n    detachDialLegendView(legendView: GraphicsView, dialController: DialController): void;\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport {FillView} from \"@swim/graphics\";\nimport {Arc} from \"@swim/graphics\";\nimport {TypesetView} from \"@swim/graphics\";\nimport {TextRunView} from \"@swim/graphics\";\n\n/** @public */\nexport interface SliceViewObserver<V extends SliceView = SliceView> extends GraphicsViewObserver<V> {\n  viewDidSetValue?(value: number, view: V): void;\n\n  viewDidSetTotal?(total: number, view: V): void;\n\n  viewWillAttachLabel?(labelView: GraphicsView, view: V): void;\n\n  viewDidDetachLabel?(labelView: GraphicsView, view: V): void;\n\n  viewWillAttachLegend?(legendView: GraphicsView, view: V): void;\n\n  viewDidDetachLegend?(legendView: GraphicsView, view: V): void;\n}\n\n/** @public */\nexport class SliceView extends GraphicsView {\n  declare readonly observerType?: Class<SliceViewObserver>;\n\n  @Animator({\n    valueType: Number,\n    value: 0,\n    updateFlags: View.NeedsRender,\n    didSetValue(value: number): void {\n      this.owner.callObservers(\"viewDidSetValue\", value, this.owner);\n    },\n  })\n  readonly value!: Animator<this, number>;\n\n  @Animator({\n    valueType: Number,\n    value: 1,\n    updateFlags: View.NeedsRender,\n    didSetValue(total: number): void {\n      this.owner.callObservers(\"viewDidSetTotal\", total, this.owner);\n    },\n  })\n  readonly total!: Animator<this, number>;\n\n  @Animator({valueType: R2Point, value: R2Point.origin(), inherits: true, updateFlags: View.NeedsRender})\n  readonly center!: Animator<this, R2Point>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(3), inherits: true, updateFlags: View.NeedsRender})\n  readonly innerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(25), inherits: true, updateFlags: View.NeedsRender})\n  readonly outerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly phaseAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.deg(2), inherits: true, updateFlags: View.NeedsRender})\n  readonly padAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly padRadius!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero(), inherits: true, updateFlags: View.NeedsRender})\n  readonly cornerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50), inherits: true, updateFlags: View.NeedsRender})\n  readonly labelRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.accentColor, inherits: true, updateFlags: View.NeedsRender})\n  readonly sliceColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 0.5, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickAlign!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(30), inherits: true, updateFlags: View.NeedsRender})\n  readonly tickRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50), inherits: true, updateFlags: View.NeedsRender})\n  readonly tickLength!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(1), inherits: true, updateFlags: View.NeedsRender})\n  readonly tickWidth!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(2), inherits: true, updateFlags: View.NeedsRender})\n  readonly tickPadding!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.legendColor, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.legendColor, inherits: true, updateFlags: View.NeedsRender})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  @ViewRef({\n    viewType: TextRunView,\n    viewKey: true,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachLabel\", labelView, this.owner);\n    },\n    fromLike(value: GraphicsView | LikeType<GraphicsView> | string | undefined): GraphicsView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        if (view instanceof TextRunView) {\n          view.text.setState(value !== void 0 ? value : \"\");\n        }\n        return view;\n      }\n      return super.fromLike(value);\n    },\n  })\n  readonly label!: ViewRef<this, Like<GraphicsView, string | undefined>>;\n\n  @ViewRef({\n    viewType: TextRunView,\n    viewKey: true,\n    binds: true,\n    willAttachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachLegend\", legendView, this.owner);\n    },\n    didDetachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachLegend\", legendView, this.owner);\n    },\n    fromLike(value: GraphicsView | LikeType<GraphicsView> | string | undefined): GraphicsView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        if (view instanceof TextRunView) {\n          view.text.setState(value !== void 0 ? value : \"\");\n        }\n        return view;\n      }\n      return super.fromLike(value);\n    },\n  })\n  readonly legend!: ViewRef<this, Like<GraphicsView, string | undefined>>;\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.center.recohere(this.updateTime);\n  }\n\n  protected override onRender(): void {\n    super.onRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderSlice(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected renderSlice(context: PaintingContext, frame: R2Box): void {\n    const width = frame.width;\n    const height = frame.height;\n    const size = Math.min(width, height);\n    const value = this.value.getValue();\n    const total = this.total.getValue();\n    const delta = total !== 0 ? value / total : 0;\n\n    const center = this.center.getValue();\n    const innerRadius = this.innerRadius.getValue().px(size);\n    const outerRadius = this.outerRadius.getValue().px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.phaseAngle.getValue().rad();\n    const sweepAngle = Angle.rad(2 * Math.PI * delta);\n    const padAngle = this.padAngle.getValue();\n    const padRadius = this.padRadius.getValueOr(null);\n    const cornerRadius = this.cornerRadius.getValue().px(deltaRadius);\n    const arc = new Arc(center, innerRadius, outerRadius, startAngle,\n                        sweepAngle, padAngle, padRadius, cornerRadius);\n\n    const sliceColor = this.sliceColor.value;\n    if (sliceColor !== null) {\n      // save\n      const contextFillStyle = context.fillStyle;\n\n      context.beginPath();\n      context.fillStyle = sliceColor.toString();\n      arc.draw(context, frame);\n      context.fill();\n\n      // restore\n      context.fillStyle = contextFillStyle;\n    }\n\n    const labelView = this.label.view;\n    if (labelView !== null && !labelView.hidden) {\n      const labelRadius = this.labelRadius.getValue().pxValue(deltaRadius);\n      const labelAngle = startAngle.value + sweepAngle.value / 2;\n      const r = innerRadius.value + labelRadius;\n      const rx = r * Math.cos(labelAngle);\n      const ry = r * Math.sin(labelAngle);\n\n      if (TypesetView[Symbol.hasInstance](labelView)) {\n        labelView.setIntrinsic({\n          textAlign: \"center\",\n          textBaseline: \"middle\",\n          textOrigin: new R2Point(center.x + rx, center.y + ry),\n        });\n      }\n    }\n\n    const legendView = this.legend.view;\n    if (legendView !== null && !legendView.hidden) {\n      const tickAlign = this.tickAlign.getValue();\n      const tickAngle = startAngle.value + sweepAngle.value * tickAlign;\n      const tickRadius = this.tickRadius.getValue().pxValue(size);\n      const tickLength = this.tickLength.getValue().pxValue(width);\n      const tickWidth = this.tickWidth.getValue().pxValue(size);\n      const tickColor = this.tickColor.value;\n\n      const cx = center.x;\n      const cy = center.y;\n      const r1x = outerRadius.value * Math.cos(tickAngle + Equivalent.Epsilon);\n      const r1y = outerRadius.value * Math.sin(tickAngle + Equivalent.Epsilon);\n      const r2x = tickRadius * Math.cos(tickAngle + Equivalent.Epsilon);\n      const r2y = tickRadius * Math.sin(tickAngle + Equivalent.Epsilon);\n      let dx = 0;\n\n      if (tickColor !== null && tickWidth !== 0) {\n        // save\n        const contextLineWidth = context.lineWidth;\n        const contextStrokeStyle = context.strokeStyle;\n\n        context.beginPath();\n        context.lineWidth = tickWidth;\n        context.strokeStyle = tickColor.toString();\n        context.moveTo(cx + r1x, cy + r1y);\n        context.lineTo(cx + r2x, cy + r2y);\n        if (tickLength !== 0) {\n          if (r2x >= 0) {\n            context.lineTo(cx + tickLength, cy + r2y);\n            dx = tickLength - r2x;\n          } else if (r2x < 0) {\n            context.lineTo(cx - tickLength, cy + r2y);\n            dx = tickLength + r2x;\n          }\n        }\n        context.stroke();\n\n        // restore\n        context.lineWidth = contextLineWidth;\n        context.strokeStyle = contextStrokeStyle;\n      }\n\n      let textAlign: CanvasTextAlign;\n      if (r2x >= 0) {\n        if (r2y >= 0) { // top-right\n          textAlign = \"end\";\n        } else { // bottom-right\n          textAlign = \"end\";\n        }\n      } else {\n        dx = -dx;\n        if (r2y < 0) { // bottom-left\n          textAlign = \"start\";\n        } else { // top-left\n          textAlign = \"start\";\n        }\n      }\n\n      if (TypesetView[Symbol.hasInstance](legendView)) {\n        const tickPadding = this.tickPadding.getValue().pxValue(size);\n        if (FillView[Symbol.hasInstance](legendView)) {\n          legendView.fill.setIntrinsic(tickColor);\n        }\n        legendView.setIntrinsic({\n          textAlign,\n          textBaseline: \"alphabetic\",\n          textOrigin: new R2Point(cx + r2x + dx, cy + r2y - tickPadding),\n        });\n      }\n    }\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestSlice(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestSlice(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const size = Math.min(frame.width, frame.height);\n    const value = this.value.getValue();\n    const total = this.total.getValue();\n    const delta = total !== 0 ? value / total : 0;\n\n    const center = this.center.getValue();\n    const innerRadius = this.innerRadius.getValue().px(size);\n    const outerRadius = this.outerRadius.getValue().px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.phaseAngle.getValue().rad();\n    const sweepAngle = Angle.rad(2 * Math.PI * delta);\n    const padAngle = this.padAngle.getValue();\n    const padRadius = this.padRadius.getValueOr(null);\n    const cornerRadius = this.cornerRadius.getValue().px(deltaRadius);\n    const arc = new Arc(center, innerRadius, outerRadius, startAngle,\n                        sweepAngle, padAngle, padRadius, cornerRadius);\n\n    context.beginPath();\n    arc.draw(context, frame);\n    if (context.isPointInPath(x, y)) {\n      return this;\n    }\n    return null;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\n\n/** @public */\nexport interface SliceTraitObserver<T extends SliceTrait = SliceTrait> extends TraitObserver<T> {\n  traitDidSetValue?(value: number, trait: T): void;\n\n  traitDidSetSliceColor?(sliceColor: ColorOrLook | null, trait: T): void;\n\n  traitDidSetLabel?(label: string | undefined, trait: T): void;\n\n  traitDidSetLegend?(legend: string | undefined, trait: T): void;\n}\n\n/** @public */\nexport class SliceTrait extends Trait {\n  declare readonly observerType?: Class<SliceTraitObserver>;\n\n  @Property({\n    valueType: Number,\n    value: 0,\n    didSetValue(value: number): void {\n      this.owner.callObservers(\"traitDidSetValue\", value, this.owner);\n    },\n  })\n  readonly value!: Property<this, number>;\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    didSetValue(sliceColor: ColorOrLook | null): void {\n      this.owner.callObservers(\"traitDidSetSliceColor\", sliceColor, this.owner);\n    },\n  })\n  readonly sliceColor!: Property<this, ColorOrLook | null>;\n\n  formatLabel(value: number): string | undefined {\n    return void 0;\n  }\n\n  @Property({\n    valueType: String,\n    didSetValue(label: string | undefined): void {\n      this.owner.callObservers(\"traitDidSetLabel\", label, this.owner);\n    },\n  })\n  readonly label!: Property<this, string | undefined>;\n\n  formatLegend(value: number): string | undefined {\n    return void 0;\n  }\n\n  @Property({\n    valueType: String,\n    didSetValue(legend: string | undefined): void {\n      this.owner.callObservers(\"traitDidSetLegend\", legend, this.owner);\n    },\n  })\n  readonly legend!: Property<this, string | undefined>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {SliceView} from \"./SliceView\";\nimport {SliceTrait} from \"./SliceTrait\";\n\n/** @public */\nexport interface SliceControllerObserver<C extends SliceController = SliceController> extends ControllerObserver<C> {\n  controllerWillAttachSliceTrait?(sliceTrait: SliceTrait, controller: C): void;\n\n  controllerDidDetachSliceTrait?(sliceTrait: SliceTrait, controller: C): void;\n\n  controllerWillAttachSliceView?(sliceView: SliceView, controller: C): void;\n\n  controllerDidDetachSliceView?(sliceView: SliceView, controller: C): void;\n\n  controllerDidSetSliceValue?(value: number, controller: C): void;\n\n  controllerWillAttachSliceLabelView?(labelView: GraphicsView, controller: C): void;\n\n  controllerDidDetachSliceLabelView?(labelView: GraphicsView, controller: C): void;\n\n  controllerWillAttachSliceLegendView?(legendView: GraphicsView, controller: C): void;\n\n  controllerDidDetachSliceLegendView?(legendView: GraphicsView, controller: C): void;\n}\n\n/** @public */\nexport class SliceController extends Controller {\n  declare readonly observerType?: Class<SliceControllerObserver>;\n\n  protected updateLabel(value: number, sliceTrait: SliceTrait): void {\n    if (sliceTrait.label.hasAffinity(Affinity.Intrinsic)) {\n      const label = sliceTrait.formatLabel(value);\n      if (label !== void 0) {\n        sliceTrait.label.setIntrinsic(label);\n      }\n    }\n  }\n\n  protected updateLegend(value: number, sliceTrait: SliceTrait): void {\n    if (sliceTrait.legend.hasAffinity(Affinity.Intrinsic)) {\n      const legend = sliceTrait.formatLegend(value);\n      if (legend !== void 0) {\n        sliceTrait.legend.setIntrinsic(legend);\n      }\n    }\n  }\n\n  protected setValue(value: number, timing?: TimingLike | boolean): void {\n    const sliceView = this.slice.view;\n    if (sliceView !== null && sliceView.value.hasAffinity(Affinity.Intrinsic)) {\n      if (timing === void 0 || timing === true) {\n        timing = this.sliceTiming.value;\n        if (timing === true) {\n          timing = sliceView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      sliceView.value.setIntrinsic(value, timing);\n    }\n  }\n\n  protected setSliceColor(sliceColor: ColorOrLook | null, timing?: TimingLike | boolean): void {\n    const sliceView = this.slice.view;\n    if (sliceView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.sliceTiming.value;\n        if (timing === true) {\n          timing = sliceView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      sliceView.sliceColor.setIntrinsic(sliceColor, timing);\n    }\n  }\n\n  protected setLabelView(label: string | undefined): void {\n    const sliceView = this.slice.view;\n    if (sliceView !== null) {\n      sliceView.label.set(label !== void 0 ? label : \"\");\n    }\n  }\n\n  protected setLegendView(legend: string | undefined): void {\n    const sliceView = this.slice.view;\n    if (sliceView !== null) {\n      sliceView.legend.set(legend !== void 0 ? legend : \"\");\n    }\n  }\n\n  @Property({valueType: Timing, inherits: true})\n  get sliceTiming(): Property<this, Timing | boolean | undefined> {\n    return Property.getter();\n  }\n\n  @TraitViewRef({\n    traitType: SliceTrait,\n    observesTrait: true,\n    willAttachTrait(sliceTrait: SliceTrait): void {\n      this.owner.callObservers(\"controllerWillAttachSliceTrait\", sliceTrait, this.owner);\n    },\n    didAttachTrait(sliceTrait: SliceTrait): void {\n      const sliceView = this.view;\n      if (sliceView !== null) {\n        this.owner.setValue(sliceTrait.value.value);\n        const sliceColor = sliceTrait.sliceColor.value;\n        if (sliceColor !== null) {\n          this.owner.setSliceColor(sliceColor);\n        }\n        this.owner.setLabelView(sliceTrait.label.value);\n        this.owner.setLegendView(sliceTrait.legend.value);\n      }\n    },\n    didDetachTrait(sliceTrait: SliceTrait): void {\n      this.owner.callObservers(\"controllerDidDetachSliceTrait\", sliceTrait, this.owner);\n    },\n    traitDidSetValue(value: number): void {\n      this.owner.setValue(value);\n    },\n    traitDidSetSliceColor(sliceColor: ColorOrLook | null): void {\n      this.owner.setSliceColor(sliceColor);\n    },\n    traitDidSetLabel(label: string | undefined): void {\n      this.owner.setLabelView(label);\n    },\n    traitDidSetLegend(legend: string | undefined): void {\n      this.owner.setLegendView(legend);\n    },\n    viewType: SliceView,\n    observesView: true,\n    willAttachView(sliceView: SliceView): void {\n      this.owner.callObservers(\"controllerWillAttachSliceView\", sliceView, this.owner);\n    },\n    didAttachView(sliceView: SliceView): void {\n      const sliceTrait = this.trait;\n      if (sliceTrait !== null) {\n        const sliceColor = sliceTrait.sliceColor.value;\n        if (sliceColor !== null) {\n          this.owner.setSliceColor(sliceColor);\n        }\n      }\n      this.owner.label.setView(sliceView.label.view);\n      this.owner.legend.setView(sliceView.legend.view);\n      const value = sliceView.value.value;\n      sliceView.setHidden(value === 0);\n      if (sliceTrait !== null) {\n        this.owner.updateLabel(value, sliceTrait);\n        this.owner.updateLegend(value, sliceTrait);\n        this.owner.setValue(sliceTrait.value.value);\n        this.owner.setLabelView(sliceTrait.label.value);\n        this.owner.setLegendView(sliceTrait.legend.value);\n      }\n    },\n    willDetachView(sliceView: SliceView): void {\n      this.owner.label.setView(null);\n      this.owner.legend.setView(null);\n    },\n    didDetachView(sliceView: SliceView): void {\n      this.owner.callObservers(\"controllerDidDetachSliceView\", sliceView, this.owner);\n    },\n    viewDidSetValue(value: number, sliceView: SliceView): void {\n      sliceView.setHidden(value === 0);\n      const sliceTrait = this.trait;\n      if (sliceTrait !== null) {\n        this.owner.updateLabel(value, sliceTrait);\n        this.owner.updateLegend(value, sliceTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetSliceValue\", value, this.owner);\n    },\n    viewWillAttachLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(labelView);\n    },\n    viewDidDetachLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(null);\n    },\n    viewWillAttachLegend(legendView: GraphicsView): void {\n      this.owner.legend.setView(legendView);\n    },\n    viewDidDetachLegend(legendView: GraphicsView): void {\n      this.owner.legend.setView(null);\n    },\n  })\n  readonly slice!: TraitViewRef<this, SliceTrait, SliceView> & Observes<SliceTrait> & Observes<SliceView>;\n\n  @ViewRef({\n    viewKey: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachSliceLabelView\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachSliceLabelView\", labelView, this.owner);\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView>;\n\n  @ViewRef({\n    viewKey: true,\n    willAttachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachSliceLegendView\", legendView, this.owner);\n    },\n    didDetachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachSliceLegendView\", legendView, this.owner);\n    },\n  })\n  readonly legend!: ViewRef<this, GraphicsView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport {TypesetView} from \"@swim/graphics\";\nimport {TextRunView} from \"@swim/graphics\";\nimport {SliceView} from \"./SliceView\";\n\n/** @public */\nexport interface PieViewObserver<V extends PieView = PieView> extends GraphicsViewObserver<V> {\n  viewWillAttachTitle?(titleView: GraphicsView, view: V): void;\n\n  viewDidDetachTitle?(titleView: GraphicsView, view: V): void;\n\n  viewWillAttachSlice?(sliceView: SliceView, targetView: View | null, view: V): void;\n\n  viewDidDetachSlice?(sliceView: SliceView, view: V): void;\n}\n\n/** @public */\nexport class PieView extends GraphicsView {\n  declare readonly observerType?: Class<PieViewObserver>;\n\n  @Animator({valueType: Number, value: 0, updateFlags: View.NeedsLayout})\n  readonly limit!: Animator<this, number>;\n\n  @Animator({valueType: R2Point, value: R2Point.origin(), updateFlags: View.NeedsLayout})\n  readonly center!: Animator<this, R2Point>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.rad(-Math.PI / 2), updateFlags: View.NeedsLayout})\n  readonly baseAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(3)})\n  readonly innerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(25)})\n  readonly outerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Angle, value: Angle.deg(2)})\n  readonly padAngle!: ThemeAnimator<this, Angle>;\n\n  @ThemeAnimator({valueType: Length, value: null})\n  readonly padRadius!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero()})\n  readonly cornerRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50)})\n  readonly labelRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.accentColor})\n  readonly sliceColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 0.5})\n  readonly tickAlign!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(30)})\n  readonly tickRadius!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.pct(50)})\n  readonly tickLength!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(1)})\n  readonly tickWidth!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(2)})\n  readonly tickPadding!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.legendColor})\n  readonly tickColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.legendColor})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  @ViewRef({\n    viewType: TextRunView,\n    viewKey: true,\n    binds: true,\n    initView(titleView: GraphicsView): void {\n      if (TypesetView[Symbol.hasInstance](titleView)) {\n        titleView.setIntrinsic({\n          textAlign: \"center\",\n          textBaseline: \"middle\",\n          textOrigin: this.owner.center.state,\n        });\n      }\n    },\n    willAttachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachTitle\", titleView, this.owner);\n    },\n    didDetachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachTitle\", titleView, this.owner);\n    },\n    fromLike(value: GraphicsView | LikeType<GraphicsView> | string | undefined): GraphicsView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        if (view instanceof TextRunView) {\n          view.text.setState(value !== void 0 ? value : \"\");\n        }\n        return view;\n      }\n      return super.fromLike(value);\n    },\n  })\n  readonly title!: ViewRef<this, Like<GraphicsView, string | undefined>>;\n\n  @ViewSet({\n    viewType: SliceView,\n    binds: true,\n    observes: true,\n    willAttachView(sliceView: SliceView, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachSlice\", sliceView, targetView, this.owner);\n    },\n    didAttachView(sliceView: SliceView): void {\n      const labelView = sliceView.label.view;\n      if (labelView !== null) {\n        this.attachLabelView(labelView);\n      }\n      const legendView = sliceView.legend.view;\n      if (legendView !== null) {\n        this.attachLegendView(legendView);\n      }\n    },\n    willDetachView(sliceView: SliceView): void {\n      const legendView = sliceView.legend.view;\n      if (legendView !== null) {\n        this.detachLegendView(legendView);\n      }\n      const labelView = sliceView.label.view;\n      if (labelView !== null) {\n        this.detachLabelView(labelView);\n      }\n    },\n    didDetachView(sliceView: SliceView): void {\n      this.owner.callObservers(\"viewDidDetachSlice\", sliceView, this.owner);\n    },\n    viewDidSetValue(value: number): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewWillAttachLabel(labelView: GraphicsView): void {\n      this.attachLabelView(labelView);\n    },\n    viewDidDetachLabel(labelView: GraphicsView): void {\n      this.detachLabelView(labelView);\n    },\n    attachLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n    detachLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n    viewWillAttachLegend(legendView: GraphicsView): void {\n      this.attachLegendView(legendView);\n    },\n    viewDidDetachLegend(legendView: GraphicsView): void {\n      this.detachLegendView(legendView);\n    },\n    attachLegendView(legendView: GraphicsView): void {\n      // hook\n    },\n    detachLegendView(legendView: GraphicsView): void {\n      // hook\n    },\n  })\n  readonly slices!: ViewSet<this, SliceView> & Observes<SliceView> & {\n    attachLabelView(labelView: GraphicsView): void,\n    detachLabelView(labelView: GraphicsView): void,\n    attachLegendView(legendView: GraphicsView): void,\n    detachLegendView(legendView: GraphicsView): void,\n  };\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutPie(this.viewFrame);\n  }\n\n  protected layoutPie(frame: R2Box): void {\n    if (this.center.hasAffinity(Affinity.Intrinsic)) {\n      const cx = (frame.xMin + frame.xMax) / 2;\n      const cy = (frame.yMin + frame.yMax) / 2;\n      this.center.setIntrinsic(new R2Point(cx, cy));\n    }\n\n    const sliceViews = this.slices.views;\n\n    let total = 0;\n    for (const viewId in sliceViews) {\n      const sliceView = sliceViews[viewId]!;\n      const value = sliceView.value.getValue();\n      if (isFinite(value)) {\n        total += value;\n      }\n    }\n    total = Math.max(total, this.limit.getValue());\n\n    let baseAngle = this.baseAngle.getValue().rad();\n    for (const viewId in sliceViews) {\n      const sliceView = sliceViews[viewId]!;\n      sliceView.total.setIntrinsic(total);\n      sliceView.phaseAngle.setIntrinsic(baseAngle);\n      const value = sliceView.value.getValue();\n      if (isFinite(value)) {\n        const delta = total !== 0 ? value / total : 0;\n        baseAngle = Angle.rad(baseAngle.value + 2 * Math.PI * delta);\n      }\n    }\n\n    const titleView = this.title.view;\n    if (TypesetView[Symbol.hasInstance](titleView)) {\n      titleView.textOrigin.setIntrinsic(this.center.value);\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitSet} from \"@swim/model\";\nimport {SliceTrait} from \"./SliceTrait\";\n\n/** @public */\nexport interface PieTraitObserver<T extends PieTrait = PieTrait> extends TraitObserver<T> {\n  traitDidSetTitle?(title: string | undefined, trait: T): void;\n\n  traitWillAttachSlice?(sliceTrait: SliceTrait, targetTrait: Trait | null, trait: T): void;\n\n  traitDidDetachSlice?(sliceTrait: SliceTrait, trait: T): void;\n}\n\n/** @public */\nexport class PieTrait extends Trait {\n  declare readonly observerType?: Class<PieTraitObserver>;\n\n  @Property({\n    valueType: String,\n    didSetValue(title: string | undefined): void {\n      this.owner.callObservers(\"traitDidSetTitle\", title, this.owner);\n    },\n  })\n  readonly title!: Property<this, string | undefined>;\n\n  @TraitSet({\n    traitType: SliceTrait,\n    binds: true,\n    willAttachTrait(sliceTrait: SliceTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachSlice\", sliceTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(sliceTrait: SliceTrait): void {\n      if (this.owner.consuming) {\n        sliceTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(sliceTrait: SliceTrait): void {\n      if (this.owner.consuming) {\n        sliceTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(sliceTrait: SliceTrait): void {\n      this.owner.callObservers(\"traitDidDetachSlice\", sliceTrait, this.owner);\n    },\n    detectModel(model: Model): SliceTrait | null {\n      return model.getTrait(SliceTrait);\n    },\n  })\n  readonly slices!: TraitSet<this, SliceTrait>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.slices.consumeTraits(this);\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.slices.unconsumeTraits(this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {SliceView} from \"./SliceView\";\nimport type {SliceTrait} from \"./SliceTrait\";\nimport {SliceController} from \"./SliceController\";\nimport {PieView} from \"./PieView\";\nimport {PieTrait} from \"./PieTrait\";\n\n/** @public */\nexport interface PieControllerObserver<C extends PieController = PieController> extends ControllerObserver<C> {\n  controllerWillAttachPieTrait?(pieTrait: PieTrait, controller: C): void;\n\n  controllerDidDetachPieTrait?(pieTrait: PieTrait, controller: C): void;\n\n  controllerWillAttachPieView?(pieView: PieView, controller: C): void;\n\n  controllerDidDetachPieView?(pieView: PieView, controller: C): void;\n\n  controllerWillAttachPieTitleView?(titleView: GraphicsView, controller: C): void;\n\n  controllerDidDetachPieTitleView?(titleView: GraphicsView, controller: C): void;\n\n  controllerWillAttachSlice?(sliceController: SliceController, controller: C): void;\n\n  controllerDidDetachSlice?(sliceController: SliceController, controller: C): void;\n\n  controllerWillAttachSliceTrait?(sliceTrait: SliceTrait, sliceController: SliceController, controller: C): void;\n\n  controllerDidDetachSliceTrait?(sliceTrait: SliceTrait, sliceController: SliceController, controller: C): void;\n\n  controllerWillAttachSliceView?(sliceView: SliceView, sliceController: SliceController, controller: C): void;\n\n  controllerDidDetachSliceView?(sliceView: SliceView, sliceController: SliceController, controller: C): void;\n\n  controllerDidSetSliceValue?(sliceValue: number, sliceController: SliceController, controller: C): void;\n\n  controllerWillAttachSliceLabelView?(labelView: GraphicsView, sliceController: SliceController, controller: C): void;\n\n  controllerDidDetachSliceLabelView?(labelView: GraphicsView, sliceController: SliceController, controller: C): void;\n\n  controllerWillAttachSliceLegendView?(legendView: GraphicsView, sliceController: SliceController, controller: C): void;\n\n  controllerDidDetachSliceLegendView?(legendView: GraphicsView, sliceController: SliceController, controller: C): void;\n}\n\n/** @public */\nexport class PieController extends Controller {\n  declare readonly observerType?: Class<PieControllerObserver>;\n\n  protected setTitleView(title: string | undefined): void {\n    const pieView = this.pie.view;\n    if (pieView !== null) {\n      pieView.title.set(title);\n    }\n  }\n\n  @TraitViewRef({\n    traitType: PieTrait,\n    observesTrait: true,\n    willAttachTrait(pieTrait: PieTrait): void {\n      this.owner.callObservers(\"controllerWillAttachPieTrait\", pieTrait, this.owner);\n    },\n    didAttachTrait(pieTrait: PieTrait): void {\n      this.owner.slices.addTraits(pieTrait.slices.traits);\n      const pieView = this.view;\n      if (pieView !== null) {\n        this.owner.setTitleView(pieTrait.title.value);\n      }\n    },\n    willDetachTrait(pieTrait: PieTrait): void {\n      const pieView = this.view;\n      if (pieView !== null) {\n        this.owner.setTitleView(pieTrait.title.value);\n      }\n      this.owner.slices.deleteTraits(pieTrait.slices.traits);\n    },\n    didDetachTrait(pieTrait: PieTrait): void {\n      this.owner.callObservers(\"controllerDidDetachPieTrait\", pieTrait, this.owner);\n    },\n    traitDidSetTitle(title: string | undefined): void {\n      this.owner.setTitleView(title);\n    },\n    traitWillAttachSlice(sliceTrait: SliceTrait, targetTrait: Trait): void {\n      this.owner.slices.addTrait(sliceTrait);\n    },\n    traitDidDetachSlice(sliceTrait: SliceTrait): void {\n      this.owner.slices.deleteTrait(sliceTrait);\n    },\n    viewType: PieView,\n    observesView: true,\n    initView(pieView: PieView): void {\n      const sliceControllers = this.owner.slices.controllers;\n      for (const controllerId in sliceControllers) {\n        const sliceController = sliceControllers[controllerId]!;\n        const sliceView = sliceController.slice.view;\n        if (sliceView !== null && sliceView.parent === null) {\n          sliceController.slice.insertView(pieView);\n        }\n      }\n      this.owner.title.setView(pieView.title.view);\n      const pieTrait = this.trait;\n      if (pieTrait !== null) {\n        this.owner.setTitleView(pieTrait.title.value);\n      }\n    },\n    deinitView(pieView: PieView): void {\n      this.owner.title.setView(null);\n    },\n    willAttachView(pieView: PieView): void {\n      this.owner.callObservers(\"controllerWillAttachPieView\", pieView, this.owner);\n    },\n    didDetachView(pieView: PieView): void {\n      this.owner.callObservers(\"controllerDidDetachPieView\", pieView, this.owner);\n    },\n    viewWillAttachTitle(titleView: GraphicsView): void {\n      this.owner.title.setView(titleView);\n    },\n    viewDidDetachTitle(titleView: GraphicsView): void {\n      this.owner.title.setView(null);\n    },\n  })\n  readonly pie!: TraitViewRef<this, PieTrait, PieView> & Observes<PieTrait> & Observes<PieView>;\n\n  @ViewRef({\n    viewKey: true,\n    willAttachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachPieTitleView\", titleView, this.owner);\n    },\n    didDetachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachPieTitleView\", titleView, this.owner);\n    },\n  })\n  readonly title!: ViewRef<this, GraphicsView>;\n\n  @Property({valueType: Timing, value: true})\n  get sliceTiming(): Property<this, Timing | boolean | undefined> {\n    return Property.getter();\n  }\n\n  @TraitViewControllerSet({\n    controllerType: SliceController,\n    binds: true,\n    observes: true,\n    get parentView(): PieView | null {\n      return this.owner.pie.view;\n    },\n    getTraitViewRef(sliceController: SliceController): TraitViewRef<unknown, SliceTrait, SliceView> {\n      return sliceController.slice;\n    },\n    willAttachController(sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSlice\", sliceController, this.owner);\n    },\n    didAttachController(sliceController: SliceController): void {\n      const sliceTrait = sliceController.slice.trait;\n      if (sliceTrait !== null) {\n        this.attachSliceTrait(sliceTrait, sliceController);\n      }\n      const sliceView = sliceController.slice.view;\n      if (sliceView !== null) {\n        this.attachSliceView(sliceView, sliceController);\n      }\n    },\n    willDetachController(sliceController: SliceController): void {\n      const sliceView = sliceController.slice.view;\n      if (sliceView !== null) {\n        this.detachSliceView(sliceView, sliceController);\n      }\n      const sliceTrait = sliceController.slice.trait;\n      if (sliceTrait !== null) {\n        this.detachSliceTrait(sliceTrait, sliceController);\n      }\n    },\n    didDetachController(sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerDidDetachSlice\", sliceController, this.owner);\n    },\n    controllerWillAttachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSliceTrait\", sliceTrait, sliceController, this.owner);\n      this.attachSliceTrait(sliceTrait, sliceController);\n    },\n    controllerDidDetachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void {\n      this.detachSliceTrait(sliceTrait, sliceController);\n      this.owner.callObservers(\"controllerDidDetachSliceTrait\", sliceTrait, sliceController, this.owner);\n    },\n    attachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void {\n      // hook\n    },\n    detachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void {\n      // hook\n    },\n    controllerWillAttachSliceView(sliceView: SliceView, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSliceView\", sliceView, sliceController, this.owner);\n      this.attachSliceView(sliceView, sliceController);\n    },\n    controllerDidDetachSliceView(sliceView: SliceView, sliceController: SliceController): void {\n      this.detachSliceView(sliceView, sliceController);\n      this.owner.callObservers(\"controllerDidDetachSliceView\", sliceView, sliceController, this.owner);\n    },\n    attachSliceView(sliceView: SliceView, sliceController: SliceController): void {\n      const labelView = sliceView.label.view;\n      if (labelView !== null) {\n        this.attachSliceLabelView(labelView, sliceController);\n      }\n      const legendView = sliceView.legend.view;\n      if (legendView !== null) {\n        this.attachSliceLegendView(legendView, sliceController);\n      }\n    },\n    detachSliceView(sliceView: SliceView, sliceController: SliceController): void {\n      const legendView = sliceView.legend.view;\n      if (legendView !== null) {\n        this.detachSliceLegendView(legendView, sliceController);\n      }\n      const labelView = sliceView.label.view;\n      if (labelView !== null) {\n        this.detachSliceLabelView(labelView, sliceController);\n      }\n      sliceView.remove();\n    },\n    controllerDidSetSliceValue(sliceValue: number, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerDidSetSliceValue\", sliceValue, sliceController, this.owner);\n    },\n    controllerWillAttachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSliceLabelView\", labelView, sliceController, this.owner);\n      this.attachSliceLabelView(labelView, sliceController);\n    },\n    controllerDidDetachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void {\n      this.detachSliceLabelView(labelView, sliceController);\n      this.owner.callObservers(\"controllerDidDetachSliceLabelView\", labelView, sliceController, this.owner);\n    },\n    attachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void {\n      // hook\n    },\n    detachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void {\n      // hook\n    },\n    controllerWillAttachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSliceLegendView\", legendView, sliceController, this.owner);\n      this.attachSliceLegendView(legendView, sliceController);\n    },\n    controllerDidDetachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void {\n      this.detachSliceLegendView(legendView, sliceController);\n      this.owner.callObservers(\"controllerDidDetachSliceLegendView\", legendView, sliceController, this.owner);\n    },\n    attachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void {\n      // hook\n    },\n    detachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void {\n      // hook\n    },\n  })\n  readonly slices!: TraitViewControllerSet<this, SliceTrait, SliceView, SliceController> & Observes<SliceController> & {\n    attachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void,\n    detachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void,\n    attachSliceView(sliceView: SliceView, sliceController: SliceController): void,\n    detachSliceView(sliceView: SliceView, sliceController: SliceController): void,\n    attachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void,\n    detachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void,\n    attachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void,\n    detachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void,\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport {TypesetView} from \"@swim/graphics\";\nimport {TextRunView} from \"@swim/graphics\";\n\n/** @public */\nexport type DataPointCategory = \"flat\" | \"increasing\" | \"decreasing\" | \"maxima\" | \"minima\";\n\n/** @public */\nexport type DataPointLabelPlacement = \"auto\" | \"above\" | \"middle\" | \"below\";\n\n/** @public */\nexport interface DataPointViewObserver<X = unknown, Y = unknown, V extends DataPointView<X, Y> = DataPointView<X, Y>> extends GraphicsViewObserver<V> {\n  viewDidSetX?(x: X | undefined, view: V): void;\n\n  viewDidSetY?(y: Y | undefined, view: V): void;\n\n  viewDidSetY2?(y2: Y | undefined, view: V): void;\n\n  viewDidSetRadius?(radius: Length | null, view: V): void;\n\n  viewDidSetColor?(color: Color | null, view: V): void;\n\n  viewDidSetOpacity?(opacity: number | undefined, view: V): void;\n\n  viewWillAttachLabel?(labelView: GraphicsView, view: V): void;\n\n  viewDidDetachLabel?(labelView: GraphicsView, view: V): void;\n}\n\n/** @public */\nexport class DataPointView<X = unknown, Y = unknown> extends GraphicsView {\n  constructor(x?: X, y?: Y) {\n    super();\n    this.xCoord = NaN;\n    this.yCoord = NaN;\n    this.y2Coord = void 0;\n    this.gradientStop = false;\n    if (x !== void 0) {\n      this.x.setState(x);\n    }\n    if (y !== void 0) {\n      this.y.setState(y);\n    }\n  }\n\n  declare readonly observerType?: Class<DataPointViewObserver<X, Y>>;\n\n  readonly xCoord: number;\n\n  /** @internal */\n  setXCoord(xCoord: number): void {\n    (this as Mutable<this>).xCoord = xCoord;\n  }\n\n  readonly yCoord: number;\n\n  /** @internal */\n  setYCoord(yCoord: number): void {\n    (this as Mutable<this>).yCoord = yCoord;\n  }\n\n  readonly y2Coord: number | undefined;\n\n  /** @internal */\n  setY2Coord(y2Coord: number | undefined): void {\n    (this as Mutable<this>).y2Coord = y2Coord;\n  }\n\n  @Animator({\n    didSetValue(x: X | undefined, oldX: X | undefined): void {\n      this.owner.callObservers(\"viewDidSetX\", x, this.owner);\n    },\n  })\n  readonly x!: Animator<this, X | undefined>;\n\n  @Animator({\n    didSetValue(y: Y | undefined, oldY: Y | undefined): void {\n      this.owner.callObservers(\"viewDidSetY\", y, this.owner);\n    },\n  })\n  readonly y!: Animator<this, Y | undefined>;\n\n  @Animator({\n    didSetValue(y2: Y | undefined, oldY2: Y | undefined): void {\n      this.owner.callObservers(\"viewDidSetY2\", y2, this.owner);\n    },\n  })\n  get y2(): Animator<this, Y | undefined> {\n    return Animator.getter();\n  }\n\n  @ThemeAnimator({\n    valueType: Length,\n    value: null,\n    didSetValue(radius: Length | null): void {\n      this.owner.callObservers(\"viewDidSetRadius\", radius, this.owner);\n    },\n  })\n  get radius(): ThemeAnimator<this, Length | null> {\n    return ThemeAnimator.getter();\n  }\n\n  @Property({valueType: Number, value: 5})\n  get hitRadius(): Property<this, number> {\n    return Property.getter();\n  }\n\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    didSetValue(color: Color | null): void {\n      this.owner.updateGradientStop();\n      this.owner.callObservers(\"viewDidSetColor\", color, this.owner);\n    },\n  })\n  get color(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  @ThemeAnimator({\n    valueType: Number,\n    didSetValue(opacity: number | undefined): void {\n      this.owner.updateGradientStop();\n      this.owner.callObservers(\"viewDidSetOpacity\", opacity, this.owner);\n    },\n  })\n  get opacity(): ThemeAnimator<this, number | undefined> {\n    return ThemeAnimator.getter();\n  }\n\n  @ThemeAnimator({valueType: Font, inherits: true})\n  get font(): ThemeAnimator<this, Font | undefined> {\n    return ThemeAnimator.getter();\n  }\n\n  @ThemeAnimator({valueType: Color, inherits: true})\n  get textColor(): ThemeAnimator<this, Color | undefined> {\n    return ThemeAnimator.getter();\n  }\n\n  @Property({valueType: String})\n  get category(): Property<this, DataPointCategory> {\n    return Property.getter();\n  }\n\n  @ThemeAnimator({valueType: Length, value: Length.zero(), updateFlags: View.NeedsLayout})\n  get labelPadding(): ThemeAnimator<this, Length> {\n    return ThemeAnimator.getter();\n  }\n\n  @ViewRef({\n    viewType: TextRunView,\n    viewKey: true,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachLabel\", labelView, this.owner);\n    },\n    fromLike(value: GraphicsView | LikeType<GraphicsView> | string | undefined): GraphicsView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        if (view instanceof TextRunView) {\n          view.text.setState(value !== void 0 ? value : \"\");\n        }\n        return view;\n      }\n      return super.fromLike(value);\n    },\n  })\n  readonly label!: ViewRef<this, Like<GraphicsView, string | undefined>>;\n\n  @Property({valueType: String, value: \"auto\"})\n  get labelPlacement(): Property<this, DataPointLabelPlacement> {\n    return Property.getter();\n  }\n\n  /** @internal */\n  readonly gradientStop: boolean;\n\n  isGradientStop(): boolean {\n    return this.gradientStop;\n  }\n\n  protected updateGradientStop(): void {\n    (this as Mutable<this>).gradientStop = this.color.value !== null || this.opacity.value !== void 0;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutDataPoint(this.viewFrame);\n  }\n\n  protected layoutDataPoint(frame: R2Box): void {\n    const labelView = ViewRef.tryView(this, \"label\");\n    if (labelView !== null) {\n      this.layoutLabel(labelView, frame);\n    }\n  }\n\n  protected layoutLabel(labelView: GraphicsView, frame: R2Box): void {\n    let placement = this.labelPlacement.value;\n    if (placement !== \"above\" && placement !== \"below\" && placement !== \"middle\") {\n      const category = this.category.value;\n      if (category === \"increasing\" || category === \"maxima\") {\n        placement = \"above\";\n      } else if (category === \"decreasing\" || category === \"minima\") {\n        placement = \"below\";\n      } else {\n        placement = \"above\";\n      }\n    }\n\n    const x = this.xCoord;\n    const y0 = this.yCoord;\n    let y1 = y0;\n    if (placement === \"above\") {\n      y1 -= this.labelPadding.getValue().pxValue(Math.min(frame.width, frame.height));\n    } else if (placement === \"below\") {\n      y1 += this.labelPadding.getValue().pxValue(Math.min(frame.width, frame.height));\n    }\n\n    if (TypesetView[Symbol.hasInstance](labelView)) {\n      labelView.textAlign.setIntrinsic(\"center\");\n      if (placement === \"above\") {\n        labelView.textBaseline.setIntrinsic(\"bottom\");\n      } else if (placement === \"below\") {\n        labelView.textBaseline.setIntrinsic(\"top\");\n      } else if (placement === \"middle\") {\n        labelView.textBaseline.setIntrinsic(\"middle\");\n      }\n      labelView.textOrigin.setIntrinsic(new R2Point(x, y1));\n    }\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestPoint(x, y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestPoint(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    let hitRadius: number = Property.tryValue(this, \"hitRadius\");\n    const radius = ThemeAnimator.tryValue(this, \"radius\");\n    if (radius !== null) {\n      const size = Math.min(frame.width, frame.height);\n      hitRadius = Math.max(hitRadius, radius.pxValue(size));\n    }\n\n    const dx = this.xCoord - x;\n    const dy = this.yCoord - y;\n    if (dx * dx + dy * dy < hitRadius * hitRadius) {\n      return this;\n    }\n    return null;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\n\n/** @public */\nexport interface DataPointTraitObserver<X = unknown, Y = unknown, T extends DataPointTrait<X, Y> = DataPointTrait<X, Y>> extends TraitObserver<T> {\n  traitDidSetX?(x: X, trait: T): void;\n\n  traitDidSetY?(y: Y, trait: T): void;\n\n  traitDidSetY2?(y2: Y | undefined, trait: T): void;\n\n  traitDidSetRadius?(radius: Length | null, trait: T): void;\n\n  traitDidSetColor?(color: ColorOrLook | null, trait: T): void;\n\n  traitDidSetOpacity?(opacity: number | undefined, trait: T): void;\n\n  traitDidSetLabel?(label: string | undefined, trait: T): void;\n}\n\n/** @public */\nexport class DataPointTrait<X = unknown, Y = unknown> extends Trait {\n  constructor(x?: X, y?: Y) {\n    super();\n    if (x !== void 0) {\n      this.x.set(x);\n    }\n    if (y !== void 0) {\n      this.y.set(y);\n    }\n  }\n\n  declare readonly observerType?: Class<DataPointTraitObserver<X, Y>>;\n\n  @Property({\n    didSetValue(x: X): void {\n      this.owner.callObservers(\"traitDidSetX\", x, this.owner);\n    },\n  })\n  readonly x!: Property<this, X>;\n\n  @Property({\n    didSetValue(y: Y): void {\n      this.owner.callObservers(\"traitDidSetY\", y, this.owner);\n    },\n  })\n  readonly y!: Property<this, Y>;\n\n  @Property({\n    didSetValue(y2: Y | undefined): void {\n      this.owner.callObservers(\"traitDidSetY2\", y2, this.owner);\n    },\n  })\n  get y2(): Property<this, Y | undefined> {\n    return Property.getter();\n  }\n\n  @Property({\n    valueType: Length,\n    value: null,\n    didSetValue(radius: Length | null): void {\n      this.owner.callObservers(\"traitDidSetRadius\", radius, this.owner);\n    },\n  })\n  get radius(): Property<this, Length | null> {\n    return Property.getter();\n  }\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    didSetValue(color: ColorOrLook | null): void {\n      this.owner.callObservers(\"traitDidSetColor\", color, this.owner);\n    },\n  })\n  get color(): Property<this, ColorOrLook | null> {\n    return Property.getter();\n  }\n\n  @Property({\n    valueType: Number,\n    didSetValue(opacity: number | undefined): void {\n      this.owner.callObservers(\"traitDidSetOpacity\", opacity, this.owner);\n    },\n  })\n  get opacity(): Property<this, number | undefined> {\n    return Property.getter();\n  }\n\n  formatLabel(x: X | undefined, y: Y | undefined): string | undefined {\n    return void 0;\n  }\n\n  @Property({\n    valueType: String,\n    didSetValue(label: string | undefined): void {\n      this.owner.callObservers(\"traitDidSetLabel\", label, this.owner);\n    },\n  })\n  get label(): Property<this, string | undefined> {\n    return Property.getter();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {LengthLike} from \"@swim/math\";\nimport type {Length} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {ColorOrLookLike} from \"@swim/theme\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {DataPointView} from \"./DataPointView\";\nimport {DataPointTrait} from \"./DataPointTrait\";\n\n/** @public */\nexport interface DataPointControllerObserver<X = unknown, Y = unknown, C extends DataPointController<X, Y> = DataPointController<X, Y>> extends ControllerObserver<C> {\n  controllerWillAttachDataPointTrait?(dataPointTrait: DataPointTrait<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPointTrait?(dataPointTrait: DataPointTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachDataPointView?(dataPointView: DataPointView<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPointView?(dataPointView: DataPointView<X, Y> , controller: C): void;\n\n  controllerDidSetDataPointX?(x: X | undefined, controller: C): void;\n\n  controllerDidSetDataPointY?(y: Y | undefined, controller: C): void;\n\n  controllerDidSetDataPointY2?(y2: Y | undefined, controller: C): void;\n\n  controllerDidSetDataPointRadius?(radius: Length | null, controller: C): void;\n\n  controllerDidSetDataPointColor?(color: Color | null, controller: C): void;\n\n  controllerDidSetDataPointOpacity?(opacity: number | undefined, controller: C): void;\n\n  controllerWillAttachDataPointLabelView?(labelView: GraphicsView, controller: C): void;\n\n  controllerDidDetachDataPointLabelView?(labelView: GraphicsView, controller: C): void;\n}\n\n/** @public */\nexport class DataPointController<X = unknown, Y = unknown> extends Controller {\n  declare readonly observerType?: Class<DataPointControllerObserver<X, Y>>;\n\n  protected updateLabel(x: X | undefined, y: Y | undefined, dataPointTrait: DataPointTrait<X, Y>): void {\n    const label = dataPointTrait.formatLabel(x, y);\n    if (label !== void 0) {\n      dataPointTrait.label.setIntrinsic(label);\n    }\n  }\n\n  protected setX(x: X, timing?: TimingLike | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView === null) {\n      return;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.dataPointTiming.value;\n      if (timing === true) {\n        timing = dataPointView.getLook(Look.timing, Mood.ambient);\n      }\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    dataPointView.x.setIntrinsic(x, timing);\n  }\n\n  protected setY(y: Y, timing?: TimingLike | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView === null) {\n      return;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.dataPointTiming.value;\n      if (timing === true) {\n        timing = dataPointView.getLook(Look.timing, Mood.ambient);\n      }\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    dataPointView.y.setIntrinsic(y, timing);\n  }\n\n  protected setY2(y2: Y | undefined, timing?: TimingLike | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView === null) {\n      return;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.dataPointTiming.value;\n      if (timing === true) {\n        timing = dataPointView.getLook(Look.timing, Mood.ambient);\n      }\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    dataPointView.y2.setIntrinsic(y2, timing);\n  }\n\n  protected setRadius(radius: LengthLike | null, timing?: TimingLike | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView === null) {\n      return;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.dataPointTiming.value;\n      if (timing === true) {\n        timing = dataPointView.getLook(Look.timing, Mood.ambient);\n      }\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    dataPointView.radius.setIntrinsic(radius, timing);\n  }\n\n  protected setColor(color: ColorOrLookLike | null, timing?: TimingLike | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView === null) {\n      return;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.dataPointTiming.value;\n      if (timing === true) {\n        timing = dataPointView.getLook(Look.timing, Mood.ambient);\n      }\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    dataPointView.color.setIntrinsic(color, timing);\n  }\n\n  protected setOpacity(opacity: number | undefined, timing?: TimingLike | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView === null) {\n      return;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.dataPointTiming.value;\n      if (timing === true) {\n        timing = dataPointView.getLook(Look.timing, Mood.ambient);\n      }\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    dataPointView.opacity.setIntrinsic(opacity, timing);\n  }\n\n  protected setLabelView(label: string | undefined): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView === null) {\n      return;\n    }\n    dataPointView.label.set(label);\n  }\n\n  @Property({valueType: Timing, inherits: true})\n  get dataPointTiming(): Property<this, Timing | boolean | undefined> {\n    return Property.getter();\n  }\n\n  @TraitViewRef({\n    traitType: DataPointTrait,\n    observesTrait: true,\n    willAttachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointTrait\", dataPointTrait, this.owner);\n    },\n    didAttachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      const dataPointView = this.view;\n      if (dataPointView !== null) {\n        this.owner.setX(dataPointTrait.x.value);\n        this.owner.setY(dataPointTrait.y.value);\n        const y2 = dataPointTrait.tryFastener(\"y2\");\n        if (y2 !== null) {\n          this.owner.setY2(y2.value);\n        }\n        const radius = dataPointTrait.tryFastener(\"radius\");\n        if (radius !== null) {\n          this.owner.setRadius(radius.value);\n        }\n        const color = dataPointTrait.tryFastener(\"color\");\n        if (color !== null) {\n          this.owner.setColor(color.value);\n        }\n        const opacity = dataPointTrait.tryFastener(\"opacity\");\n        if (opacity !== null) {\n          this.owner.setOpacity(opacity.value);\n        }\n        const label = dataPointTrait.tryFastener(\"label\");\n        if (label !== null) {\n          this.owner.setLabelView(label.value);\n        }\n      }\n    },\n    willDetachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      const dataPointView = this.view;\n      if (dataPointView !== null) {\n        this.owner.setLabelView(void 0);\n      }\n    },\n    didDetachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachDataPointTrait\", dataPointTrait, this.owner);\n    },\n    traitDidSetX(x: X): void {\n      this.owner.setX(x);\n    },\n    traitDidSetY(y: Y): void {\n      this.owner.setY(y);\n    },\n    traitDidSetY2(y2: Y | undefined): void {\n      this.owner.setY2(y2);\n    },\n    traitDidSetRadius(radius: Length | null): void {\n      this.owner.setRadius(radius);\n    },\n    traitDidSetColor(color: ColorOrLook | null): void {\n      this.owner.setColor(color);\n    },\n    traitDidSetOpacity(opacity: number | undefined): void {\n      this.owner.setOpacity(opacity);\n    },\n    traitDidSetLabel(label: string | undefined): void {\n      this.owner.setLabelView(label);\n    },\n    viewType: DataPointView,\n    observesView: true,\n    willAttachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointView\", dataPointView, this.owner);\n    },\n    didAttachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.label.setView(dataPointView.label.view);\n      const dataPointTrait = this.trait;\n      if (dataPointTrait === null) {\n        return;\n      }\n        this.owner.setX(dataPointTrait.x.value);\n        this.owner.setY(dataPointTrait.y.value);\n        const y2 = dataPointTrait.tryFastener(\"y2\");\n        if (y2 !== null) {\n          this.owner.setY2(y2.value);\n        }\n        const radius = dataPointTrait.tryFastener(\"radius\");\n        if (radius !== null) {\n          this.owner.setRadius(radius.value);\n        }\n        const color = dataPointTrait.tryFastener(\"color\");\n        if (color !== null) {\n          this.owner.setColor(color.value);\n        }\n        const opacity = dataPointTrait.tryFastener(\"opacity\");\n        if (opacity !== null) {\n          this.owner.setOpacity(opacity.value);\n        }\n        const label = dataPointTrait.tryFastener(\"label\");\n        if (label !== null) {\n          this.owner.setLabelView(label.value);\n        }\n        const x = dataPointView.x.value;\n        const y = dataPointView.y.value;\n        this.owner.updateLabel(x, y, dataPointTrait);\n    },\n    willDetachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.label.setView(null);\n    },\n    didDetachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachDataPointView\", dataPointView, this.owner);\n    },\n    viewDidSetX(x: X | undefined, dataPointView: DataPointView<X, Y>): void {\n      const dataPointTrait = this.trait;\n      if (dataPointTrait !== null) {\n        const y = dataPointView.y.value;\n        this.owner.updateLabel(x, y, dataPointTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetDataPointX\", x, this.owner);\n    },\n    viewDidSetY(y: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      const dataPointTrait = this.trait;\n      if (dataPointTrait !== null) {\n        const x = dataPointView.x.value;\n        this.owner.updateLabel(x, y, dataPointTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetDataPointY\", y, this.owner);\n    },\n    viewDidSetY2(y2: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointY2\", y2, this.owner);\n    },\n    viewDidSetRadius(radius: Length | null, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointRadius\", radius, this.owner);\n    },\n    viewDidSetColor(color: Color | null, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointColor\", color, this.owner);\n    },\n    viewDidSetOpacity(opacity: number | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointOpacity\", opacity, this.owner);\n    },\n    viewWillAttachLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(labelView);\n    },\n    viewDidDetachLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(null);\n    },\n    createView(): DataPointView<X, Y> {\n      const dataPointView = new DataPointView<X, Y>();\n      const dataPointTrait = this.trait;\n      if (dataPointTrait !== null) {\n        dataPointView.x.setIntrinsic(dataPointTrait.x.value);\n        dataPointView.y.setIntrinsic(dataPointTrait.y.value);\n        const y2 = dataPointTrait.tryFastener(\"y2\");\n        if (y2 !== null) {\n          dataPointView.y2.setIntrinsic(y2.value);\n        }\n        const radius = dataPointTrait.tryFastener(\"radius\");\n        if (radius !== null) {\n          dataPointView.radius.setIntrinsic(radius.value);\n        }\n      }\n      return dataPointView;\n    },\n  })\n  readonly dataPoint!: TraitViewRef<this, DataPointTrait<X, Y>, DataPointView<X, Y>> & Observes<DataPointTrait<X, Y>> & Observes<DataPointView<X, Y>>;\n\n  @ViewRef({\n    viewKey: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointLabelView\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachDataPointLabelView\", labelView, this.owner);\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitSet} from \"@swim/model\";\nimport {DataPointTrait} from \"./DataPointTrait\";\n\n/** @public */\nexport interface DataSetTraitObserver<X = unknown, Y = unknown, T extends DataSetTrait<X, Y> = DataSetTrait<X, Y>> extends TraitObserver<T> {\n  traitWillAttachDataPoint?(dataPointTrait: DataPointTrait<X, Y>, targetTrait: Trait | null, trait: T): void;\n\n  traitDidDetachDataPoint?(dataPointTrait: DataPointTrait<X, Y>, trait: T): void;\n}\n\n/** @public */\nexport class DataSetTrait<X = unknown, Y = unknown> extends Trait {\n  declare readonly observerType?: Class<DataSetTraitObserver<X, Y>>;\n\n  @TraitSet({\n    traitType: DataPointTrait,\n    binds: true,\n    willAttachTrait(dataPointTrait: DataPointTrait<X, Y>, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachDataPoint\", dataPointTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        dataPointTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        dataPointTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.callObservers(\"traitDidDetachDataPoint\", dataPointTrait, this.owner);\n    },\n    detectModel(model: Model): DataPointTrait<X, Y> | null {\n      return model.getTrait(DataPointTrait) as DataPointTrait<X, Y>;\n    },\n  })\n  readonly dataPoints!: TraitSet<this, DataPointTrait<X, Y>>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.dataPoints.consumeTraits(this);\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.dataPoints.unconsumeTraits(this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Length} from \"@swim/math\";\nimport type {Trait} from \"@swim/model\";\nimport {TraitRef} from \"@swim/model\";\nimport type {Color} from \"@swim/style\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"./DataPointView\";\nimport type {DataPointTrait} from \"./DataPointTrait\";\nimport {DataPointController} from \"./DataPointController\";\nimport {DataSetTrait} from \"./DataSetTrait\";\n\n/** @public */\nexport interface DataSetControllerObserver<X = unknown, Y = unknown, C extends DataSetController<X, Y> = DataSetController<X, Y>> extends ControllerObserver<C> {\n  controllerWillAttachDataSetTrait?(dataSetTrait: DataSetTrait<X, Y>, controller: C): void;\n\n  controllerDidDetachDataSetTrait?(dataSetTrait: DataSetTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachDataPoint?(dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPoint?(dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerWillAttachDataPointTrait?(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPointTrait?(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerWillAttachDataPointView?(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPointView?(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidSetDataPointX?(x: X | undefined, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidSetDataPointY?(y: Y | undefined, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidSetDataPointY2?(y2: Y | undefined, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidSetDataPointRadius?(radius: Length | null, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidSetDataPointColor?(color: Color | null, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidSetDataPointOpacity?(opacity: number | undefined, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerWillAttachDataPointLabelView?(labelView: GraphicsView | null, dataPointController: DataPointController<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPointLabelView?(labelView: GraphicsView | null, dataPointController: DataPointController<X, Y>, controller: C): void;\n}\n\n/** @public */\nexport class DataSetController<X = unknown, Y = unknown> extends Controller {\n  declare readonly observerType?: Class<DataSetControllerObserver<X, Y>>;\n\n  @TraitRef({\n    traitType: DataSetTrait,\n    observes: true,\n    willAttachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataSetTrait\", dataSetTrait, this.owner);\n    },\n    didAttachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      this.owner.dataPoints.addTraits(dataSetTrait.dataPoints.traits);\n    },\n    willDetachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      this.owner.dataPoints.deleteTraits(dataSetTrait.dataPoints.traits);\n    },\n    didDetachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachDataSetTrait\", dataSetTrait, this.owner);\n    },\n    traitWillAttachDataPoint(dataPointTrait: DataPointTrait<X, Y>, targetTrait: Trait): void {\n      this.owner.dataPoints.addTrait(dataPointTrait, targetTrait);\n    },\n    traitDidDetachDataPoint(dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.dataPoints.deleteTrait(dataPointTrait);\n    },\n  })\n  readonly dataSet!: TraitRef<this, DataSetTrait<X, Y>> & Observes<DataSetTrait<X, Y>>;\n\n  @Property({valueType: Timing, value: true})\n  get dataPointTiming(): Property<this, Timing | boolean | undefined> {\n    return Property.getter();\n  }\n\n  @TraitViewControllerSet({\n    controllerType: DataPointController,\n    binds: true,\n    observes: true,\n    getTraitViewRef(dataPointController: DataPointController<X, Y>): TraitViewRef<unknown, DataPointTrait<X, Y>, DataPointView<X, Y>> {\n      return dataPointController.dataPoint;\n    },\n    willAttachController(dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPoint\", dataPointController, this.owner);\n    },\n    didAttachController(dataPointController: DataPointController<X, Y>): void {\n      const dataPointTrait = dataPointController.dataPoint.trait;\n      if (dataPointTrait !== null) {\n        this.attachDataPointTrait(dataPointTrait, dataPointController);\n      }\n      const dataPointView = dataPointController.dataPoint.view;\n      if (dataPointView !== null) {\n        this.attachDataPointView(dataPointView, dataPointController);\n      }\n      const parentView = this.parentView;\n      if (parentView !== null) {\n        dataPointController.dataPoint.insertView(parentView);\n      }\n    },\n    willDetachController(dataPointController: DataPointController<X, Y>): void {\n      const dataPointView = dataPointController.dataPoint.view;\n      if (dataPointView !== null) {\n        this.detachDataPointView(dataPointView, dataPointController);\n      }\n      const dataPointTrait = dataPointController.dataPoint.trait;\n      if (dataPointTrait !== null) {\n        this.detachDataPointTrait(dataPointTrait, dataPointController);\n      }\n    },\n    didDetachController(dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachDataPoint\", dataPointController, this.owner);\n    },\n    controllerWillAttachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointTrait\", dataPointTrait, dataPointController, this.owner);\n      this.attachDataPointTrait(dataPointTrait, dataPointController);\n    },\n    controllerDidDetachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      this.detachDataPointTrait(dataPointTrait, dataPointController);\n      this.owner.callObservers(\"controllerDidDetachDataPointTrait\", dataPointTrait, dataPointController, this.owner);\n    },\n    attachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      // hook\n    },\n    detachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      // hook\n    },\n    controllerWillAttachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointView\", dataPointView, dataPointController, this.owner);\n      this.attachDataPointView(dataPointView, dataPointController);\n    },\n    controllerDidDetachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      this.detachDataPointView(dataPointView, dataPointController);\n      this.owner.callObservers(\"controllerDidDetachDataPointView\", dataPointView, dataPointController, this.owner);\n    },\n    attachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      const labelView = ViewRef.tryView(dataPointView, \"label\");\n      if (labelView !== null) {\n        this.attachDataPointLabelView(labelView, dataPointController);\n      }\n    },\n    detachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      const labelView = ViewRef.tryView(dataPointView, \"label\");\n      if (labelView !== null) {\n        this.detachDataPointLabelView(labelView, dataPointController);\n      }\n      dataPointView.remove();\n    },\n    controllerDidSetDataPointX(x: X | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointX\", x, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointY(y: Y | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointY\", y, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointY2(y2: Y | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointY2\", y2, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointRadius(radius: Length | null, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointRadius\", radius, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointColor(color: Color | null, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointColor\", color, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointOpacity(opacity: number | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointOpacity\", opacity, dataPointController, this.owner);\n    },\n    controllerWillAttachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointLabelView\", labelView, dataPointController, this.owner);\n      this.attachDataPointLabelView(labelView, dataPointController);\n    },\n    controllerDidDetachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void {\n      this.detachDataPointLabelView(labelView, dataPointController);\n      this.owner.callObservers(\"controllerDidDetachDataPointLabelView\", labelView, dataPointController, this.owner);\n    },\n    attachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void {\n      // hook\n    },\n    detachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void {\n      // hook\n    },\n  })\n  readonly dataPoints!: TraitViewControllerSet<this, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>> & Observes<DataPointController<X, Y>> & {\n    attachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void,\n    detachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void,\n    attachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void,\n    detachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void,\n    attachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void,\n    detachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void,\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {LikeType} from \"@swim/util\";\nimport {Domain} from \"@swim/util\";\nimport {Range} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {ContinuousScale} from \"@swim/util\";\nimport type {DateTimeLike} from \"@swim/time\";\nimport {DateTime} from \"@swim/time\";\nimport {TimeDomain} from \"@swim/time\";\nimport {Affinity} from \"@swim/component\";\nimport type {AnimatorClass} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport type {View} from \"@swim/view\";\nimport {ScaledView} from \"./\"; // forward import\n\n/** @public */\nexport interface ContinuousScaleAnimator<R extends View = View, X = unknown, Y = unknown, T extends ContinuousScale<X, Y> | null | undefined = ContinuousScale<X, Y> | null, I extends any[] = [T]> extends Animator<R, T, I> {\n  setScale(domain: Domain<X> | string, range: Range<Y>, timing?: TimingLike | boolean | null): void;\n  setScale(xMin: X, xMax: X, yMin: Y, yMax: Y, timing?: TimingLike | boolean | null): void;\n\n  setDomain(domain: Domain<X> | string, timing?: TimingLike | boolean | null): void;\n  setDomain(xMin: X, xMax: X, timing?: TimingLike | boolean | null): void;\n\n  setRange(range: Range<Y>, timing?: TimingLike | boolean | null): void;\n  setRange(yMin: Y, yMax: Y, timing?: TimingLike | boolean | null): void;\n\n  setBaseScale(domain: Domain<X> | string, range: Range<Y>, timing?: TimingLike | boolean | null): void;\n  setBaseScale(xMin: X, xMax: X, yMin: Y, yMax: Y, timing?: TimingLike | boolean | null): void;\n\n  setBaseDomain(domain: Domain<X> | string, timing?: TimingLike | boolean | null): void;\n  setBaseDomain(xMin: X, xMax: X, timing?: TimingLike | boolean | null): void;\n\n  setBaseRange(range: Range<Y>, timing?: TimingLike | boolean | null): void;\n  setBaseRange(yMin: Y, yMax: Y, timing?: TimingLike | boolean | null): void;\n\n  createDomain(xMin: X, xMax: X): Domain<X>;\n\n  /** @override */\n  fromLike(value: T | LikeType<T>): T;\n}\n\n/** @public */\nexport const ContinuousScaleAnimator = (<R extends View, X, Y, T extends ContinuousScale<X, Y> | null | undefined, I extends any[], A extends ContinuousScaleAnimator<any, any, any, any, any>>() => Animator.extend<ContinuousScaleAnimator<R, X, Y, T, I>, AnimatorClass<A>>(\"ContinuousScaleAnimator\", {\n  valueType: ContinuousScale,\n\n  setScale(xMin?: Domain<X> | X | string, xMax?: Range<Y> | X, yMin?: Y | TimingLike | boolean | null, yMax?: Y, timing?: TimingLike | boolean | null): void {\n    if (typeof xMin === \"string\") {\n      xMin = ScaledView.parseScale<X, Y>(xMin).domain;\n    }\n    if (xMin instanceof Domain) {\n      timing = yMin as TimingLike | boolean | null;\n      if (xMax instanceof Domain) {\n        yMax = (xMax as Domain<Y>)[1];\n        yMin = (xMax as Domain<Y>)[0];\n      }\n      xMax = (xMin as Domain<X>)[1];\n      xMin = (xMin as Domain<X>)[0];\n    }\n    const oldState = this.state;\n    let newState: NonNullable<T>;\n    if (oldState === void 0 || oldState === null) {\n      newState = ScaledView.createScale(xMin as X, xMax as X, yMin as Y, yMax as Y) as NonNullable<T>;\n    } else {\n      newState = oldState.withDomain(xMin as X, xMax as X) as NonNullable<T>;\n      if (yMin !== void 0 && yMax !== void 0) {\n        newState = newState.overRange(yMin as Y, yMax) as NonNullable<T>;\n      }\n      if ((timing === void 0 || timing === null || timing === false) && (this.flags & Animator.TweeningFlag) !== 0) {\n        const oldValue = this.getValue();\n        const newValue = oldValue.withDomain(xMin as X, xMax as X) as NonNullable<T>;\n        this.setValue(newValue, Affinity.Extrinsic);\n        timing = true;\n      }\n    }\n    this.setState(newState, timing, Affinity.Extrinsic);\n  },\n\n  setDomain(xMin?: Domain<X> | X | string, xMax?: X | TimingLike | boolean | null, timing?: TimingLike | boolean | null): void {\n    if (typeof xMin === \"string\") {\n      xMin = ScaledView.parseScale<X, Y>(xMin).domain;\n    }\n    if (xMin instanceof Domain) {\n      timing = xMax as TimingLike | boolean | null;\n      xMax = (xMin as Domain<X>)[1];\n      xMin = (xMin as Domain<X>)[0];\n    }\n    const oldState = this.state;\n    let newState: NonNullable<T>;\n    if (oldState === void 0 || oldState === null) {\n      newState = ScaledView.createScale(xMin as X, xMax as X, 0 as unknown as Y, 1 as unknown as Y) as NonNullable<T>;\n    } else {\n      newState = oldState.withDomain(xMin as X, xMax as X) as NonNullable<T>;\n      if ((timing === void 0 || timing === null || timing === false) && (this.flags & Animator.TweeningFlag) !== 0) {\n        const oldValue = this.getValue();\n        const newValue = oldValue.withDomain(xMin as X, xMax as X) as NonNullable<T>;\n        this.setValue(newValue, Affinity.Extrinsic);\n        timing = true;\n      }\n    }\n    this.setState(newState, timing, Affinity.Extrinsic);\n  },\n\n  setRange(yMin?: Range<Y> | Y, yMax?: Y | TimingLike | boolean | null, timing?: TimingLike | boolean | null): void {\n    const oldState = this.state;\n    if (oldState === void 0 || oldState === null) {\n      return;\n    }\n    if (yMin instanceof Range) {\n      timing = yMax as TimingLike | boolean | null;\n      yMax = (yMin as Range<Y>)[1];\n      yMin = (yMin as Range<Y>)[0];\n    }\n    const newState = oldState.overRange(yMin as Y, yMax as Y) as NonNullable<T>;\n    if ((timing === void 0 || timing === null || timing === false) && (this.flags & Animator.TweeningFlag) !== 0) {\n      const oldValue = this.getValue();\n      const newValue = oldValue.overRange(yMin as Y, yMax as Y) as NonNullable<T>;\n      this.setValue(newValue, Affinity.Extrinsic);\n      timing = true;\n    }\n    this.setState(newState, timing, Affinity.Extrinsic);\n  },\n\n  setBaseScale(xMin?: Domain<X> | X | string, xMax?: Range<Y> | X, yMin?: Y | TimingLike | boolean | null, yMax?: Y, timing?: TimingLike | boolean | null): void {\n    if (this.derived && this.inlet instanceof ContinuousScaleAnimator) {\n      this.inlet.setBaseScale(xMin as any, xMax as any, yMin as any, yMax as any, timing);\n    } else {\n      this.setScale(xMin as any, xMax as any, yMin as any, yMax as any, timing);\n    }\n  },\n\n  setBaseDomain(xMin?: Domain<X> | X | string, xMax?: X | TimingLike | boolean | null, timing?: TimingLike | boolean | null): void {\n    if (this.derived && this.inlet instanceof ContinuousScaleAnimator) {\n      this.inlet.setBaseDomain(xMin as any, xMax as any, timing);\n    } else {\n      this.setDomain(xMin as any, xMax as any, timing);\n    }\n  },\n\n  setBaseRange(yMin?: Range<Y> | Y, yMax?: Y | TimingLike | boolean | null, timing?: TimingLike | boolean | null): void {\n    if (this.derived && this.inlet instanceof ContinuousScaleAnimator) {\n      this.inlet.setBaseRange(yMin as any, yMax as any, timing);\n    } else {\n      this.setRange(yMin as any, yMax as any, timing);\n    }\n  },\n\n  createDomain(xMin: X, xMax: X): Domain<X> {\n    if (xMin instanceof DateTime || xMax instanceof DateTime) {\n      return TimeDomain(DateTime.fromLike(xMin as DateTimeLike), DateTime.fromLike(xMax as DateTimeLike)) as unknown as Domain<X>;\n    }\n    return Domain(xMin, xMax);\n  },\n\n  fromLike(value: T | LikeType<T>): T {\n    if (typeof value === \"string\") {\n      return ScaledView.parseScale(value) as T;\n    }\n    return value as T;\n  },\n}))();\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Domain} from \"@swim/util\";\nimport type {Range} from \"@swim/util\";\nimport type {ContinuousScale} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Property} from \"@swim/component\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {ContinuousScaleAnimator} from \"./ContinuousScaleAnimator\";\nimport {ScaledView} from \"./\"; // forward import\n\n/** @public */\nexport interface ScaledXViewObserver<X = unknown, V extends ScaledXView<X> = ScaledXView<X>> extends GraphicsViewObserver<V> {\n  viewDidSetXScale?(xScale: ContinuousScale<X, number> | null, view: V): void;\n\n  viewDidSetXRangePadding?(xRangePadding: readonly [number, number], view: V): void;\n\n  viewDidSetXDataDomain?(xDataDomain: Domain<X> | null, view: V): void;\n}\n\n/** @public */\nexport interface ScaledXView<X = unknown> extends GraphicsView {\n  /** @override */\n  readonly observerType?: Class<ScaledXViewObserver<X>>;\n\n  readonly xScale: ContinuousScaleAnimator<this, X, number>;\n\n  xDomain(): Domain<X> | null;\n  xDomain(xDomain: Domain<X> | null, timing?: TimingLike | boolean): this;\n  xDomain(xMin: X, xMax: X, timing: TimingLike | boolean): this;\n\n  xRange(): Range<number> | null;\n\n  readonly xRangePadding: Property<this, readonly [number, number]>\n\n  readonly xDataDomain: Domain<X> | null;\n\n  readonly xDataRange: Range<number> | null;\n}\n\n/** @public */\nexport const ScaledXView = (function () {\n  const ScaledXView = {} as {\n    is<X>(object: unknown): object is ScaledXView<X>;\n  };\n\n  ScaledXView.is = function <X>(object: unknown): object is ScaledXView<X> {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as ScaledXView<X>;\n      return view instanceof ScaledView\n          || view instanceof GraphicsView && \"xScale\" in view;\n    }\n    return false;\n  };\n\n  return ScaledXView;\n})();\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Domain} from \"@swim/util\";\nimport type {Range} from \"@swim/util\";\nimport type {ContinuousScale} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Property} from \"@swim/component\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {ContinuousScaleAnimator} from \"./ContinuousScaleAnimator\";\nimport {ScaledView} from \"./\"; // forward import\n\n/** @public */\nexport interface ScaledYViewObserver<Y = unknown, V extends ScaledYView<Y> = ScaledYView<Y>> extends GraphicsViewObserver<V> {\n  viewDidSetYScale?(yScale: ContinuousScale<Y, number> | null, view: V): void;\n\n  viewDidSetYRangePadding?(yRangePadding: readonly [number, number], view: V): void;\n\n  viewDidSetYDataDomain?(yDataDomain: Domain<Y> | null, view: V): void;\n}\n\n/** @public */\nexport interface ScaledYView<Y = unknown> extends GraphicsView {\n  /** @override */\n  readonly observerType?: Class<ScaledYViewObserver<Y>>;\n\n  readonly yScale: ContinuousScaleAnimator<this, Y, number>;\n\n  yDomain(): Domain<Y> | null;\n  yDomain(yDomain: Domain<Y> | null, timing?: TimingLike | boolean): this;\n  yDomain(yMin: Y, yMax: Y, timing: TimingLike | boolean): this;\n\n  yRange(): Range<number> | null;\n\n  readonly yRangePadding: Property<this, readonly [number, number]>\n\n  readonly yDataDomain: Domain<Y> | null;\n\n  readonly yDataRange: Range<number> | null;\n}\n\n/** @public */\nexport const ScaledYView = (function () {\n  const ScaledYView = {} as {\n    is<Y>(object: unknown): object is ScaledYView<Y>\n  };\n\n  ScaledYView.is = function <Y>(object: unknown): object is ScaledYView<Y> {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as ScaledYView<Y>;\n      return view instanceof ScaledView\n          || view instanceof GraphicsView && \"yScale\" in view;\n    }\n    return false;\n  };\n\n  return ScaledYView;\n})();\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {ScaledXViewObserver} from \"./ScaledXView\";\nimport type {ScaledXView} from \"./ScaledXView\";\nimport type {ScaledYViewObserver} from \"./ScaledYView\";\nimport type {ScaledYView} from \"./ScaledYView\";\nimport {ScaledView} from \"./\"; // forward import\n\n/** @public */\nexport interface ScaledXYViewObserver<X = unknown, Y = unknown, V extends ScaledXYView<X, Y> = ScaledXYView<X, Y>> extends ScaledXViewObserver<X, V>, ScaledYViewObserver<Y, V> {\n}\n\n/** @public */\nexport interface ScaledXYView<X = unknown, Y = unknown> extends GraphicsView, ScaledXView<X>, ScaledYView<Y> {\n  /** @override */\n  readonly observerType?: Class<ScaledXYViewObserver<X, Y>>;\n}\n\n/** @public */\nexport const ScaledXYView = (function () {\n  const ScaledXYView = {} as {\n    is<X, Y>(object: unknown): object is ScaledXYView<X, Y>;\n  };\n\n  ScaledXYView.is = function <X, Y>(object: unknown): object is ScaledXYView<X, Y> {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as ScaledXYView<X, Y>;\n      return view instanceof ScaledView\n          || view instanceof GraphicsView && \"xScale\" in view && \"yScale\" in view;\n    }\n    return false;\n  };\n\n  return ScaledXYView;\n})();\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport {Values} from \"@swim/util\";\nimport {Domain} from \"@swim/util\";\nimport type {Range} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Easing} from \"@swim/util\";\nimport {LinearDomain} from \"@swim/util\";\nimport {LinearRange} from \"@swim/util\";\nimport type {ContinuousScale} from \"@swim/util\";\nimport {LinearScale} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {DateTime} from \"@swim/time\";\nimport {TimeDomain} from \"@swim/time\";\nimport {TimeScale} from \"@swim/time\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {ScaleGestureInput} from \"@swim/view\";\nimport {ScaleGesture} from \"@swim/view\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport {ContinuousScaleAnimator} from \"./ContinuousScaleAnimator\";\nimport {ScaledXView} from \"./ScaledXView\";\nimport {ScaledYView} from \"./ScaledYView\";\nimport type {ScaledXYViewObserver} from \"./ScaledXYView\";\nimport type {ScaledXYView} from \"./ScaledXYView\";\n\n/** @internal */\nexport type ScaledFlags = number;\n\n/** @public */\nexport interface ScaledViewObserver<X = unknown, Y = unknown, V extends ScaledView<X, Y> = ScaledView<X, Y>> extends ScaledXYViewObserver<X, Y, V> {\n  viewWillAttachScaled?(scaledView: ScaledXView<X> | ScaledYView<Y>, targetView: View | null, view: V): void;\n\n  viewDidDetachScaled?(scaledView: ScaledXView<X> | ScaledYView<Y>, view: V): void;\n}\n\n/** @public */\nexport abstract class ScaledView<X = unknown, Y = unknown> extends GraphicsView implements ScaledXYView<X, Y> {\n  constructor() {\n    super();\n    this.scaledFlags = 0;\n    this.xDataDomain = null;\n    this.yDataDomain = null;\n    this.xDataRange = null;\n    this.yDataRange = null;\n    this.xDataDomainPadded = null;\n    this.yDataDomainPadded = null;\n  }\n\n  declare readonly observerType?: Class<ScaledViewObserver<X, Y>>;\n\n  /** @internal */\n  readonly scaledFlags: ScaledFlags;\n\n  /** @internal */\n  setScaledFlags(scaledFlags: ScaledFlags): void {\n    (this as Mutable<this>).scaledFlags = scaledFlags;\n  }\n\n  /** @override */\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsLayout,\n    didSetValue(xScale: ContinuousScale<X, number> | null): void {\n      this.owner.updateXDataRange();\n      this.owner.callObservers(\"viewDidSetXScale\", xScale, this.owner);\n    },\n    willTransition(xScale: ContinuousScale<X, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.XBoundingFlag) !== 0) {\n        this.owner.onBeginBoundingXScale(xScale);\n      }\n    },\n    didTransition(xScale: ContinuousScale<X, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.XBoundingFlag) !== 0) {\n        this.owner.onEndBoundingXScale(xScale);\n      }\n    },\n    didInterrupt(xScale: ContinuousScale<X, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.XBoundingFlag) !== 0) {\n        this.owner.onInterruptBoundingXScale(xScale);\n      }\n    },\n  })\n  readonly xScale!: ContinuousScaleAnimator<this, X, number>;\n\n  /** @override */\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsLayout,\n    didSetValue(yScale: ContinuousScale<Y, number> | null): void {\n      this.owner.updateYDataRange();\n      this.owner.callObservers(\"viewDidSetYScale\", yScale, this.owner);\n    },\n    willTransition(yScale: ContinuousScale<Y, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.YBoundingFlag) !== 0) {\n        this.owner.onBeginBoundingYScale(yScale);\n      }\n    },\n    didTransition(yScale: ContinuousScale<Y, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.YBoundingFlag) !== 0) {\n        this.owner.onEndBoundingYScale(yScale);\n      }\n    },\n    didInterrupt(yScale: ContinuousScale<Y, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.YBoundingFlag) !== 0) {\n        this.owner.onInterruptBoundingYScale(yScale);\n      }\n    },\n  })\n  readonly yScale!: ContinuousScaleAnimator<this, Y, number>;\n\n  /** @override */\n  xDomain(): Domain<X> | null;\n  xDomain(xDomain: Domain<X> | string | null, timing?: TimingLike | boolean): this;\n  xDomain(xMin: X, xMax: X, timing?: TimingLike | boolean): this;\n  xDomain(xMin?: Domain<X> | X | string | null, xMax?: X | TimingLike | boolean,\n          timing?: TimingLike | boolean): Domain<X> | null | this {\n    if (xMin === void 0) {\n      const xScale = this.xScale.value;\n      return xScale !== null ? xScale.domain : null;\n    } else {\n      if (xMin instanceof Domain || typeof xMin === \"string\") {\n        timing = xMax as TimingLike | boolean;\n      }\n      if (timing === true) {\n        timing = this.rescaleTransition.value;\n      }\n      const xRange = this.xRange();\n      if (xMin instanceof Domain || typeof xMin === \"string\") {\n        if (xRange !== null) {\n          this.xScale.setBaseScale(xMin as Domain<X> | string, xRange, timing);\n        } else {\n          this.xScale.setBaseDomain(xMin as Domain<X> | string, timing);\n        }\n      } else {\n        if (xRange !== null) {\n          this.xScale.setBaseScale(xMin as X, xMax as X, xRange[0], xRange[1], timing);\n        } else {\n          this.xScale.setBaseDomain(xMin as X, xMax as X, timing);\n        }\n      }\n      return this;\n    }\n  }\n\n  /** @override */\n  yDomain(): Domain<Y> | null;\n  yDomain(yDomain: Domain<Y> | string | null, timing?: TimingLike | boolean): this;\n  yDomain(yMin: Y, yMax: Y, timing?: TimingLike | boolean): this;\n  yDomain(yMin?: Domain<Y> | Y | string | null, yMax?: Y | TimingLike | boolean,\n          timing?: TimingLike | boolean): Domain<Y> | null | this {\n    if (yMin === void 0) {\n      const yScale = this.yScale.value;\n      return yScale !== null ? yScale.domain : null;\n    } else {\n      if (yMin instanceof Domain || typeof yMin === \"string\") {\n        timing = yMax as TimingLike | boolean;\n      }\n      if (timing === true) {\n        timing = this.rescaleTransition.value;\n      }\n      const yRange = this.yRange();\n      if (yMin instanceof Domain || typeof yMin === \"string\") {\n        if (yRange !== null) {\n          this.yScale.setBaseScale(yMin as Domain<Y> | string, yRange, timing);\n        } else {\n          this.yScale.setBaseDomain(yMin as Domain<Y>| string, timing);\n        }\n      } else {\n        if (yRange !== null) {\n          this.yScale.setBaseScale(yMin as Y, yMax as Y, yRange[0], yRange[1], timing);\n        } else {\n          this.yScale.setBaseDomain(yMin as Y, yMax as Y, timing);\n        }\n      }\n      return this;\n    }\n  }\n\n  /** @override */\n  xRange(): Range<number> | null {\n    const width = this.viewFrame.width;\n    if (isFinite(width)) {\n      const xRangePadding = this.xRangePadding.value;\n      const xRangeMin = xRangePadding[0];\n      const xRangeMax = width - xRangePadding[1];\n      return LinearRange(xRangeMin, xRangeMax);\n    } else {\n      return null;\n    }\n  }\n\n  /** @override */\n  yRange(): Range<number> | null {\n    const height = this.viewFrame.height;\n    if (isFinite(height)) {\n      const yRangePadding = this.yRangePadding.value;\n      const yRangeMin = yRangePadding[0];\n      const yRangeMax = height - yRangePadding[1];\n      return LinearRange(yRangeMax, yRangeMin);\n    } else {\n      return null;\n    }\n  }\n\n  /** @override */\n  readonly xDataDomain: Domain<X> | null;\n\n  protected setXDataDomain(newXDataDomain: Domain<X> | null): void {\n    const oldXDataDomain = this.xDataDomain;\n    if (!Equals(newXDataDomain, oldXDataDomain)) {\n      this.willSetXDataDomain(newXDataDomain, oldXDataDomain);\n      (this as Mutable<this>).xDataDomain = newXDataDomain;\n      this.onSetXDataDomain(newXDataDomain, oldXDataDomain);\n      this.didSetXDataDomain(newXDataDomain, oldXDataDomain);\n    }\n  }\n\n  protected willSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    // hook\n  }\n\n  protected onSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.updateXDataRange();\n    this.updateXDataDomainPadded();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.callObservers(\"viewDidSetXDataDomain\", newXDataDomain, this);\n  }\n\n  protected updateXDataDomain(xScaledDomain: Domain<X> | null): void {\n    let xDataDomain = this.xDataDomain;\n    if (xDataDomain === null || this.scaled.viewCount === 1) {\n      xDataDomain = xScaledDomain;\n    } else if (xScaledDomain !== null) {\n      if (Values.compare(xScaledDomain[0], xDataDomain[0]) < 0) {\n        xDataDomain = this.xScale.createDomain(xScaledDomain[0], xDataDomain[1]);\n      }\n      if (Values.compare(xDataDomain[1], xScaledDomain[1]) < 0) {\n        xDataDomain = this.xScale.createDomain(xDataDomain[0], xScaledDomain[1]);\n      }\n    }\n    this.setXDataDomain(xDataDomain);\n  }\n\n  /** @override */\n  readonly yDataDomain: Domain<Y> | null;\n\n  protected setYDataDomain(newYDataDomain: Domain<Y> | null): void {\n    const oldYDataDomain = this.yDataDomain;\n    if (!Equals(newYDataDomain, oldYDataDomain)) {\n      this.willSetYDataDomain(newYDataDomain, oldYDataDomain);\n      (this as Mutable<this>).yDataDomain = newYDataDomain;\n      this.onSetYDataDomain(newYDataDomain, oldYDataDomain);\n      this.didSetYDataDomain(newYDataDomain, oldYDataDomain);\n    }\n  }\n\n  protected willSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    // hook\n  }\n\n  protected onSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.updateYDataRange();\n    this.updateYDataDomainPadded();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.callObservers(\"viewDidSetYDataDomain\", newYDataDomain, this);\n  }\n\n  protected updateYDataDomain(yScaledDomain: Domain<Y> | null): void {\n    let yDataDomain = this.yDataDomain;\n    if (yDataDomain === null || this.scaled.viewCount === 1) {\n      yDataDomain = yScaledDomain;\n    } else if (yScaledDomain !== null) {\n      if (Values.compare(yScaledDomain[0], yDataDomain[0]) < 0) {\n        yDataDomain = this.yScale.createDomain(yScaledDomain[0], yDataDomain[1]);\n      }\n      if (Values.compare(yDataDomain[1], yScaledDomain[1]) < 0) {\n        yDataDomain = this.yScale.createDomain(yDataDomain[0], yScaledDomain[1]);\n      }\n    }\n    this.setYDataDomain(yDataDomain);\n  }\n\n  /** @override */\n  readonly xDataRange: Range<number> | null;\n\n  protected setXDataRange(xDataRange: Range<number> | null): void {\n    (this as Mutable<this>).xDataRange = xDataRange;\n  }\n\n  protected updateXDataRange(): void {\n    const xDataDomain = this.xDataDomain;\n    if (xDataDomain !== null) {\n      const xScale = this.xScale.value;\n      if (xScale !== null) {\n        this.setXDataRange(LinearRange(xScale(xDataDomain[0]), xScale(xDataDomain[1])));\n      } else {\n        this.setXDataRange(null);\n      }\n    }\n  }\n\n  /** @override */\n  readonly yDataRange: Range<number> | null;\n\n  protected setYDataRange(yDataRange: Range<number> | null): void {\n    (this as Mutable<this>).yDataRange = yDataRange;\n  }\n\n  protected updateYDataRange(): void {\n    const yDataDomain = this.yDataDomain;\n    if (yDataDomain !== null) {\n      const yScale = this.yScale.value;\n      if (yScale !== null) {\n        this.setYDataRange(LinearRange(yScale(yDataDomain[0]), yScale(yDataDomain[1])));\n      } else {\n        this.setYDataRange(null);\n      }\n    }\n  }\n\n  readonly xDataDomainPadded: Domain<X> | null;\n\n  protected setXDataDomainPadded(xDataDomainPadded: Domain<X> | null): void {\n    (this as Mutable<this>).xDataDomainPadded = xDataDomainPadded;\n  }\n\n  protected updateXDataDomainPadded(): void {\n    let xDataDomainPadded: Domain<X> | null;\n    const xDataDomain = this.xDataDomain;\n    if (xDataDomain !== null) {\n      let xDataDomainPaddedMin = xDataDomain[0];\n      let xDataDomainPaddedMax = xDataDomain[1];\n      const xDomainPadding = this.xDomainPadding.value;\n      if (typeof xDomainPadding[0] !== \"boolean\") {\n        xDataDomainPaddedMin = (+xDataDomainPaddedMin - +xDomainPadding[0]) as unknown as X;\n      }\n      if (typeof xDomainPadding[1] !== \"boolean\") {\n        xDataDomainPaddedMax = (+xDataDomainPaddedMax + +xDomainPadding[1]) as unknown as X;\n      }\n      xDataDomainPadded = this.xScale.createDomain(xDataDomainPaddedMin, xDataDomainPaddedMax);\n    } else {\n      xDataDomainPadded = null;\n    }\n    this.setXDataDomainPadded(xDataDomainPadded);\n  }\n\n  readonly yDataDomainPadded: Domain<Y> | null;\n\n  protected setYDataDomainPadded(yDataDomainPadded: Domain<Y> | null): void {\n    (this as Mutable<this>).yDataDomainPadded = yDataDomainPadded;\n  }\n\n  protected updateYDataDomainPadded(): void {\n    let yDataDomainPadded: Domain<Y> | null;\n    const yDataDomain = this.yDataDomain;\n    if (yDataDomain !== null) {\n      let yDataDomainPaddedMin = yDataDomain[0];\n      let yDataDomainPaddedMax = yDataDomain[1];\n      const yDomainPadding = this.yDomainPadding.value;\n      if (typeof yDomainPadding[0] !== \"boolean\") {\n        yDataDomainPaddedMin = (+yDataDomainPaddedMin - +yDomainPadding[0]) as unknown as Y;\n      }\n      if (typeof yDomainPadding[1] !== \"boolean\") {\n        yDataDomainPaddedMax = (+yDataDomainPaddedMax + +yDomainPadding[1]) as unknown as Y;\n      }\n      if (Values.equivalent(yDataDomainPaddedMin, yDataDomainPaddedMax)) {\n        yDataDomainPaddedMin = Math.floor(+yDataDomainPaddedMin) as unknown as Y;\n        yDataDomainPaddedMax = Math.ceil(+yDataDomainPaddedMax) as unknown as Y;\n        if (Values.equivalent(yDataDomainPaddedMin, yDataDomainPaddedMax)) {\n          yDataDomainPaddedMin = 0 as unknown as Y;\n          if (Values.equivalent(yDataDomainPaddedMin, yDataDomainPaddedMax)) {\n            yDataDomainPaddedMax = 1 as unknown as Y;\n          }\n        }\n      }\n      yDataDomainPadded = this.yScale.createDomain(yDataDomainPaddedMin, yDataDomainPaddedMax);\n    } else {\n      yDataDomainPadded = null;\n    }\n    this.setYDataDomainPadded(yDataDomainPadded);\n  }\n\n  @Property({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [X | boolean, X | boolean] {\n      return [true, true];\n    },\n    equalValues(newXDomainBounds: readonly [X | boolean, X | boolean], oldXDomainBounds: readonly [X | boolean, X | boolean]): boolean {\n      return Arrays.equal(newXDomainBounds, oldXDomainBounds);\n    },\n  })\n  readonly xDomainBounds!: Property<this, readonly [X | boolean, X | boolean]>;\n\n  @Property({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [Y | boolean, Y | boolean] {\n      return [true, true];\n    },\n    equalValues(newYDomainBounds: readonly [Y | boolean, Y | boolean], oldYDomainBounds: readonly [Y | boolean, Y | boolean]): boolean {\n      return Arrays.equal(newYDomainBounds, oldYDomainBounds);\n    },\n  })\n  readonly yDomainBounds!: Property<this, readonly [Y | boolean, Y | boolean]>;\n\n  @Property({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [number | boolean, number | boolean] {\n      return [true, true];\n    },\n    equalValues(newXZoomBounds: readonly [number | boolean, number | boolean], oldXZoomBounds: readonly [number | boolean, number | boolean]): boolean {\n      return Arrays.equal(newXZoomBounds, oldXZoomBounds);\n    },\n  })\n  readonly xZoomBounds!: Property<this, readonly [number | boolean, number | boolean]>;\n\n  @Property({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [number | boolean, number | boolean] {\n      return [true, true];\n    },\n    equalValues(newYDomainBounds: readonly [number | boolean, number | boolean], oldYDomainBounds: readonly [number | boolean, number | boolean]): boolean {\n      return Arrays.equal(newYDomainBounds, oldYDomainBounds);\n    },\n  })\n  readonly yZoomBounds!: Property<this, readonly [number | boolean, number | boolean]>;\n\n  @Property({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [X | boolean, X | boolean] {\n      return [false, false];\n    },\n    equalValues(newXDomainPadding: readonly [X | boolean, X | boolean], oldXDomainPadding: readonly [X | boolean, X | boolean]): boolean {\n      return Arrays.equal(newXDomainPadding, oldXDomainPadding);\n    },\n  })\n  readonly xDomainPadding!: Property<this, readonly [X | boolean, X | boolean]>;\n\n  @Property({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [Y | boolean, Y | boolean] {\n      return [false, false];\n    },\n    equalValues(newYDomainPadding: readonly [Y | boolean, Y | boolean], oldYDomainPadding: readonly [Y | boolean, Y | boolean]): boolean {\n      return Arrays.equal(newYDomainPadding, oldYDomainPadding);\n    },\n  })\n  readonly yDomainPadding!: Property<this, readonly [Y | boolean, Y | boolean]>;\n\n  protected updateXRangePadding(xScaledRangePadding: readonly [number, number]): void {\n    if (this.xRangePadding.hasAffinity(Affinity.Intrinsic)) {\n      let xRangePadding = this.xRangePadding.value;\n      if (xRangePadding === null || this.scaled.viewCount === 1) {\n        xRangePadding = xScaledRangePadding;\n      } else if (xScaledRangePadding !== null) {\n        xRangePadding = [Math.max(xRangePadding[0], xScaledRangePadding[0]), Math.max(xRangePadding[1], xScaledRangePadding[1])];\n      }\n      this.xRangePadding.setIntrinsic(xRangePadding);\n    }\n  }\n\n  /** @override */\n  @Property({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    didSetValue(xRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetXRangePadding\", xRangePadding, this.owner);\n    },\n    equalValues(newXRangePadding: readonly [number, number], oldXRangePadding: readonly [number, number]): boolean {\n      return Arrays.equal(newXRangePadding, oldXRangePadding);\n    },\n  })\n  readonly xRangePadding!: Property<this, readonly [number, number]>;\n\n  protected updateYRangePadding(yScaledRangePadding: readonly [number, number]): void {\n    if (this.yRangePadding.hasAffinity(Affinity.Intrinsic)) {\n      let yRangePadding = this.yRangePadding.value;\n      if (yRangePadding === null || this.scaled.viewCount === 1) {\n        yRangePadding = yScaledRangePadding;\n      } else if (yScaledRangePadding !== null) {\n        yRangePadding = [Math.max(yRangePadding[0], yScaledRangePadding[0]), Math.max(yRangePadding[1], yScaledRangePadding[1])];\n      }\n      this.yRangePadding.setIntrinsic(yRangePadding);\n    }\n  }\n\n  /** @override */\n  @Property({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    didSetValue(yRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetYRangePadding\", yRangePadding, this.owner);\n    },\n    equalValues(newYRangePadding: readonly [number, number], oldYRangePadding: readonly [number, number]): boolean {\n      return Arrays.equal(newYRangePadding, oldYRangePadding);\n    },\n  })\n  readonly yRangePadding!: Property<this, readonly [number, number]>;\n\n  @Property({\n    initValue(): readonly [number, number] {\n      return [1.0, 0.5];\n    },\n    equalValues(newFitAlign: readonly [number, number], oldFitAlign: readonly [number, number]): boolean {\n      return Arrays.equal(newFitAlign, oldFitAlign);\n    },\n    fromLike(value: readonly [number, number] | number): readonly [number, number] {\n      if (typeof value === \"number\") {\n        return [value, value];\n      }\n      return value;\n    },\n  })\n  readonly fitAlign!: Property<this, Like<readonly [number, number], number>>;\n\n  xFitAlign(): number;\n  xFitAlign(xFitAlign: number): this;\n  xFitAlign(xFitAlign?: number): number | this {\n    const fitAlign = this.fitAlign.value;\n    if (xFitAlign === void 0) {\n      return fitAlign[0];\n    } else {\n      this.fitAlign.set([xFitAlign, fitAlign[1]]);\n      return this;\n    }\n  }\n\n  yFitAlign(): number;\n  yFitAlign(yFitAlign: number): this;\n  yFitAlign(yFitAlign?: number): number | this {\n    const fitAlign = this.fitAlign.value;\n    if (yFitAlign === void 0) {\n      return fitAlign[0];\n    } else {\n      this.fitAlign.set([fitAlign[0], yFitAlign]);\n      return this;\n    }\n  }\n\n  @Property({valueType: Number})\n  readonly fitAspectRatio!: Property<this, number | undefined>;\n\n  preserveAspectRatio(): boolean;\n  preserveAspectRatio(preserveAspectRatio: boolean): this;\n  preserveAspectRatio(preserveAspectRatio?: boolean): boolean | this {\n    if (preserveAspectRatio === void 0) {\n      return this.gesture.preserveAspectRatio;\n    } else {\n      this.gesture.preserveAspectRatio = preserveAspectRatio;\n      return this;\n    }\n  }\n\n  domainTracking(): readonly [boolean, boolean];\n  domainTracking(domainTracking: readonly [boolean, boolean] | boolean): this;\n  domainTracking(xDomainTracking: boolean, yDomainTracking: boolean): this;\n  domainTracking(xDomainTracking?: readonly [boolean, boolean] | boolean,\n                 yDomainTracking?: boolean): readonly [boolean, boolean] | this {\n    if (xDomainTracking === void 0) {\n      return [(this.scaledFlags & ScaledView.XDomainTrackingFlag) !== 0,\n              (this.scaledFlags & ScaledView.YDomainTrackingFlag) !== 0];\n    } else {\n      if (Array.isArray(xDomainTracking)) {\n        yDomainTracking = xDomainTracking[1] as boolean;\n        xDomainTracking = xDomainTracking[0] as boolean;\n      } else if (yDomainTracking === void 0) {\n        yDomainTracking = xDomainTracking as boolean;\n      }\n      if (xDomainTracking as boolean) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.XDomainTrackingFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XDomainTrackingFlag);\n      }\n      if (yDomainTracking) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.YDomainTrackingFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YDomainTrackingFlag);\n      }\n      return this;\n    }\n  }\n\n  xDomainTracking(): boolean;\n  xDomainTracking(xDomainTracking: boolean): this;\n  xDomainTracking(xDomainTracking?: boolean): boolean | this {\n    if (xDomainTracking === void 0) {\n      return (this.scaledFlags & ScaledView.XDomainTrackingFlag) !== 0;\n    } else {\n      if (xDomainTracking) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.XDomainTrackingFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XDomainTrackingFlag);\n      }\n      return this;\n    }\n  }\n\n  yDomainTracking(): boolean;\n  yDomainTracking(yDomainTracking: boolean): this;\n  yDomainTracking(yDomainTracking?: boolean): boolean | this {\n    if (yDomainTracking === void 0) {\n      return (this.scaledFlags & ScaledView.YDomainTrackingFlag) !== 0;\n    } else {\n      if (yDomainTracking) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.YDomainTrackingFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YDomainTrackingFlag);\n      }\n      return this;\n    }\n  }\n\n  scaleGestures(): readonly [boolean, boolean];\n  scaleGestures(scaleGestures: readonly [boolean, boolean] | boolean): this;\n  scaleGestures(xScaleGestures: boolean, yScaleGestures: boolean): this;\n  scaleGestures(xScaleGestures?: readonly [boolean, boolean] | boolean,\n                yScaleGestures?: boolean): readonly [boolean, boolean] | this {\n    if (xScaleGestures === void 0) {\n      return [(this.scaledFlags & ScaledView.XScaleGesturesFlag) !== 0,\n              (this.scaledFlags & ScaledView.YScaleGesturesFlag) !== 0];\n    } else {\n      if (Array.isArray(xScaleGestures)) {\n        yScaleGestures = xScaleGestures[1] as boolean;\n        xScaleGestures = xScaleGestures[0] as boolean;\n      } else if (yScaleGestures === void 0) {\n        yScaleGestures = xScaleGestures as boolean;\n      }\n      if (xScaleGestures as boolean) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.XScaleGesturesFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XScaleGesturesFlag);\n      }\n      if (yScaleGestures) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.YScaleGesturesFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YScaleGesturesFlag);\n      }\n      return this;\n    }\n  }\n\n  xScaleGestures(): boolean;\n  xScaleGestures(xScaleGestures: boolean): this;\n  xScaleGestures(xScaleGestures?: boolean): boolean | this {\n    if (xScaleGestures === void 0) {\n      return (this.scaledFlags & ScaledView.XScaleGesturesFlag) !== 0;\n    } else {\n      if (xScaleGestures) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.XScaleGesturesFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XScaleGesturesFlag);\n      }\n      return this;\n    }\n  }\n\n  yScaleGestures(): boolean;\n  yScaleGestures(yScaleGestures: boolean): this;\n  yScaleGestures(yScaleGestures?: boolean): boolean | this {\n    if (yScaleGestures === void 0) {\n      return (this.scaledFlags & ScaledView.YScaleGesturesFlag) !== 0;\n    } else {\n      if (yScaleGestures) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.YScaleGesturesFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YScaleGesturesFlag);\n      }\n      return this;\n    }\n  }\n\n  @Property({\n    valueType: Timing,\n    inherits: true,\n    initValue(): Timing | boolean | undefined {\n      return Easing.linear.withDuration(250);\n    },\n  })\n  readonly rescaleTransition!: Property<this, Timing | boolean | undefined>;\n\n  @Property({\n    valueType: Timing,\n    inherits: true,\n    initValue(): Timing | boolean | undefined {\n      return Easing.cubicOut.withDuration(250);\n    },\n  })\n  readonly reboundTransition!: Property<this, Timing | boolean | undefined>;\n\n  fitX(tween: boolean = false): void {\n    this.setScaledFlags(this.scaledFlags | ScaledView.XFitFlag);\n    if (tween === true) {\n      this.setScaledFlags(this.scaledFlags | ScaledView.XFitTweenFlag);\n    }\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  fitY(tween: boolean = false): void {\n    this.setScaledFlags(this.scaledFlags | ScaledView.YFitFlag);\n    if (tween === true) {\n      this.setScaledFlags(this.scaledFlags | ScaledView.YFitTweenFlag);\n    }\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  fit(tween: boolean = false): void {\n    this.setScaledFlags(this.scaledFlags | (ScaledView.XFitFlag | ScaledView.YFitFlag));\n    if (tween === true) {\n      this.setScaledFlags(this.scaledFlags | ScaledView.FitTweenMask);\n    }\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  /** @internal */\n  @ViewSet({\n    binds: true,\n    observes: true,\n    willAttachView(scaledView: ScaledXView<X> | ScaledYView<Y>, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachScaled\", scaledView, targetView, this.owner);\n    },\n    didAttachView(newScaledView: ScaledXView<X> | ScaledYView<Y>): void {\n      if (ScaledXView.is<X>(newScaledView)) {\n        this.owner.updateXDataDomain(newScaledView.xDataDomain);\n      }\n      if (ScaledYView.is<Y>(newScaledView)) {\n        this.owner.updateYDataDomain(newScaledView.yDataDomain);\n      }\n    },\n    didDetachView(scaledView: ScaledXView<X> | ScaledYView<Y>): void {\n      this.owner.callObservers(\"viewDidDetachScaled\", scaledView, this.owner);\n    },\n    viewDidSetXRangePadding(xRangePadding: readonly [number, number]): void {\n      this.owner.updateXRangePadding(xRangePadding);\n    },\n    viewDidSetYRangePadding(yRangePadding: readonly [number, number]): void {\n      this.owner.updateYRangePadding(yRangePadding);\n    },\n    viewDidSetXDataDomain(xDataDomain: Domain<X> | null): void {\n      this.owner.updateXDataDomain(xDataDomain);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetYDataDomain(yDataDomain: Domain<Y> | null): void {\n      this.owner.updateYDataDomain(yDataDomain);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    detectView(view: View): ScaledXView<X> | ScaledYView<Y> | null {\n      return ScaledXView.is<X>(view) || ScaledYView.is<Y>(view) ? view : null;\n    },\n  })\n  readonly scaled!: ViewSet<this, ScaledXView<X> | ScaledYView<Y>> & Observes<ScaledXView<X>> & Observes<ScaledYView<Y>>;\n\n  protected override onLayout(): void {\n    super.onLayout();\n    const updateTime = this.updateTime;\n    this.xScale.recohere(updateTime);\n    this.yScale.recohere(updateTime);\n    this.resizeScales();\n    this.updateScales();\n  }\n\n  /**\n   * Updates own scale ranges to project onto view frame. Infers own scales\n   * from child view data domains if derived x/y scales are undefined.\n   */\n  protected resizeScales(): void {\n    let xScale: ContinuousScale<X, number> | null;\n    const xRange = this.xRange();\n    if (xRange !== null) {\n      xScale = !this.xScale.derived ? this.xScale.state : null;\n      if (xScale !== null) {\n        if (!xScale.range.equals(xRange)) {\n          this.xScale.setRange(xRange);\n          this.setScaledFlags(this.scaledFlags | ScaledView.RescaleFlag);\n        }\n      } else if (this.xScale.inlet === null || this.xScale.inletValue === null) {\n        const xDataDomainPadded = this.xDataDomainPadded;\n        if (xDataDomainPadded !== null) {\n          xScale = ScaledView.createScale(xDataDomainPadded[0], xDataDomainPadded[1], xRange[0], xRange[1]);\n          this.xScale.set(xScale);\n          this.setScaledFlags(this.scaledFlags | ScaledView.XFitFlag);\n        }\n      }\n    }\n\n    let yScale: ContinuousScale<Y, number> | null;\n    const yRange = this.yRange();\n    if (yRange !== null) {\n      yScale = !this.yScale.derived ? this.yScale.state : null;\n      if (yScale !== null) {\n        if (!yScale.range.equals(yRange)) {\n          this.yScale.setRange(yRange);\n          this.setScaledFlags(this.scaledFlags | ScaledView.RescaleFlag);\n        }\n      } else if (this.yScale.inlet === null || this.yScale.inletValue === null) {\n        const yDataDomainPadded = this.yDataDomainPadded;\n        if (yDataDomainPadded !== null) {\n          yScale = ScaledView.createScale(yDataDomainPadded[0], yDataDomainPadded[1], yRange[0], yRange[1]);\n          this.yScale.set(yScale);\n          this.setScaledFlags(this.scaledFlags | ScaledView.YFitFlag);\n        }\n      }\n    }\n  }\n\n  protected updateScales(): void {\n    const xScale = !this.xScale.derived ? this.xScale.state : null;\n    const yScale = !this.yScale.derived ? this.yScale.state : null;\n    if (xScale !== null && yScale !== null) {\n      const isPressing = this.gesture.pressing;\n      if (!isPressing) {\n        const isCoasting = this.gesture.coasting;\n        this.boundScales(xScale, yScale, isCoasting);\n      }\n    }\n  }\n\n  /**\n   * Clamps scales to domain bounds and corrects aspect ratio.\n   */\n  protected boundScales(oldXScale: ContinuousScale<X, number>,\n                        oldYScale: ContinuousScale<Y, number>,\n                        isCoasting: boolean): void {\n    const oldXDomain = oldXScale.domain;\n    const oldYDomain = oldYScale.domain;\n    let newXDomain: Domain<X> = oldXDomain;\n    let newYDomain: Domain<Y> = oldYDomain;\n\n    // fit x domain\n    const xDataDomainPadded = this.xDataDomainPadded;\n    if (xDataDomainPadded !== null && (this.scaledFlags & ScaledView.XFitFlag) !== 0) {\n      newXDomain = xDataDomainPadded;\n      this.setScaledFlags(this.scaledFlags | ScaledView.XInRangeMask);\n    } else {\n      newXDomain = oldXDomain;\n    }\n\n    // fit y domain\n    const yDataDomainPadded = this.yDataDomainPadded;\n    if (yDataDomainPadded !== null && (this.scaledFlags & ScaledView.YFitFlag) !== 0) {\n      newYDomain = yDataDomainPadded;\n      this.setScaledFlags(this.scaledFlags | ScaledView.YInRangeMask);\n    } else {\n      newYDomain = oldYDomain;\n    }\n\n    // clamp x domain\n    const xDomainPadded = xDataDomainPadded !== null ? xDataDomainPadded : oldXDomain;\n    const xDomainBounds = this.xDomainBounds.value;\n    const xDomainMin = xDomainBounds[0] === false ? void 0\n                     : xDomainBounds[0] === true ? xDomainPadded[0]\n                     : xDomainBounds[0];\n    const xDomainMax = xDomainBounds[1] === false ? void 0\n                     : xDomainBounds[1] === true ? xDomainPadded[1]\n                     : xDomainBounds[1];\n    const xZoomBounds = this.xZoomBounds.value;\n    let xZoomMin: number | boolean | undefined = xZoomBounds[0];\n    let xZoomMax: number | boolean | undefined = xZoomBounds[1];\n    if (xZoomMin === true) {\n      if (oldXScale instanceof LinearScale) {\n        xZoomMin = ScaledView.LinearZoomMin;\n      } else if (oldXScale instanceof TimeScale) {\n        xZoomMin = ScaledView.TimeZoomMin;\n      } else {\n        xZoomMin = void 0;\n      }\n    } else if (xZoomMin === false) {\n      xZoomMin = void 0;\n    }\n    if (xZoomMax === true) {\n      if (oldXScale instanceof LinearScale) {\n        xZoomMax = ScaledView.LinearZoomMax;\n      } else if (oldXScale instanceof TimeScale) {\n        xZoomMax = ScaledView.TimeZoomMax;\n      } else {\n        xZoomMax = void 0;\n      }\n    } else if (xZoomMax === false) {\n      xZoomMax = void 0;\n    }\n    newXDomain = oldXScale.clampDomain(xDomainMin, xDomainMax, xZoomMin, xZoomMax).domain;\n\n    // clamp y domain\n    const yDomainPadded = yDataDomainPadded !== null ? yDataDomainPadded : oldYDomain;\n    const yDomainBounds = this.yDomainBounds.value;\n    const yDomainMin = yDomainBounds[0] === false ? void 0\n                     : yDomainBounds[0] === true ? yDomainPadded[0]\n                     : yDomainBounds[0];\n    const yDomainMax = yDomainBounds[1] === false ? void 0\n                     : yDomainBounds[1] === true ? yDomainPadded[1]\n                     : yDomainBounds[1];\n    const yZoomBounds = this.yZoomBounds.value;\n    let yZoomMin: number | boolean | undefined = yZoomBounds[0];\n    let yZoomMax: number | boolean | undefined = yZoomBounds[1];\n    if (yZoomMin === true) {\n      if (oldYScale instanceof LinearScale) {\n        yZoomMin = ScaledView.LinearZoomMin;\n      } else if (oldYScale instanceof TimeScale) {\n        yZoomMin = ScaledView.TimeZoomMin;\n      } else {\n        yZoomMin = void 0;\n      }\n    } else if (yZoomMin === false) {\n      yZoomMin = void 0;\n    }\n    if (yZoomMax === true) {\n      if (oldYScale instanceof LinearScale) {\n        yZoomMax = ScaledView.LinearZoomMax;\n      } else if (oldYScale instanceof TimeScale) {\n        yZoomMax = ScaledView.TimeZoomMax;\n      } else {\n        yZoomMax = void 0;\n      }\n    } else if (yZoomMax === false) {\n      yZoomMax = void 0;\n    }\n    newYDomain = oldYScale.clampDomain(yDomainMin, yDomainMax, yZoomMin, yZoomMax).domain;\n\n    // track x domain\n    if (xDataDomainPadded !== null && !isCoasting &&\n        (this.scaledFlags & ScaledView.XDomainTrackingFlag) !== 0 &&\n        (this.scaledFlags & ScaledView.XInRangeMask) !== 0) {\n      if ((this.scaledFlags & ScaledView.XInRangeMask) === ScaledView.XInRangeMask) {\n        newXDomain = xDataDomainPadded;\n      } else {\n        const xDomainWidth = +newXDomain[1] - +newXDomain[0] as unknown as X;\n        if ((this.scaledFlags & ScaledView.XMinInRangeFlag) !== 0) {\n          newXDomain = this.xScale.createDomain(xDataDomainPadded[0], +xDataDomainPadded[0] + +xDomainWidth as unknown as X);\n        } else {\n          newXDomain = this.xScale.createDomain(+xDataDomainPadded[1] - +xDomainWidth as unknown as X, xDataDomainPadded[1]);\n        }\n      }\n    }\n\n    // track y domain\n    if (yDataDomainPadded !== null && !isCoasting &&\n        (this.scaledFlags & ScaledView.YDomainTrackingFlag) !== 0 &&\n        (this.scaledFlags & ScaledView.YInRangeMask) !== 0) {\n      if ((this.scaledFlags & ScaledView.YInRangeMask) === ScaledView.YInRangeMask) {\n        newYDomain = yDataDomainPadded;\n      } else {\n        const yDomainWidth = +newYDomain[1] - +newYDomain[0] as unknown as Y;\n        if ((this.scaledFlags & ScaledView.YMinInRangeFlag) !== 0) {\n          newYDomain = this.yScale.createDomain(yDataDomainPadded[0], +yDataDomainPadded[0] + +yDomainWidth as unknown as Y);\n        } else {\n          newYDomain = this.yScale.createDomain(+yDataDomainPadded[1] - +yDomainWidth as unknown as Y, yDataDomainPadded[1]);\n        }\n      }\n    }\n\n    // fit aspect ratio\n    const fitAspectRatio = this.fitAspectRatio.value;\n    if (fitAspectRatio !== void 0 && (this.gesture.preserveAspectRatio || (this.scaledFlags & ScaledView.FitMask) !== 0)) {\n      const xRange = oldXScale.range;\n      const yRange = oldYScale.range;\n      const oldDomainWidth = +newXDomain[1] - +newXDomain[0];\n      const oldDomainHeight = +newYDomain[1] - +newYDomain[0];\n      const domainAspectRatio = oldDomainWidth / oldDomainHeight;\n      const rangeAspectRatio = (xRange[1] - xRange[0]) / (yRange[0] - yRange[1]);\n      const anamorphicAspectRatio = Math.abs(fitAspectRatio * rangeAspectRatio);\n      if (!Equivalent(domainAspectRatio, anamorphicAspectRatio)) {\n        const fitAlign = this.fitAlign.value;\n        if (fitAspectRatio < 0 && domainAspectRatio < anamorphicAspectRatio ||\n            fitAspectRatio > 0 && domainAspectRatio > anamorphicAspectRatio) {\n          const newDomainWidth = oldDomainHeight * anamorphicAspectRatio;\n          const dx = newDomainWidth - oldDomainWidth;\n          newXDomain = this.xScale.createDomain(+newXDomain[0] - dx * fitAlign[0] as unknown as X,\n                                                +newXDomain[1] + dx * (1 - fitAlign[0]) as unknown as X);\n        } else {\n          const newDomainHeight = oldDomainWidth / anamorphicAspectRatio;\n          const dy = newDomainHeight - oldDomainHeight;\n          newYDomain = this.yScale.createDomain(+newYDomain[0] - dy * fitAlign[1] as unknown as Y,\n                                                +newYDomain[1] + dy * (1 - fitAlign[1]) as unknown as Y);\n        }\n      }\n    }\n\n    // update x domain\n    if ((this.scaledFlags & ScaledView.XBoundingFlag) === 0 && !Equivalent(newXDomain, oldXDomain)) {\n      let timing: Timing | boolean | undefined;\n      if ((this.scaledFlags & (ScaledView.XFitFlag | ScaledView.RescaleFlag)) === 0 ||\n          (this.scaledFlags & ScaledView.XFitTweenFlag) !== 0) {\n        timing = (this.scaledFlags & ScaledView.InteractingMask) !== 0\n               ? this.reboundTransition.value : this.rescaleTransition.value;\n        if (timing !== void 0 && timing !== false) {\n          this.setScaledFlags(this.scaledFlags | ScaledView.XBoundingFlag);\n        }\n      }\n      this.willReboundX(oldXScale);\n      this.xDomain(newXDomain, timing);\n      if (timing === void 0 && timing !== false) {\n        this.didReboundX(this.xScale.getState());\n      }\n      if (xDataDomainPadded !== null && (this.scaledFlags & ScaledView.XFitFlag) !== 0) {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XFitFlag);\n      }\n    }\n\n    // update y domain\n    if ((this.scaledFlags & ScaledView.YBoundingFlag) === 0 && !Equivalent(newYDomain, oldYDomain)) {\n      let timing: Timing | boolean | undefined;\n      if ((this.scaledFlags & (ScaledView.YFitFlag | ScaledView.RescaleFlag)) === 0 ||\n          (this.scaledFlags & ScaledView.YFitTweenFlag) !== 0) {\n        timing = (this.scaledFlags & ScaledView.InteractingMask) !== 0\n               ? this.reboundTransition.value : this.rescaleTransition.value;\n        if (timing !== void 0 && timing !== false) {\n          this.setScaledFlags(this.scaledFlags | ScaledView.YBoundingFlag);\n        }\n      }\n      this.willReboundY(oldYScale);\n      this.yDomain(newYDomain, timing);\n      if (timing === void 0 && timing !== false) {\n        this.didReboundY(this.yScale.getState());\n      }\n      if (yDataDomainPadded !== null && (this.scaledFlags & ScaledView.YFitFlag) !== 0) {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YFitFlag);\n      }\n    }\n\n    this.setScaledFlags(this.scaledFlags & ~(ScaledView.InteractedFlag | ScaledView.RescaleFlag));\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, displayChild: (this: this, childView: View, displayFlags: ViewFlags) => void): void {\n    let xScale: ContinuousScale<X, number> | null;\n    let yScale: ContinuousScale<Y, number> | null;\n    if ((displayFlags & View.NeedsLayout) !== 0 &&\n        (xScale = this.xScale.value, xScale !== null) &&\n        (yScale = this.yScale.value, yScale !== null)) {\n      this.layoutChildren(xScale, yScale, displayFlags, displayChild);\n    } else {\n      super.displayChildren(displayFlags, displayChild);\n    }\n  }\n\n  protected layoutChildren(xScale: ContinuousScale<X, number>, yScale: ContinuousScale<Y, number>,\n                           displayFlags: ViewFlags, displayChild: (this: this, childView: View, displayFlags: ViewFlags) => void): void {\n    // Recompute extrema when laying out child views.\n    let xDataDomainMin: X | undefined;\n    let xDataDomainMax: X | undefined;\n    let yDataDomainMin: Y | undefined;\n    let yDataDomainMax: Y | undefined;\n    let xRangePaddingMin = 0;\n    let xRangePaddingMax = 0;\n    let yRangePaddingMin = 0;\n    let yRangePaddingMax = 0;\n    let xCount = 0;\n    let yCount = 0;\n\n    type self = this;\n    function layoutChild(this: self, childView: View, displayFlags: ViewFlags): void {\n      displayChild.call(this, childView, displayFlags);\n      if (ScaledXView.is<X>(childView) && childView.xScale.derived) {\n        const childXDataDomain = childView.xDataDomain;\n        if (childXDataDomain !== null) {\n          if (xCount !== 0) {\n            if (Values.compare(childXDataDomain[0], xDataDomainMin) < 0) {\n              xDataDomainMin = childXDataDomain[0];\n            }\n            if (Values.compare(xDataDomainMax, childXDataDomain[1]) < 0) {\n              xDataDomainMax = childXDataDomain[1];\n            }\n          } else {\n            xDataDomainMin = childXDataDomain[0];\n            xDataDomainMax = childXDataDomain[1];\n          }\n          const childXRangePadding = childView.xRangePadding.value;\n          xRangePaddingMin = Math.max(childXRangePadding[0], xRangePaddingMin);\n          xRangePaddingMax = Math.max(childXRangePadding[1], xRangePaddingMax);\n          xCount += 1;\n        }\n      }\n      if (ScaledYView.is<Y>(childView) && childView.yScale.derived) {\n        const childYDataDomain = childView.yDataDomain;\n        if (childYDataDomain !== null) {\n          if (yCount !== 0) {\n            if (Values.compare(childYDataDomain[0], yDataDomainMin) < 0) {\n              yDataDomainMin = childYDataDomain[0];\n            }\n            if (Values.compare(yDataDomainMax, childYDataDomain[1]) < 0) {\n              yDataDomainMax = childYDataDomain[1];\n            }\n          } else {\n            yDataDomainMin = childYDataDomain[0];\n            yDataDomainMax = childYDataDomain[1];\n          }\n          const childYRangePadding = childView.yRangePadding.value;\n          yRangePaddingMin = Math.max(childYRangePadding[0], yRangePaddingMin);\n          yRangePaddingMax = Math.max(childYRangePadding[1], yRangePaddingMax);\n          yCount += 1;\n        }\n      }\n    }\n    super.displayChildren(displayFlags, layoutChild);\n\n    this.setXDataDomain(xCount !== 0 ? this.xScale.createDomain(xDataDomainMin!, xDataDomainMax!) : null);\n    this.setYDataDomain(yCount !== 0 ? this.yScale.createDomain(yDataDomainMin!, yDataDomainMax!) : null);\n    this.xRangePadding.setIntrinsic([xRangePaddingMin, xRangePaddingMax]);\n    this.yRangePadding.setIntrinsic([yRangePaddingMin, yRangePaddingMax]);\n  }\n\n  protected onBeginBoundingXScale(xScale: ContinuousScale<X, number>): void {\n    // hook\n  }\n\n  protected onEndBoundingXScale(xScale: ContinuousScale<X, number>): void {\n    this.setScaledFlags(this.scaledFlags & ~ScaledView.XBoundingFlag);\n    this.didReboundX(xScale);\n  }\n\n  protected onInterruptBoundingXScale(xScale: ContinuousScale<X, number>): void {\n    this.setScaledFlags(this.scaledFlags & ~ScaledView.XBoundingFlag);\n    this.didReboundX(xScale);\n  }\n\n  protected onBeginBoundingYScale(yScale: ContinuousScale<Y, number>): void {\n    // hook\n  }\n\n  protected onEndBoundingYScale(yScale: ContinuousScale<Y, number>): void {\n    this.setScaledFlags(this.scaledFlags & ~ScaledView.YBoundingFlag);\n    this.didReboundY(yScale);\n  }\n\n  protected onInterruptBoundingYScale(yScale: ContinuousScale<Y, number>): void {\n    this.setScaledFlags(this.scaledFlags & ~ScaledView.YBoundingFlag);\n    this.didReboundY(yScale);\n  }\n\n  protected willReboundX(xScale: ContinuousScale<X, number>): void {\n    this.gesture.neutralizeX();\n  }\n\n  protected didReboundX(xScale: ContinuousScale<X, number>): void {\n    // hook\n  }\n\n  protected willReboundY(yScale: ContinuousScale<Y, number>): void {\n    this.gesture.neutralizeY();\n  }\n\n  protected didReboundY(yScale: ContinuousScale<Y, number>): void {\n    // hook\n  }\n\n  @ScaleGesture({\n    bindsOwner: true,\n    getXScale(): ContinuousScale<X, number> | null {\n      if ((this.owner.scaledFlags & ScaledView.XScaleGesturesFlag) !== 0) {\n        return this.owner.xScale.value;\n      }\n      return null;\n    },\n    setXScale(xScale: ContinuousScale<X, number> | null, timing?: TimingLike | boolean): void {\n      if ((this.owner.scaledFlags & ScaledView.XScaleGesturesFlag) !== 0) {\n        this.owner.xScale.set(xScale, timing);\n      }\n    },\n    getYScale(): ContinuousScale<Y, number> | null {\n      if ((this.owner.scaledFlags & ScaledView.YScaleGesturesFlag) !== 0) {\n        return this.owner.yScale.value;\n      }\n      return null;\n    },\n    setYScale(yScale: ContinuousScale<Y, number> | null, timing?: TimingLike | boolean): void {\n      if ((this.owner.scaledFlags & ScaledView.YScaleGesturesFlag) !== 0) {\n        this.owner.yScale.set(yScale, timing);\n      }\n    },\n    willStartInteracting(): void {\n      this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.BoundingMask | ScaledView.InteractingFlag);\n    },\n    didStopInteracting(): void {\n      const xScale = this.owner.xScale.value;\n      const xDataDomain = this.owner.xDataDomain;\n      if (xScale !== null && xDataDomain !== null) {\n        const xDomain = xScale.domain;\n        if (xDomain.contains(xDataDomain[0])) {\n          this.owner.setScaledFlags(this.owner.scaledFlags | ScaledView.XMinInRangeFlag);\n        } else {\n          this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.XMinInRangeFlag);\n        }\n        if (xDomain.contains(xDataDomain[1])) {\n          this.owner.setScaledFlags(this.owner.scaledFlags | ScaledView.XMaxInRangeFlag);\n        } else {\n          this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.XMaxInRangeFlag);\n        }\n      }\n      const yScale = this.owner.yScale.value;\n      const yDataDomain = this.owner.yDataDomain;\n      if (yScale !== null && yDataDomain !== null) {\n        const yDomain = yScale.domain;\n        if (yDomain.contains(yDataDomain[0])) {\n          this.owner.setScaledFlags(this.owner.scaledFlags | ScaledView.YMinInRangeFlag);\n        } else {\n          this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.YMinInRangeFlag);\n        }\n        if (yDomain.contains(yDataDomain[1])) {\n          this.owner.setScaledFlags(this.owner.scaledFlags | ScaledView.YMaxInRangeFlag);\n        } else {\n          this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.YMaxInRangeFlag);\n        }\n      }\n      this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.InteractingFlag | ScaledView.InteractedFlag);\n    },\n    didStopPressing(): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    willBeginCoast(input: ScaleGestureInput, event: Event | null): boolean | void {\n      if ((this.owner.scaledFlags & ScaledView.XScaleGesturesFlag) === 0) {\n        input.disableX = true;\n        input.vx = 0;\n        input.ax = 0;\n      }\n      if ((this.owner.scaledFlags & ScaledView.YScaleGesturesFlag) === 0) {\n        input.disableY = true;\n        input.vy = 0;\n        input.ay = 0;\n      }\n    },\n  })\n  readonly gesture!: ScaleGesture<this, ScaledView<X, Y>, X, Y>;\n\n  /** @internal */\n  static createScale<X, Y>(x0: X, x1: X, y0: Y | undefined, y1: Y | undefined): ContinuousScale<X, Y> {\n    let range: LinearRange;\n    if (typeof y0 === \"number\" && typeof y1 === \"number\") {\n      range = LinearRange(y0, y1);\n    } else {\n      range = LinearRange(0, 1);\n    }\n    if (typeof x0 === \"number\" && typeof x1 === \"number\") {\n      return LinearScale(LinearDomain(x0, x1), range) as unknown as ContinuousScale<X, Y>;\n    } else if (x0 instanceof DateTime && x1 instanceof DateTime) {\n      return TimeScale(TimeDomain(x0, x1), range) as unknown as ContinuousScale<X, Y>;\n    }\n    throw new TypeError(x0 + \", \" + x1 + \", \" + y0 + \", \" + y1);\n  }\n\n  /** @internal */\n  static parseScale<X, Y>(string: string): ContinuousScale<X, Y> {\n    if (string === \"linear\") {\n      return LinearScale(LinearDomain(0, 1), LinearRange(0, 1)) as unknown as ContinuousScale<X, Y>;\n    } else if (string === \"time\") {\n      const d1 = DateTime.current();\n      const d0 = d1.withDay(d1.day - 1);\n      return TimeScale(TimeDomain(d0, d1), LinearRange(0, 1)) as unknown as ContinuousScale<X, Y>;\n    }\n    const domain = string.split(\"...\");\n    const x0 = +domain[0]!;\n    const x1 = +domain[1]!;\n    if (isFinite(x0) && isFinite(x1)) {\n      return LinearScale(LinearDomain(x0, x1), LinearRange(0, 1)) as unknown as ContinuousScale<X, Y>;\n    } else {\n      const d0 = DateTime.parse(domain[0]!);\n      const d1 = DateTime.parse(domain[1]!);\n      return TimeScale(TimeDomain(d0, d1), LinearRange(0, 1)) as unknown as ContinuousScale<X, Y>;\n    }\n  }\n\n  /** @internal */\n  static readonly XDomainTrackingFlag: ScaledFlags = 1 << 0;\n  /** @internal */\n  static readonly YDomainTrackingFlag: ScaledFlags = 1 << 1;\n  /** @internal */\n  static readonly XScaleGesturesFlag: ScaledFlags = 1 << 2;\n  /** @internal */\n  static readonly YScaleGesturesFlag: ScaledFlags = 1 << 3;\n  /** @internal */\n  static readonly XMinInRangeFlag: ScaledFlags = 1 << 4;\n  /** @internal */\n  static readonly XMaxInRangeFlag: ScaledFlags = 1 << 5;\n  /** @internal */\n  static readonly YMinInRangeFlag: ScaledFlags = 1 << 6;\n  /** @internal */\n  static readonly YMaxInRangeFlag: ScaledFlags = 1 << 7;\n  /** @internal */\n  static readonly InteractingFlag: ScaledFlags = 1 << 8;\n  /** @internal */\n  static readonly InteractedFlag: ScaledFlags = 1 << 9;\n  /** @internal */\n  static readonly XBoundingFlag: ScaledFlags = 1 << 10;\n  /** @internal */\n  static readonly YBoundingFlag: ScaledFlags = 1 << 11;\n  /** @internal */\n  static readonly XFitFlag: ScaledFlags = 1 << 12;\n  /** @internal */\n  static readonly YFitFlag: ScaledFlags = 1 << 13;\n  /** @internal */\n  static readonly XFitTweenFlag: ScaledFlags = 1 << 14;\n  /** @internal */\n  static readonly YFitTweenFlag: ScaledFlags = 1 << 15;\n  /** @internal */\n  static readonly RescaleFlag: ScaledFlags = 1 << 16;\n\n  /** @internal */\n  static readonly DomainTrackingMask: ScaledFlags = this.XDomainTrackingFlag\n                                                  | this.YDomainTrackingFlag;\n  /** @internal */\n  static readonly ScaleGesturesMask: ScaledFlags = this.XScaleGesturesFlag\n                                                 | this.YScaleGesturesFlag;\n  /** @internal */\n  static readonly XInRangeMask: ScaledFlags = this.XMinInRangeFlag\n                                            | this.XMaxInRangeFlag;\n  /** @internal */\n  static readonly YInRangeMask: ScaledFlags = this.YMinInRangeFlag\n                                            | this.YMaxInRangeFlag;\n  /** @internal */\n  static readonly InteractingMask: ScaledFlags = this.InteractingFlag\n                                               | this.InteractedFlag;\n  /** @internal */\n  static readonly BoundingMask: ScaledFlags = this.XBoundingFlag\n                                            | this.YBoundingFlag;\n  /** @internal */\n  static readonly FitMask: ScaledFlags = this.XFitFlag\n                                       | this.YFitFlag;\n  /** @internal */\n  static readonly FitTweenMask: ScaledFlags = this.XFitTweenFlag\n                                            | this.YFitTweenFlag;\n\n  /** @internal */\n  static LinearZoomMin: number = 1000000;\n  /** @internal */\n  static LinearZoomMax: number = 0.001;\n  /** @internal */\n  static TimeZoomMin: number = 86400000;\n  /** @internal */\n  static TimeZoomMax: number = 1;\n\n  static override readonly InsertChildFlags: ViewFlags = GraphicsView.InsertChildFlags | View.NeedsResize;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Values} from \"@swim/util\";\nimport type {Domain} from \"@swim/util\";\nimport type {Range} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {LinearRange} from \"@swim/util\";\nimport type {ContinuousScale} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport {DataPointView} from \"./DataPointView\";\nimport {ContinuousScaleAnimator} from \"./ContinuousScaleAnimator\";\nimport type {PlotViewObserver} from \"./PlotView\";\nimport type {PlotView} from \"./PlotView\";\n\n/** @public */\nexport interface ScatterPlotViewObserver<X = unknown, Y = unknown, V extends ScatterPlotView<X, Y> = ScatterPlotView<X, Y>> extends PlotViewObserver<X, Y, V> {\n}\n\n/** @public */\nexport abstract class ScatterPlotView<X = unknown, Y = unknown> extends GraphicsView implements PlotView<X, Y> {\n  constructor() {\n    super();\n    this.xDataDomain = null;\n    this.yDataDomain = null;\n    this.xDataRange = null;\n    this.yDataRange = null;\n  }\n\n  declare readonly observerType?: Class<ScatterPlotViewObserver<X, Y>>;\n\n  @ThemeAnimator({\n    valueType: Number,\n    updateFlags: View.NeedsRender,\n    didSetValue(opacity: number | undefined): void {\n      this.owner.callObservers(\"viewDidSetOpacity\", opacity, this.owner);\n    },\n  })\n  readonly opacity!: ThemeAnimator<this, number | undefined>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  /** @override */\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsLayout,\n    didSetValue(xScale: ContinuousScale<X, number> | null): void {\n      this.owner.updateXDataRange();\n      this.owner.callObservers(\"viewDidSetXScale\", xScale, this.owner);\n    },\n  })\n  readonly xScale!: ContinuousScaleAnimator<this, X, number>;\n\n  /** @override */\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsLayout,\n    didSetValue(yScale: ContinuousScale<Y, number> | null): void {\n      this.owner.updateYDataRange();\n      this.owner.callObservers(\"viewDidSetYScale\", yScale, this.owner);\n    },\n  })\n  readonly yScale!: ContinuousScaleAnimator<this, Y, number>;\n\n  /** @override */\n  xDomain(): Domain<X> | null;\n  xDomain(xDomain: Domain<X> | string | null, timing?: TimingLike | boolean): this;\n  xDomain(xMin: X, xMax: X, timing?: TimingLike | boolean): this;\n  xDomain(xMin?: Domain<X> | X | string | null, xMax?: X | TimingLike | boolean,\n          timing?: TimingLike | boolean): Domain<X> | null | this {\n    if (arguments.length === 0) {\n      const xScale = this.xScale.value;\n      return xScale !== null ? xScale.domain : null;\n    } else {\n      this.xScale.setDomain(xMin as any, xMax as any, timing);\n      return this;\n    }\n  }\n\n  /** @override */\n  yDomain(): Domain<Y> | null;\n  yDomain(yDomain: Domain<Y> | string | null, timing?: TimingLike | boolean): this;\n  yDomain(yMin: Y, yMax: Y, timing: TimingLike | boolean): this;\n  yDomain(yMin?: Domain<Y> | Y | string | null, yMax?: Y | TimingLike | boolean,\n          timing?: TimingLike | boolean): Domain<Y> | null | this {\n    if (arguments.length === 0) {\n      const yScale = this.yScale.value;\n      return yScale !== null ? yScale.domain : null;\n    } else {\n      this.yScale.setDomain(yMin as any, yMax as any, timing);\n      return this;\n    }\n  }\n\n  /** @override */\n  xRange(): Range<number> | null {\n    const xScale = this.xScale.value;\n    return xScale !== null ? xScale.range : null;\n  }\n\n  /** @override */\n  yRange(): Range<number> | null {\n    const yScale = this.yScale.value;\n    return yScale !== null ? yScale.range : null;\n  }\n\n  /** @override */\n  @Property({\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    didSetValue(xRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetXRangePadding\", xRangePadding, this.owner);\n    },\n  })\n  readonly xRangePadding!: Property<this, readonly [number, number]>;\n\n  /** @override */\n  @Property({\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    didSetValue(yRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetYRangePadding\", yRangePadding, this.owner);\n    },\n  })\n  readonly yRangePadding!: Property<this, readonly [number, number]>;\n\n  /** @override */\n  readonly xDataDomain: Domain<X> | null;\n\n  protected setXDataDomain(newXDataDomain: Domain<X> | null): void {\n    const oldXDataDomain = this.xDataDomain;\n    if (Equals(newXDataDomain, oldXDataDomain)) {\n      return;\n    }\n    this.willSetXDataDomain(newXDataDomain, oldXDataDomain);\n    (this as Mutable<this>).xDataDomain = newXDataDomain;\n    this.onSetXDataDomain(newXDataDomain, oldXDataDomain);\n    this.didSetXDataDomain(newXDataDomain, oldXDataDomain);\n  }\n\n  protected willSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    // hook\n  }\n\n  protected onSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.updateXDataRange();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.callObservers(\"viewDidSetXDataDomain\", newXDataDomain, this);\n  }\n\n  protected updateXDataDomain(dataPointView: DataPointView<X, Y>): void {\n    const x: X = dataPointView.x.getValue();\n    let xDataDomain = this.xDataDomain;\n    if (xDataDomain === null) {\n      xDataDomain = this.xScale.createDomain(x, x);\n    } else {\n      if (Values.compare(x, xDataDomain[0]) < 0) {\n        xDataDomain = this.xScale.createDomain(x, xDataDomain[1]);\n      } else if (Values.compare(xDataDomain[1], x) < 0) {\n        xDataDomain = this.xScale.createDomain(xDataDomain[0], x);\n      }\n    }\n    this.setXDataDomain(xDataDomain);\n  }\n\n  /** @override */\n  readonly yDataDomain: Domain<Y> | null;\n\n  protected setYDataDomain(newYDataDomain: Domain<Y> | null): void {\n    const oldYDataDomain = this.yDataDomain;\n    if (Equals(newYDataDomain, oldYDataDomain)) {\n      return;\n    }\n    this.willSetYDataDomain(newYDataDomain, oldYDataDomain);\n    (this as Mutable<this>).yDataDomain = newYDataDomain;\n    this.onSetYDataDomain(newYDataDomain, oldYDataDomain);\n    this.didSetYDataDomain(newYDataDomain, oldYDataDomain);\n  }\n\n  protected willSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    // hook\n  }\n\n  protected onSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.updateYDataRange();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.callObservers(\"viewDidSetYDataDomain\", newYDataDomain, this);\n  }\n\n  protected updateYDataDomain(dataPointView: DataPointView<X, Y>): void {\n    const y = dataPointView.y.value as Y;\n    const y2 = dataPointView.y2.value;\n    let yDataDomain = this.yDataDomain;\n    if (yDataDomain === null) {\n      yDataDomain = this.yScale.createDomain(y, y);\n    } else {\n      if (Values.compare(y, yDataDomain[0]) < 0) {\n        yDataDomain = this.yScale.createDomain(y, yDataDomain[1]);\n      } else if (Values.compare(yDataDomain[1], y) < 0) {\n        yDataDomain = this.yScale.createDomain(yDataDomain[0], y);\n      }\n      if (y2 !== void 0) {\n        if (Values.compare(y2, yDataDomain[0]) < 0) {\n          yDataDomain = this.yScale.createDomain(y2, yDataDomain[1]);\n        } else if (Values.compare(yDataDomain[1], y2) < 0) {\n          yDataDomain = this.yScale.createDomain(yDataDomain[0], y2);\n        }\n      }\n    }\n    this.setYDataDomain(yDataDomain);\n  }\n\n  /** @override */\n  readonly xDataRange: Range<number> | null;\n\n  protected setXDataRange(xDataRange: Range<number> | null): void {\n    (this as Mutable<this>).xDataRange = xDataRange;\n  }\n\n  protected updateXDataRange(): void {\n    const xDataDomain = this.xDataDomain;\n    if (xDataDomain === null) {\n      return;\n    }\n    const xScale = this.xScale.value;\n    if (xScale !== null) {\n      this.setXDataRange(LinearRange(xScale(xDataDomain[0]), xScale(xDataDomain[1])));\n    } else {\n      this.setXDataRange(null);\n    }\n  }\n\n  /** @override */\n  readonly yDataRange: Range<number> | null;\n\n  protected setYDataRange(yDataRange: Range<number> | null): void {\n    (this as Mutable<this>).yDataRange = yDataRange;\n  }\n\n  protected updateYDataRange(): void {\n    const yDataDomain = this.yDataDomain;\n    if (yDataDomain === null) {\n      return;\n    }\n    const yScale = this.yScale.value;\n    if (yScale !== null) {\n      this.setYDataRange(LinearRange(yScale(yDataDomain[0]), yScale(yDataDomain[1])));\n    } else {\n      this.setYDataRange(null);\n    }\n  }\n\n  @ViewSet({\n    viewType: DataPointView,\n    binds: true,\n    observes: true,\n    willAttachView(newDataPointView: DataPointView<X, Y>, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachDataPoint\", newDataPointView, targetView, this.owner);\n    },\n    didAttachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateXDataDomain(dataPointView);\n      this.owner.updateYDataDomain(dataPointView);\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.attachDataPointLabelView(labelView);\n      }\n    },\n    willDetachView(dataPointView: DataPointView<X, Y>): void {\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.detachDataPointLabelView(labelView);\n      }\n      // xDataDomain and yDataDomain will be recomputed next layout pass\n    },\n    didDetachView(newDataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"viewDidDetachDataPoint\", newDataPointView, this.owner);\n    },\n    viewDidSetX(x: X | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateXDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetY(y: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateYDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetY2(y2: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateYDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewWillAttachLabel(labelView: GraphicsView): void {\n      this.attachDataPointLabelView(labelView);\n    },\n    viewDidDetachLabel(labelView: GraphicsView): void {\n      this.detachDataPointLabelView(labelView);\n    },\n    attachDataPointLabelView(labelView: GraphicsView): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    detachDataPointLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n  })\n  readonly dataPoints!: ViewSet<this, DataPointView<X, Y>> & Observes<DataPointView<X, Y>> & {\n    attachDataPointLabelView(labelView: GraphicsView): void,\n    detachDataPointLabelView(labelView: GraphicsView): void,\n  };\n\n  protected override onLayout(): void {\n    super.onLayout();\n    const updateTime = this.updateTime;\n    this.xScale.recohere(updateTime);\n    this.yScale.recohere(updateTime);\n    this.resizeScales(this.viewFrame);\n  }\n\n  /**\n   * Updates own scale ranges to project onto view frame.\n   */\n  protected resizeScales(frame: R2Box): void {\n    const xScale = !this.xScale.derived ? this.xScale.value : null;\n    if (xScale !== null && xScale.range[1] !== frame.width) {\n      this.xScale.setRange(0, frame.width);\n    }\n    const yScale = !this.yScale.derived ? this.yScale.value : null;\n    if (yScale !== null && yScale.range[1] !== frame.height) {\n      this.yScale.setRange(0, frame.height);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, displayChild: (this: this, childView: View, displayFlags: ViewFlags) => void): void {\n    let xScale: ContinuousScale<X, number> | null;\n    let yScale: ContinuousScale<Y, number> | null;\n    if ((displayFlags & View.NeedsLayout) !== 0 &&\n        (xScale = this.xScale.value, xScale !== null) &&\n        (yScale = this.yScale.value, yScale !== null)) {\n      this.layoutChildren(xScale, yScale, displayFlags, displayChild);\n    } else {\n      super.displayChildren(displayFlags, displayChild);\n    }\n  }\n\n  protected layoutChildren(xScale: ContinuousScale<X, number>, yScale: ContinuousScale<Y, number>,\n                           displayFlags: ViewFlags, displayChild: (this: this, childView: View, displayFlags: ViewFlags) => void): void {\n    // Recompute extrema when laying out child views.\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    let xDataDomainMin: X | undefined;\n    let xDataDomainMax: X | undefined;\n    let yDataDomainMin: Y | undefined;\n    let yDataDomainMax: Y | undefined;\n    let xRangePaddingMin = 0;\n    let xRangePaddingMax = 0;\n    let yRangePaddingMin = 0;\n    let yRangePaddingMax = 0;\n\n    let point0 = null as DataPointView<X, Y> | null;\n    type self = this;\n    function layoutChild(this: self, point1: View, displayFlags: ViewFlags): void {\n      if (point1 instanceof DataPointView) {\n        const x1 = point1.x.getValue();\n        const y1 = point1.y.getValue();\n        const dy1 = point1.y2.value;\n        const r1 = point1.radius.value;\n        const sx1 = xScale(x1);\n        const sy1 = yScale(y1);\n        point1.setXCoord(frame.xMin + sx1);\n        point1.setYCoord(frame.yMin + sy1);\n\n        if (point0 === null) {\n          xDataDomainMin = x1;\n          xDataDomainMax = x1;\n          yDataDomainMin = y1;\n          yDataDomainMax = y1;\n        } else {\n          // update extrema\n          if (Values.compare(x1, xDataDomainMin) < 0) {\n            xDataDomainMin = x1;\n          } else if (Values.compare(xDataDomainMax, x1) < 0) {\n            xDataDomainMax = x1;\n          }\n          if (Values.compare(y1, yDataDomainMin) < 0) {\n            yDataDomainMin = y1;\n          } else if (Values.compare(yDataDomainMax, y1) < 0) {\n            yDataDomainMax = y1;\n          }\n          if (dy1 !== void 0) {\n            if (Values.compare(dy1, yDataDomainMin) < 0) {\n              yDataDomainMin = dy1;\n            } else if (Values.compare(yDataDomainMax, dy1) < 0) {\n              yDataDomainMax = dy1;\n            }\n          }\n        }\n\n        if (r1 !== null) {\n          const radius = r1.pxValue(size);\n          xRangePaddingMin = Math.max(radius, xRangePaddingMin);\n          xRangePaddingMax = Math.max(radius, xRangePaddingMax);\n          yRangePaddingMin = Math.max(radius, yRangePaddingMin);\n          yRangePaddingMax = Math.max(radius, yRangePaddingMax);\n        }\n        point0 = point1;\n      }\n\n      displayChild.call(this, point1, displayFlags);\n    }\n    super.displayChildren(displayFlags, layoutChild);\n\n    this.setXDataDomain(point0 !== null ? this.xScale.createDomain(xDataDomainMin!, xDataDomainMax!) : null);\n    this.setYDataDomain(point0 !== null ? this.yScale.createDomain(yDataDomainMin!, yDataDomainMax!) : null);\n    this.xRangePadding.setIntrinsic([xRangePaddingMin, xRangePaddingMax]);\n    this.yRangePadding.setIntrinsic([yRangePaddingMin, yRangePaddingMax]);\n  }\n\n  protected override didRender(): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      this.renderPlot(renderer.context, this.viewFrame);\n    }\n    super.didRender();\n  }\n\n  protected abstract renderPlot(context: CanvasContext, frame: R2Box): void;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Values} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Domain} from \"@swim/util\";\nimport type {Range} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {LinearRange} from \"@swim/util\";\nimport type {ContinuousScale} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {BTree} from \"@swim/collections\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport type {DataPointCategory} from \"./DataPointView\";\nimport {DataPointView} from \"./DataPointView\";\nimport {ContinuousScaleAnimator} from \"./ContinuousScaleAnimator\";\nimport type {PlotViewObserver} from \"./PlotView\";\nimport type {PlotView} from \"./PlotView\";\n\n/** @public */\nexport type SeriesPlotHitMode = \"domain\" | \"plot\" | \"data\" | \"none\";\n\n/** @public */\nexport interface SeriesPlotViewObserver<X = unknown, Y = unknown, V extends SeriesPlotView<X, Y> = SeriesPlotView<X, Y>> extends PlotViewObserver<X, Y, V> {\n}\n\n/** @public */\nexport abstract class SeriesPlotView<X = unknown, Y = unknown> extends GraphicsView implements PlotView<X, Y> {\n  constructor() {\n    super();\n    this.xDataDomain = null;\n    this.yDataDomain = null;\n    this.xDataRange = null;\n    this.yDataRange = null;\n    this.gradientStops = 0;\n    this.dataPointViews = new BTree();\n  }\n\n  declare readonly observerType?: Class<SeriesPlotViewObserver<X, Y>>;\n\n  @ThemeAnimator({\n    valueType: Number,\n    updateFlags: View.NeedsRender,\n    didSetValue(opacity: number | undefined): void {\n      this.owner.callObservers(\"viewDidSetOpacity\", opacity, this.owner);\n    },\n  })\n  readonly opacity!: ThemeAnimator<this, number | undefined>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  @Property({valueType: String, value: \"domain\"})\n  readonly hitMode!: Property<this, SeriesPlotHitMode>;\n\n  /** @override */\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsLayout,\n    didSetValue(xScale: ContinuousScale<X, number> | null): void {\n      this.owner.updateXDataRange();\n      this.owner.callObservers(\"viewDidSetXScale\", xScale, this.owner);\n    },\n  })\n  readonly xScale!: ContinuousScaleAnimator<this, X, number>;\n\n  /** @override */\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsLayout,\n    didSetValue(yScale: ContinuousScale<Y, number> | null): void {\n      this.owner.updateYDataRange();\n      this.owner.callObservers(\"viewDidSetYScale\", yScale, this.owner);\n    },\n  })\n  readonly yScale!: ContinuousScaleAnimator<this, Y, number>;\n\n  /** @override */\n  xDomain(): Domain<X> | null;\n  xDomain(xDomain: Domain<X> | string | null, timing?: TimingLike | boolean): this;\n  xDomain(xMin: X, xMax: X, timing: TimingLike | boolean): this;\n  xDomain(xMin?: Domain<X> | X | string | null, xMax?: X | TimingLike | boolean,\n          timing?: TimingLike | boolean): Domain<X> | null | this {\n    if (arguments.length === 0) {\n      const xScale = this.xScale.value;\n      return xScale !== null ? xScale.domain : null;\n    } else {\n      this.xScale.setDomain(xMin as any, xMax as any, timing);\n      return this;\n    }\n  }\n\n  /** @override */\n  yDomain(): Domain<Y> | null;\n  yDomain(yDomain: Domain<Y> | string | null, timing?: TimingLike | boolean): this;\n  yDomain(yMin: Y, yMax: Y, timing: TimingLike | boolean): this;\n  yDomain(yMin?: Domain<Y> | Y | string | null, yMax?: Y | TimingLike | boolean,\n          timing?: TimingLike | boolean): Domain<Y> | null | this {\n    if (arguments.length === 0) {\n      const yScale = this.yScale.value;\n      return yScale !== null ? yScale.domain : null;\n    } else {\n      this.yScale.setDomain(yMin as any, yMax as any, timing);\n      return this;\n    }\n  }\n\n  /** @override */\n  xRange(): Range<number> | null {\n    const xScale = this.xScale.value;\n    return xScale !== null ? xScale.range : null;\n  }\n\n  /** @override */\n  yRange(): Range<number> | null {\n    const yScale = this.yScale.value;\n    return yScale !== null ? yScale.range : null;\n  }\n\n  /** @override */\n  @Property({\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    didSetValue(xRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetXRangePadding\", xRangePadding, this.owner);\n    },\n  })\n  readonly xRangePadding!: Property<this, readonly [number, number]>;\n\n  /** @override */\n  @Property({\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    didSetValue(yRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetYRangePadding\", yRangePadding, this.owner);\n    },\n  })\n  readonly yRangePadding!: Property<this, readonly [number, number]>;\n\n  /** @override */\n  readonly xDataDomain: Domain<X> | null;\n\n  protected setXDataDomain(newXDataDomain: Domain<X> | null): void {\n    const oldXDataDomain = this.xDataDomain;\n    if (Equals(newXDataDomain, oldXDataDomain)) {\n      return;\n    }\n    this.willSetXDataDomain(newXDataDomain, oldXDataDomain);\n    (this as Mutable<this>).xDataDomain = newXDataDomain;\n    this.onSetXDataDomain(newXDataDomain, oldXDataDomain);\n    this.didSetXDataDomain(newXDataDomain, oldXDataDomain);\n  }\n\n  protected willSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    // hook\n  }\n\n  protected onSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.updateXDataRange();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.callObservers(\"viewDidSetXDataDomain\", newXDataDomain, this);\n  }\n\n  protected updateXDataDomain(dataPointView: DataPointView<X, Y>): void {\n    const dataPointViews = this.dataPointViews;\n    const xMin = dataPointViews.firstKey();\n    const xMax = dataPointViews.lastKey();\n    let xDataDomain: Domain<X>;\n    if (xMin !== void 0 && xMax !== void 0) {\n      xDataDomain = this.xScale.createDomain(xMin, xMax);\n    } else {\n      const x = dataPointView.x.getValue();\n      xDataDomain = this.xScale.createDomain(x, x);\n    }\n    this.setXDataDomain(xDataDomain);\n  }\n\n  /** @override */\n  readonly yDataDomain: Domain<Y> | null;\n\n  protected setYDataDomain(newYDataDomain: Domain<Y> | null): void {\n    const oldYDataDomain = this.yDataDomain;\n    if (Equals(newYDataDomain, oldYDataDomain)) {\n      return;\n    }\n    this.willSetYDataDomain(newYDataDomain, oldYDataDomain);\n    (this as Mutable<this>).yDataDomain = newYDataDomain;\n    this.onSetYDataDomain(newYDataDomain, oldYDataDomain);\n    this.didSetYDataDomain(newYDataDomain, oldYDataDomain);\n  }\n\n  protected willSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    // hook\n  }\n\n  protected onSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.updateYDataRange();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.callObservers(\"viewDidSetYDataDomain\", newYDataDomain, this);\n  }\n\n  protected updateYDataDomain(dataPointView: DataPointView<X, Y>): void {\n    const y = dataPointView.y.value as Y;\n    const y2 = dataPointView.y2.value;\n    let yDataDomain = this.yDataDomain;\n    if (yDataDomain === null) {\n      yDataDomain = this.yScale.createDomain(y, y);\n    } else {\n      if (Values.compare(y, yDataDomain[0]) < 0) {\n        yDataDomain = this.yScale.createDomain(y, yDataDomain[1]);\n      } else if (Values.compare(yDataDomain[1], y) < 0) {\n        yDataDomain = this.yScale.createDomain(yDataDomain[0], y);\n      }\n      if (y2 !== void 0) {\n        if (Values.compare(y2, yDataDomain[0]) < 0) {\n          yDataDomain = this.yScale.createDomain(y2, yDataDomain[1]);\n        } else if (Values.compare(yDataDomain[1], y2) < 0) {\n          yDataDomain = this.yScale.createDomain(yDataDomain[0], y2);\n        }\n      }\n    }\n    this.setYDataDomain(yDataDomain);\n  }\n\n  /** @override */\n  readonly xDataRange: Range<number> | null;\n\n  protected setXDataRange(xDataRange: Range<number> | null): void {\n    (this as Mutable<this>).xDataRange = xDataRange;\n  }\n\n  protected updateXDataRange(): void {\n    const xDataDomain = this.xDataDomain;\n    if (xDataDomain === null) {\n      return;\n    }\n    const xScale = this.xScale.value;\n    if (xScale !== null) {\n      this.setXDataRange(LinearRange(xScale(xDataDomain[0]), xScale(xDataDomain[1])));\n    } else {\n      this.setXDataRange(null);\n    }\n  }\n\n  /** @override */\n  readonly yDataRange: Range<number> | null;\n\n  protected setYDataRange(yDataRange: Range<number> | null): void {\n    (this as Mutable<this>).yDataRange = yDataRange;\n  }\n\n  protected updateYDataRange(): void {\n    const yDataDomain = this.yDataDomain;\n    if (yDataDomain === null) {\n      return;\n    }\n    const yScale = this.yScale.value;\n    if (yScale !== null) {\n      this.setYDataRange(LinearRange(yScale(yDataDomain[0]), yScale(yDataDomain[1])));\n    } else {\n      this.setYDataRange(null);\n    }\n  }\n\n  /** @internal */\n  readonly gradientStops: number;\n\n  @ViewSet({\n    viewType: DataPointView,\n    binds: true,\n    observes: true,\n    willAttachView(dataPointView: DataPointView<X, Y>, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachDataPoint\", dataPointView, targetView, this.owner);\n    },\n    didAttachView(dataPointView: DataPointView<X, Y>): void {\n      if (this.owner.dataPointViews.get(dataPointView.x.state!) === void 0) {\n        this.owner.dataPointViews.set(dataPointView.x.state!, dataPointView);\n      }\n      this.owner.updateXDataDomain(dataPointView);\n      this.owner.updateYDataDomain(dataPointView);\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.attachDataPointLabelView(labelView);\n      }\n    },\n    willDetachView(dataPointView: DataPointView<X, Y>): void {\n      if (this.owner.dataPointViews.get(dataPointView.x.state!) === dataPointView) {\n        this.owner.dataPointViews.delete(dataPointView.x.state!);\n      }\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.detachDataPointLabelView(labelView);\n      }\n      this.owner.updateXDataDomain(dataPointView);\n      // yDataDomain will be recomputed next layout pass\n    },\n    didDetachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"viewDidDetachDataPoint\", dataPointView, this.owner);\n    },\n    viewDidSetX(x: X | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateXDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetY(y: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateYDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetY2(y2: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateYDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewWillAttachLabel(labelView: GraphicsView): void {\n      this.attachDataPointLabelView(labelView);\n    },\n    viewDidDetachLabel(labelView: GraphicsView): void {\n      this.detachDataPointLabelView(labelView);\n    },\n    attachDataPointLabelView(labelView: GraphicsView): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    detachDataPointLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n  })\n  readonly dataPoints!: ViewSet<this, DataPointView<X, Y>> & Observes<DataPointView<X, Y>> & {\n    attachDataPointLabelView(labelView: GraphicsView): void,\n    detachDataPointLabelView(labelView: GraphicsView): void,\n  };\n\n  /** @internal */\n  readonly dataPointViews: BTree<X, DataPointView<X, Y>>;\n\n  getDataPoint(x: X): DataPointView<X, Y> | null {\n    const dataPoint = this.dataPointViews.get(x);\n    return dataPoint !== void 0 ? dataPoint : null;\n  }\n\n  insertDataPoint(dataPointView: DataPointView<X, Y>): DataPointView<X, Y> {\n    return this.insertChild(dataPointView, null);\n  }\n\n  removeDataPoint(x: X): DataPointView<X, Y> | null {\n    const dataPointView = this.getDataPoint(x);\n    if (dataPointView !== null) {\n      this.removeChild(dataPointView);\n    }\n    return dataPointView;\n  }\n\n  override setChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(key: string, newChildFactory: F): View | null;\n  override setChild(key: string, newChild: View | LikeType<View> | null): View | null;\n  override setChild(key: string, newChild: View | LikeType<View> | null): View | null {\n    if (newChild !== null) {\n      newChild = View.fromLike(newChild);\n    }\n    if (newChild instanceof DataPointView) {\n      const target = this.dataPointViews.nextValue(newChild.x.state) ?? null;\n      const oldView = this.getChild(key);\n      super.insertChild(newChild, target, key);\n      return oldView;\n    }\n    return super.setChild(key, newChild) as View | null;\n  }\n\n  override appendChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, key?: string): InstanceType<F>;\n  override appendChild<V extends View>(child: V | LikeType<V>, key?: string): V;\n  override appendChild(child: View | LikeType<View>, key?: string): View;\n  override appendChild(child: View | LikeType<View>, key?: string): View {\n    child = View.fromLike(child);\n    if (child instanceof DataPointView) {\n      const target = this.dataPointViews.nextValue(child.x.state) ?? null;\n      return super.insertChild(child, target, key);\n    }\n    return super.appendChild(child, key);\n  }\n\n  override prependChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, key?: string): InstanceType<F>;\n  override prependChild<V extends View>(child: V | LikeType<V>, key?: string): V;\n  override prependChild(child: View | LikeType<View>, key?: string): View;\n  override prependChild(child: View | LikeType<View>, key?: string): View {\n    child = View.fromLike(child);\n    if (child instanceof DataPointView) {\n      const target = this.dataPointViews.nextValue(child.x.state) ?? null;\n      return super.insertChild(child, target, key);\n    }\n    return super.prependChild(child, key);\n  }\n\n  override insertChild<F extends Class<Instance<F, View>> & Creatable<Instance<F, View>>>(childFactory: F, target: View | null, key?: string): InstanceType<F>;\n  override insertChild<V extends View>(child: V | LikeType<V>, target: View | null, key?: string): V;\n  override insertChild(child: View | LikeType<View>, target: View | null, key?: string): View;\n  override insertChild(child: View | LikeType<View>, target: View | null, key?: string): View {\n    child = View.fromLike(child);\n    if (child instanceof DataPointView && target === null) {\n      target = this.dataPointViews.nextValue(child.x.state) ?? null;\n    }\n    return super.insertChild(child, target, key);\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    const updateTime = this.updateTime;\n    this.xScale.recohere(updateTime);\n    this.yScale.recohere(updateTime);\n    this.resizeScales(this.viewFrame);\n  }\n\n  /**\n   * Updates own scale ranges to project onto view frame.\n   */\n  protected resizeScales(frame: R2Box): void {\n    const xScale = !this.xScale.derived ? this.xScale.value : null;\n    if (xScale !== null && xScale.range[1] !== frame.width) {\n      this.xScale.setRange(0, frame.width);\n    }\n    const yScale = !this.yScale.derived ? this.yScale.value : null;\n    if (yScale !== null && yScale.range[1] !== frame.height) {\n      this.yScale.setRange(0, frame.height);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    let xScale: ContinuousScale<X, number> | null;\n    let yScale: ContinuousScale<Y, number> | null;\n    if ((displayFlags & View.NeedsLayout) !== 0 &&\n        (xScale = this.xScale.value, xScale !== null) &&\n        (yScale = this.yScale.value, yScale !== null)) {\n      this.layoutChildren(xScale, yScale, displayFlags, displayChild);\n    } else {\n      super.displayChildren(displayFlags, displayChild);\n    }\n  }\n\n  protected layoutChildren(xScale: ContinuousScale<X, number>, yScale: ContinuousScale<Y, number>,\n                           displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    // Recompute extrema when laying out child views.\n    const frame = this.viewFrame;\n    let xDataDomainMin: X | undefined;\n    let xDataDomainMax: X | undefined;\n    let yDataDomainMin: Y | undefined;\n    let yDataDomainMax: Y | undefined;\n    let gradientStops = 0;\n\n    let point0 = null as DataPointView<X, Y> | null;\n    let point1 = null as DataPointView<X, Y> | null;\n    let y0: Y | undefined;\n    let y1: Y | undefined;\n    type self = this;\n    function layoutChild(this: self, child: View, displayFlags: ViewFlags): void {\n      const point2 = child as DataPointView<X, Y>;\n      const x2 = point2.x.getValue();\n      const y2 = point2.y.getValue();\n      const dy2 = point2.y2.value;\n\n      const sx2 = xScale(x2);\n      const sy2 = yScale(y2);\n      point2.setXCoord(frame.xMin + sx2);\n      point2.setYCoord(frame.yMin + sy2);\n\n      const sdy2 = dy2 !== void 0 ? yScale(dy2) : void 0;\n      if (sdy2 !== void 0) {\n        point2.setY2Coord(frame.yMin + sdy2);\n      } else if (point2.y2Coord !== void 0) {\n        point2.setY2Coord(void 0);\n      }\n\n      if (point2.isGradientStop()) {\n        gradientStops += 1;\n      }\n\n      if (point1 === null) {\n        xDataDomainMin = x2;\n        xDataDomainMax = x2;\n        yDataDomainMin = y2;\n        yDataDomainMax = y2;\n      } else {\n        let category: DataPointCategory;\n        if (point0 !== null) {\n          // categorize mid point\n          if (Values.compare(y0!, y1!) < 0 && Values.compare(y2, y1!) < 0) {\n            category = \"maxima\";\n          } else if (Values.compare(y1!, y0!) < 0 && Values.compare(y1!, y2) < 0) {\n            category = \"minima\";\n          } else if (Values.compare(y0!, y1!) < 0 && Values.compare(y1!, y2) < 0) {\n            category = \"increasing\";\n          } else if (Values.compare(y1!, y0!) < 0 && Values.compare(y2, y1!) < 0) {\n            category = \"decreasing\";\n          } else {\n            category = \"flat\";\n          }\n        } else {\n          // categorize start point\n          if (Values.compare(y1!, y2) < 0) {\n            category = \"increasing\";\n          } else if (Values.compare(y2, y1!) < 0) {\n            category = \"decreasing\";\n          } else {\n            category = \"flat\";\n          }\n        }\n        point1.category.setIntrinsic(category);\n\n        // update extrema\n        if (Values.compare(y2, yDataDomainMin) < 0) {\n          yDataDomainMin = y2;\n        } else if (Values.compare(yDataDomainMax, y2) < 0) {\n          yDataDomainMax = y2;\n        }\n        if (dy2 !== void 0) {\n          if (Values.compare(dy2, yDataDomainMin) < 0) {\n            yDataDomainMin = dy2;\n          } else if (Values.compare(yDataDomainMax, dy2) < 0) {\n            yDataDomainMax = dy2;\n          }\n        }\n      }\n\n      point0 = point1;\n      point1 = point2;\n      y0 = y1;\n      y1 = y2;\n      xDataDomainMax = x2;\n\n      displayChild.call(this, child, displayFlags);\n    }\n    super.displayChildren(displayFlags, layoutChild);\n\n    if (point1 !== null) {\n      let category: DataPointCategory;\n      if (point0 !== null) {\n        // categorize end point\n        if (Values.compare(y0!, y1!) < 0) {\n          category = \"increasing\";\n        } else if (Values.compare(y1!, y0!) < 0) {\n          category = \"decreasing\";\n        } else {\n          category = \"flat\";\n        }\n      } else {\n        // categorize sole point\n        category = \"flat\";\n      }\n      point1.category.setIntrinsic(category);\n    }\n\n    this.setXDataDomain(point0 !== null ? this.xScale.createDomain(xDataDomainMin!, xDataDomainMax!) : null);\n    this.setYDataDomain(point0 !== null ? this.yScale.createDomain(yDataDomainMin!, yDataDomainMax!) : null);\n    (this as Mutable<this>).gradientStops = gradientStops;\n  }\n\n  protected override didRender(): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      this.renderPlot(renderer.context, this.viewFrame);\n    }\n    super.didRender();\n  }\n\n  protected abstract renderPlot(context: CanvasContext, frame: R2Box): void;\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    const hitMode = this.hitMode.value;\n    if (hitMode !== \"none\") {\n      const renderer = this.renderer.value;\n      if (renderer instanceof CanvasRenderer) {\n        let hit: GraphicsView | null;\n        if (hitMode === \"domain\") {\n          const viewFrame = this.viewFrame;\n          hit = this.hitTestDomain(x - viewFrame.x, y - viewFrame.y, renderer);\n        } else {\n          hit = this.hitTestPlot(x, y, renderer);\n        }\n        return hit;\n      }\n    }\n    return null;\n  }\n\n  protected override hitTestChildren(x: number, y: number): GraphicsView | null {\n    return null;\n  }\n\n  protected hitTestDomain(x: number, y: number, renderer: CanvasRenderer): GraphicsView | null {\n    const xScale = this.xScale.value;\n    if (xScale === null) {\n      return null;\n    }\n    const d = xScale.inverse(x);\n    const v0 = this.dataPointViews.previousValue(d);\n    const v1 = this.dataPointViews.nextValue(d);\n    const x0 = v0 !== void 0 ? v0.x.value : void 0;\n    const x1 = v1 !== void 0 ? v1.x.value : void 0;\n    const dx0 = x0 !== void 0 ? +d - +x0! : NaN;\n    const dx1 = x1 !== void 0 ? +x1! - +d : NaN;\n    if (dx0 <= dx1) {\n      return v0!;\n    } else if (dx0 > dx1) {\n      return v1!;\n    } else if (v0 !== void 0) {\n      return v0;\n    } else if (v1 !== void 0) {\n      return v1;\n    }\n    return null;\n  }\n\n  protected abstract hitTestPlot(x: number, y: number, renderer: CanvasRenderer): GraphicsView | null;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Length} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport type {FillView} from \"@swim/graphics\";\nimport type {StrokeView} from \"@swim/graphics\";\nimport type {ScatterPlotViewObserver} from \"./ScatterPlotView\";\nimport {ScatterPlotView} from \"./ScatterPlotView\";\n\n/** @public */\nexport interface BubblePlotViewObserver<X = unknown, Y = unknown, V extends BubblePlotView<X, Y> = BubblePlotView<X, Y>> extends ScatterPlotViewObserver<X, Y, V> {\n  viewDidSetRadius?(radius: Length | null, view: V): void;\n\n  viewDidSetFill?(fill: Color | null, view: V): void;\n}\n\n/** @public */\nexport class BubblePlotView<X = unknown, Y = unknown> extends ScatterPlotView<X, Y> implements FillView, StrokeView {\n  declare readonly observerType?: Class<BubblePlotViewObserver<X, Y>>;\n\n  @ThemeAnimator({\n    valueType: Length,\n    value: Length.px(5),\n    updateFlags: View.NeedsRender,\n    didSetValue(radius: Length | null): void {\n      this.owner.callObservers(\"viewDidSetRadius\", radius, this.owner);\n    },\n  })\n  readonly radius!: ThemeAnimator<this, Length | null>;\n\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    look: Look.accentColor,\n    updateFlags: View.NeedsRender,\n    didSetValue(fill: Color | null): void {\n      this.owner.callObservers(\"viewDidSetFill\", fill, this.owner);\n    },\n  })\n  readonly fill!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: null, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null>;\n\n  protected renderPlot(context: CanvasContext, frame: R2Box): void {\n    const size = Math.min(frame.width, frame.height);\n    const radius = this.radius.getValueOr(Length.zero());\n    const opacity = this.opacity.value;\n    const fill = this.fill.value;\n    const stroke = this.stroke.value;\n    const strokeWidth = this.strokeWidth.value;\n\n    // save\n    const contextGlobalAlpha = context.globalAlpha;\n    const contextFillStyle = context.fillStyle;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    if (opacity !== void 0) {\n      context.globalAlpha = opacity;\n    }\n\n    const dataPointViews = this.dataPoints.views;\n    for (const viewId in dataPointViews) {\n      const p = dataPointViews[viewId]!;\n      context.beginPath();\n      const r = p.radius.getValueOr(radius).pxValue(size);\n      context.arc(p.xCoord, p.yCoord, r, 0, 2 * Math.PI);\n      let fillColor = ThemeAnimator.tryValueOr(p, \"color\", fill);\n      if (fillColor !== null) {\n        const opacity = ThemeAnimator.tryValue(p, \"opacity\");\n        if (opacity !== void 0) {\n          fillColor = fillColor.alpha(opacity);\n        }\n        context.fillStyle = fillColor.toString();\n        context.fill();\n      }\n      if (stroke !== null) {\n        if (strokeWidth !== null) {\n          context.lineWidth = strokeWidth.pxValue(size);\n        }\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n      }\n    }\n\n    // restore\n    context.globalAlpha = contextGlobalAlpha;\n    context.fillStyle = contextFillStyle;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport type {CanvasRenderer} from \"@swim/graphics\";\nimport type {StrokeView} from \"@swim/graphics\";\nimport type {DataPointView} from \"./DataPointView\";\nimport type {SeriesPlotViewObserver} from \"./SeriesPlotView\";\nimport {SeriesPlotView} from \"./SeriesPlotView\";\n\n/** @public */\nexport interface LinePlotViewObserver<X = unknown, Y = unknown, V extends LinePlotView<X, Y> = LinePlotView<X, Y>> extends SeriesPlotViewObserver<X, Y, V> {\n  viewDidSetStroke?(stroke: Color | null, view: V): void;\n\n  viewDidSetStrokeWidth?(strokeWidth: Length | null, view: V): void;\n}\n\n/** @public */\nexport class LinePlotView<X = unknown, Y = unknown> extends SeriesPlotView<X, Y> implements StrokeView {\n  declare readonly observerType?: Class<LinePlotViewObserver<X, Y>>;\n\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    look: Look.accentColor,\n    updateFlags: View.NeedsRender,\n    didSetValue(stroke: Color | null): void {\n      this.owner.callObservers(\"viewDidSetStroke\", stroke, this.owner);\n    },\n  })\n  readonly stroke!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({\n    valueType: Length,\n    value: Length.px(1),\n    updateFlags: View.NeedsRender,\n    didSetValue(strokeWidth: Length | null): void {\n      if (this.owner.xRangePadding.hasAffinity(Affinity.Intrinsic) || this.owner.yRangePadding.hasAffinity(Affinity.Intrinsic)) {\n        const frame = this.owner.viewFrame;\n        const size = Math.min(frame.width, frame.height);\n        const strokeWidth = this.getValueOr(Length.zero()).pxValue(size);\n        const strokeRadius = strokeWidth / 2;\n        this.owner.xRangePadding.setIntrinsic([strokeRadius, strokeRadius]);\n        this.owner.yRangePadding.setIntrinsic([strokeRadius, strokeRadius]);\n      }\n      this.owner.callObservers(\"viewDidSetStrokeWidth\", strokeWidth, this.owner);\n    },\n  })\n  readonly strokeWidth!: ThemeAnimator<this, Length | null>;\n\n  @Property({valueType: Number, value: 5})\n  readonly hitWidth!: Property<this, number>;\n\n  protected renderPlot(context: CanvasContext, frame: R2Box): void {\n    const size = Math.min(frame.width, frame.height);\n    const opacity = this.opacity.value;\n    const stroke = this.stroke.getValueOr(Color.transparent());\n    const strokeWidth = this.strokeWidth.getValueOr(Length.zero()).pxValue(size);\n    const gradientStops = this.gradientStops;\n    let gradient: CanvasGradient | null = null;\n\n    let x0: number;\n    let x1: number;\n    let dx: number;\n    const dataPointViews = this.dataPointViews;\n    if (!dataPointViews.isEmpty()) {\n      const p0 = dataPointViews.firstValue()!;\n      const p1 = dataPointViews.lastValue()!;\n      x0 = p0.xCoord;\n      x1 = p1.xCoord;\n      dx = x1 - x0;\n      if (gradientStops !== 0) {\n        gradient = context.createLinearGradient(x0, 0, x1, 0);\n      }\n    } else {\n      x0 = NaN;\n      x1 = NaN;\n      dx = NaN;\n    }\n\n    context.beginPath();\n    let i = 0;\n    dataPointViews.forEach(function (p: DataPointView<X, Y>): void {\n      const xCoord = p.xCoord;\n      const yCoord = p.yCoord;\n      if (i === 0) {\n        context.moveTo(xCoord, yCoord);\n      } else {\n        context.lineTo(xCoord, yCoord);\n      }\n      if (gradient !== null && p.isGradientStop()) {\n        let color = ThemeAnimator.tryValueOr(p, \"color\", stroke);\n        const opacity = ThemeAnimator.tryValue(p, \"opacity\");\n        if (opacity !== void 0) {\n          color = color.alpha(opacity);\n        }\n        const offset = (xCoord - x0) / (dx || 1);\n        gradient!.addColorStop(offset, color.toString());\n      }\n      i += 1;\n    }, this);\n\n      // save\n    const contextGlobalAlpha = context.globalAlpha;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    if (opacity !== void 0) {\n      context.globalAlpha = opacity;\n    }\n    context.lineWidth = strokeWidth;\n    context.strokeStyle = gradient !== null ? gradient : stroke.toString();\n    context.stroke();\n\n    // restore\n    context.globalAlpha = contextGlobalAlpha;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected hitTestPlot(x: number, y: number, renderer: CanvasRenderer): GraphicsView | null {\n    const context = renderer.context;\n    let hitWidth = this.hitWidth.value;\n    const strokeWidth = this.strokeWidth.value;\n    if (strokeWidth !== null) {\n      const frame = this.viewFrame;\n      const size = Math.min(frame.width, frame.height);\n      hitWidth = Math.max(hitWidth, strokeWidth.pxValue(size));\n    }\n\n    context.beginPath();\n    let i = 0;\n    this.dataPointViews.forEach(function (p: DataPointView<X, Y>): void {\n      const xCoord = p.xCoord;\n      const yCoord = p.yCoord;\n      if (i === 0) {\n        context.moveTo(xCoord, yCoord);\n      } else {\n        context.lineTo(xCoord, yCoord);\n      }\n      i += 1;\n    }, this);\n\n    // save\n    const contextLineWidth = context.lineWidth;\n\n    context.lineWidth = hitWidth;\n    const p = renderer.transform.transform(x, y);\n    const pointInStroke = context.isPointInStroke(p.x, p.y);\n\n    // restore\n    context.lineWidth = contextLineWidth;\n\n    if (pointInStroke) {\n      const hitMode = this.hitMode.value;\n      if (hitMode === \"plot\") {\n        return this;\n      } else if (hitMode === \"data\") {\n        return this.hitTestDomain(x, y, renderer);\n      }\n    }\n    return null;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {R2Box} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport type {CanvasRenderer} from \"@swim/graphics\";\nimport type {FillView} from \"@swim/graphics\";\nimport type {SeriesPlotViewObserver} from \"./SeriesPlotView\";\nimport type {DataPointView} from \"./DataPointView\";\nimport {SeriesPlotView} from \"./SeriesPlotView\";\n\n/** @public */\nexport interface AreaPlotViewObserver<X = unknown, Y = unknown, V extends AreaPlotView<X, Y> = AreaPlotView<X, Y>> extends SeriesPlotViewObserver<X, Y, V> {\n  viewDidSetFill?(fill: Color | null, view: V): void;\n}\n\n/** @public */\nexport class AreaPlotView<X = unknown, Y = unknown> extends SeriesPlotView<X, Y> implements FillView {\n  declare readonly observerType?: Class<AreaPlotViewObserver<X, Y>>;\n\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    look: Look.accentColor,\n    updateFlags: View.NeedsRender,\n    didSetValue(fill: Color | null): void {\n      this.owner.callObservers(\"viewDidSetFill\", fill, this.owner);\n    },\n  })\n  readonly fill!: ThemeAnimator<this, Color | null>;\n\n  protected renderPlot(context: CanvasContext, frame: R2Box): void {\n    const opacity = this.opacity.value;\n    const fill = this.fill.getValueOr(Color.transparent());\n    const gradientStops = this.gradientStops;\n    let gradient: CanvasGradient | null = null;\n\n    context.beginPath();\n\n    let x0: number;\n    let x1: number;\n    let dx: number;\n    const dataPointViews = this.dataPointViews;\n    if (!dataPointViews.isEmpty()) {\n      const p0 = dataPointViews.firstValue()!;\n      const p1 = dataPointViews.lastValue()!;\n      x0 = p0.xCoord;\n      x1 = p1.xCoord;\n      dx = x1 - x0;\n      context.moveTo(p0.xCoord, p0.yCoord);\n      if (gradientStops !== 0) {\n        gradient = context.createLinearGradient(x0, 0, x1, 0);\n        if (p0.isGradientStop()) {\n          let color = ThemeAnimator.tryValueOr(p0, \"color\", fill);\n          const opacity = ThemeAnimator.tryValue(p0, \"opacity\");\n          if (opacity !== void 0) {\n            color = color.alpha(opacity);\n          }\n          gradient.addColorStop(0, color.toString());\n        }\n      }\n    } else {\n      x0 = NaN;\n      x1 = NaN;\n      dx = NaN;\n    }\n\n    const cursor = dataPointViews.values();\n    cursor.next();\n    while (cursor.hasNext()) {\n      const p = cursor.next().value as DataPointView<X, Y>;\n      context.lineTo(p.xCoord, p.yCoord);\n      if (gradient !== null && p.isGradientStop()) {\n        let color = ThemeAnimator.tryValueOr(p, \"color\", fill);\n        const opacity = ThemeAnimator.tryValue(p, \"opacity\");\n        if (opacity !== void 0) {\n          color = color.alpha(opacity);\n        }\n        const offset = (p.xCoord - x0) / (dx || 1);\n        gradient.addColorStop(offset, color.toString());\n      }\n    }\n    while (cursor.hasPrevious()) {\n      const p = cursor.previous().value!;\n      context.lineTo(p.xCoord, p.y2Coord!);\n    }\n    if (!dataPointViews.isEmpty()) {\n      context.closePath();\n    }\n\n    // save\n    const contextGlobalAlpha = context.globalAlpha;\n    const contextFillStyle = context.fillStyle;\n\n    if (opacity !== void 0) {\n      context.globalAlpha = opacity;\n    }\n    context.fillStyle = gradient !== null ? gradient : fill.toString();\n    context.fill();\n\n    // restore\n    context.globalAlpha = contextGlobalAlpha;\n    context.fillStyle = contextFillStyle;\n  }\n\n  protected hitTestPlot(x: number, y: number, renderer: CanvasRenderer): GraphicsView | null {\n    const context = renderer.context;\n    const dataPointViews = this.dataPointViews;\n\n    context.beginPath();\n    const cursor = dataPointViews.values();\n    if (cursor.hasNext()) {\n      const p = cursor.next().value!;\n      context.moveTo(p.xCoord, p.yCoord);\n    }\n    while (cursor.hasNext()) {\n      const p = cursor.next().value!;\n      context.lineTo(p.xCoord, p.yCoord);\n    }\n    while (cursor.hasPrevious()) {\n      const p = cursor.previous().value!;\n      context.lineTo(p.xCoord, p.y2Coord!);\n    }\n    if (!dataPointViews.isEmpty()) {\n      context.closePath();\n    }\n\n    const p = renderer.transform.transform(x, y);\n    if (context.isPointInPath(p.x, p.y)) {\n      const hitMode = this.hitMode.value;\n      if (hitMode === \"plot\") {\n        return this;\n      } else if (hitMode === \"data\") {\n        return this.hitTestDomain(x, y, renderer);\n      }\n    }\n    return null;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitRef} from \"@swim/model\";\nimport {DataSetTrait} from \"./DataSetTrait\";\nimport type {PlotController} from \"./PlotController\";\n\n/** @public */\nexport interface PlotTraitObserver<X = unknown, Y = unknown, T extends PlotTrait<X, Y> = PlotTrait<X, Y>> extends TraitObserver<T> {\n  traitWillAttachDataSet?(dataSetTrait: DataSetTrait<X, Y>, trait: T): void;\n\n  traitDidDetachDataSet?(dataSetTrait: DataSetTrait<X, Y>, trait: T): void;\n}\n\n/** @public */\nexport abstract class PlotTrait<X = unknown, Y = unknown> extends Trait {\n  declare readonly observerType?: Class<PlotTraitObserver<X, Y>>;\n\n  @TraitRef({\n    traitType: DataSetTrait,\n    binds: true,\n    willAttachTrait(dataSetTrait: DataSetTrait<X, Y>, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachDataSet\", dataSetTrait, this.owner);\n    },\n    didAttachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        dataSetTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        dataSetTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      this.owner.callObservers(\"traitDidDetachDataSet\", dataSetTrait, this.owner);\n    },\n    detectModel(model: Model): DataSetTrait<X, Y> | null {\n      return null;\n    },\n    detectTrait(trait: Trait): DataSetTrait<X, Y> | null {\n      return trait instanceof DataSetTrait ? trait : null;\n    },\n  })\n  readonly dataSet!: TraitRef<this, DataSetTrait<X, Y>>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    const dataSetTrait = this.dataSet.trait;\n    if (dataSetTrait !== null) {\n      dataSetTrait.consume(this);\n    }\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    const dataSetTrait = this.dataSet.trait;\n    if (dataSetTrait !== null) {\n      dataSetTrait.unconsume(this);\n    }\n  }\n\n  abstract createPlotController(): PlotController<X, Y>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {PlotTraitObserver} from \"./PlotTrait\";\nimport {PlotTrait} from \"./PlotTrait\";\nimport type {ScatterPlotController} from \"./ScatterPlotController\";\n\n/** @public */\nexport interface ScatterPlotTraitObserver<X = unknown, Y = unknown, T extends ScatterPlotTrait<X, Y> = ScatterPlotTrait<X, Y>> extends PlotTraitObserver<X, Y, T> {\n}\n\n/** @public */\nexport abstract class ScatterPlotTrait<X = unknown, Y = unknown> extends PlotTrait<X, Y> {\n  declare readonly observerType?: Class<ScatterPlotTraitObserver<X, Y>>;\n\n  abstract override createPlotController(): ScatterPlotController<X, Y>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {PlotTraitObserver} from \"./PlotTrait\";\nimport {PlotTrait} from \"./PlotTrait\";\nimport type {SeriesPlotController} from \"./SeriesPlotController\";\n\n/** @public */\nexport interface SeriesPlotTraitObserver<X = unknown, Y = unknown, T extends SeriesPlotTrait<X, Y> = SeriesPlotTrait<X, Y>> extends PlotTraitObserver<X, Y, T> {\n}\n\n/** @public */\nexport abstract class SeriesPlotTrait<X = unknown, Y = unknown> extends PlotTrait<X, Y> {\n  declare readonly observerType?: Class<SeriesPlotTraitObserver<X, Y>>;\n\n  abstract override createPlotController(): SeriesPlotController<X, Y>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\nimport type {ScatterPlotTraitObserver} from \"./ScatterPlotTrait\";\nimport {ScatterPlotTrait} from \"./ScatterPlotTrait\";\nimport type {ScatterPlotController} from \"./ScatterPlotController\";\nimport {BubblePlotController} from \"./\"; // forward import\n\n/** @public */\nexport interface BubblePlotTraitObserver<X = unknown, Y = unknown, T extends BubblePlotTrait<X, Y> = BubblePlotTrait<X, Y>> extends ScatterPlotTraitObserver<X, Y, T> {\n  traitDidSetRadius?(radius: Length | null, trait: T): void;\n\n  traitDidSetFill?(fill: ColorOrLook | null, trait: T): void;\n}\n\n/** @public */\nexport class BubblePlotTrait<X = unknown, Y = unknown> extends ScatterPlotTrait<X, Y> {\n  declare readonly observerType?: Class<BubblePlotTraitObserver<X, Y>>;\n\n  @Property({\n    valueType: Length,\n    value: null,\n    didSetValue(radius: Length | null): void {\n      this.owner.callObservers(\"traitDidSetRadius\", radius, this.owner);\n    },\n  })\n  readonly radius!: Property<this, Length | null>;\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    didSetValue(fill: ColorOrLook | null): void {\n      this.owner.callObservers(\"traitDidSetFill\", fill, this.owner);\n    },\n  })\n  readonly fill!: Property<this, ColorOrLook | null>;\n\n  override createPlotController(): ScatterPlotController<X, Y> {\n    return new BubblePlotController<X, Y>();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\nimport type {SeriesPlotTraitObserver} from \"./SeriesPlotTrait\";\nimport {SeriesPlotTrait} from \"./SeriesPlotTrait\";\nimport type {SeriesPlotController} from \"./SeriesPlotController\";\nimport {LinePlotController} from \"./\"; // forward import\n\n/** @public */\nexport interface LinePlotTraitObserver<X = unknown, Y = unknown, T extends LinePlotTrait<X, Y> = LinePlotTrait<X, Y>> extends SeriesPlotTraitObserver<X, Y, T> {\n  traitDidSetStroke?(stroke: ColorOrLook | null, trait: T): void;\n\n  traitDidSetStrokeWidth?(strokeWidth: Length | null, trait: T): void;\n}\n\n/** @public */\nexport class LinePlotTrait<X = unknown, Y = unknown> extends SeriesPlotTrait<X, Y> {\n  declare readonly observerType?: Class<LinePlotTraitObserver<X, Y>>;\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    didSetValue(stroke: ColorOrLook | null): void {\n      this.owner.callObservers(\"traitDidSetStroke\", stroke, this.owner);\n    },\n  })\n  readonly stroke!: Property<this, ColorOrLook | null>;\n\n  @Property({\n    valueType: Length,\n    value: null,\n    didSetValue(strokeWidth: Length | null): void {\n      this.owner.callObservers(\"traitDidSetStrokeWidth\", strokeWidth, this.owner);\n    },\n  })\n  readonly strokeWidth!: Property<this, Length | null>;\n\n  override createPlotController(): SeriesPlotController<X, Y> {\n    return new LinePlotController<X, Y>();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\nimport type {SeriesPlotTraitObserver} from \"./SeriesPlotTrait\";\nimport {SeriesPlotTrait} from \"./SeriesPlotTrait\";\nimport type {SeriesPlotController} from \"./SeriesPlotController\";\nimport {AreaPlotController} from \"./\"; // forward import\n\n/** @public */\nexport interface AreaPlotTraitObserver<X = unknown, Y = unknown, T extends AreaPlotTrait<X, Y> = AreaPlotTrait<X, Y>> extends SeriesPlotTraitObserver<X, Y, T> {\n  traitDidSetFill?(fill: ColorOrLook | null, trait: T): void;\n}\n\n/** @public */\nexport class AreaPlotTrait<X = unknown, Y = unknown> extends SeriesPlotTrait<X, Y> {\n  declare readonly observerType?: Class<AreaPlotTraitObserver<X, Y>>;\n\n  @Property({\n    valueType: ColorLook,\n    value: null,\n    didSetValue(fill: ColorOrLook | null): void {\n      this.owner.callObservers(\"traitDidSetFill\", fill, this.owner);\n    },\n  })\n  readonly fill!: Property<this, ColorOrLook | null>;\n\n  override createPlotController(): SeriesPlotController<X, Y> {\n    return new AreaPlotController<X, Y>();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport type {DataSetControllerObserver} from \"./DataSetController\";\nimport {DataSetController} from \"./DataSetController\";\nimport type {PlotView} from \"./PlotView\";\nimport type {PlotTrait} from \"./PlotTrait\";\n\n/** @public */\nexport interface PlotControllerObserver<X = unknown, Y = unknown, C extends PlotController<X, Y> = PlotController<X, Y>> extends DataSetControllerObserver<X, Y, C> {\n  controllerWillAttachPlotTrait?(plotTrait: PlotTrait<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotTrait?(plotTrait: PlotTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachPlotView?(plotView: PlotView<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotView?(plotView: PlotView<X, Y>, controller: C): void;\n}\n\n/** @public */\nexport abstract class PlotController<X = unknown, Y = unknown> extends DataSetController<X, Y> {\n  declare readonly observerType?: Class<PlotControllerObserver<X, Y>>;\n\n  @Property({valueType: Timing, inherits: true})\n  get plotTiming(): Property<this, Timing | boolean | undefined> {\n    return Property.getter();\n  }\n\n  abstract readonly plot: TraitViewRef<this, PlotTrait<X, Y>, PlotView<X, Y>>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport type {ScatterPlotView} from \"./ScatterPlotView\";\nimport type {ScatterPlotTrait} from \"./ScatterPlotTrait\";\nimport type {PlotControllerObserver} from \"./PlotController\";\nimport {PlotController} from \"./PlotController\";\n\n/** @public */\nexport interface ScatterPlotControllerObserver<X = unknown, Y = unknown, C extends ScatterPlotController<X, Y> = ScatterPlotController<X, Y>> extends PlotControllerObserver<X, Y, C> {\n  controllerWillAttachPlotTrait?(plotTrait: ScatterPlotTrait<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotTrait?(plotTrait: ScatterPlotTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachPlotView?(plotView: ScatterPlotView<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotView?(plotView: ScatterPlotView<X, Y>, controller: C): void;\n}\n\n/** @public */\nexport abstract class ScatterPlotController<X = unknown, Y = unknown> extends PlotController<X, Y> {\n  declare readonly observerType?: Class<ScatterPlotControllerObserver<X, Y>>;\n\n  abstract override readonly plot: TraitViewRef<this, ScatterPlotTrait<X, Y>, ScatterPlotView<X, Y>>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport type {SeriesPlotView} from \"./SeriesPlotView\";\nimport type {SeriesPlotTrait} from \"./SeriesPlotTrait\";\nimport type {PlotControllerObserver} from \"./PlotController\";\nimport {PlotController} from \"./PlotController\";\n\n/** @public */\nexport interface SeriesPlotControllerObserver<X = unknown, Y = unknown, C extends SeriesPlotController<X, Y> = SeriesPlotController<X, Y>> extends PlotControllerObserver<X, Y, C> {\n  controllerWillAttachPlotTrait?(plotTrait: SeriesPlotTrait<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotTrait?(plotTrait: SeriesPlotTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachPlotView?(plotView: SeriesPlotView<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotView?(plotView: SeriesPlotView<X, Y>, controller: C): void;\n}\n\n/** @public */\nexport abstract class SeriesPlotController<X = unknown, Y = unknown> extends PlotController<X, Y> {\n  declare readonly observerType?: Class<SeriesPlotControllerObserver<X, Y>>;\n\n  abstract override readonly plot: TraitViewRef<this, SeriesPlotTrait<X, Y>, SeriesPlotView<X, Y>>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Length} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"./DataPointView\";\nimport type {DataPointTrait} from \"./DataPointTrait\";\nimport type {DataPointController} from \"./DataPointController\";\nimport {DataSetTrait} from \"./DataSetTrait\";\nimport {BubblePlotView} from \"./BubblePlotView\";\nimport {BubblePlotTrait} from \"./BubblePlotTrait\";\nimport type {ScatterPlotControllerObserver} from \"./ScatterPlotController\";\nimport {ScatterPlotController} from \"./ScatterPlotController\";\n\n/** @public */\nexport interface BubblePlotControllerObserver<X = unknown, Y = unknown, C extends BubblePlotController<X, Y> = BubblePlotController<X, Y>> extends ScatterPlotControllerObserver<X, Y, C> {\n  controllerWillAttachPlotTrait?(plotTrait: BubblePlotTrait<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotTrait?(plotTrait: BubblePlotTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachPlotView?(plotView: BubblePlotView<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotView?(plotView: BubblePlotView<X, Y>, controller: C): void;\n\n  controllerDidSetPlotRadius?(radius: Length | null, controller: C): void;\n\n  controllerDidSetPlotFill?(fill: Color | null, controller: C): void;\n}\n\n/** @public */\nexport class BubblePlotController<X = unknown, Y = unknown> extends ScatterPlotController<X, Y> {\n  declare readonly observerType?: Class<BubblePlotControllerObserver<X, Y>>;\n\n  @TraitViewControllerSet({\n    extends: true,\n    get parentView(): BubblePlotView<X, Y> | null {\n      return this.owner.plot.view;\n    },\n  })\n  override readonly dataPoints!: TraitViewControllerSet<this, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>> & ScatterPlotController<X, Y>[\"dataPoints\"];\n\n  protected setRadius(radius: Length | null, timing?: TimingLike | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      plotView.radius.setIntrinsic(radius, timing);\n    }\n  }\n\n  protected setFill(fill: ColorOrLook | null, timing?: TimingLike | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      plotView.fill.setIntrinsic(fill, timing);\n    }\n  }\n\n  @TraitViewRef({\n    traitType: BubblePlotTrait,\n    observesTrait: true,\n    initTrait(plotTrait: BubblePlotTrait<X, Y>): void {\n      if (this.owner.dataSet.trait === null) {\n        const dataSetTrait = plotTrait.getTrait(DataSetTrait) as DataSetTrait<X, Y>;\n        if (dataSetTrait !== null) {\n          this.owner.dataSet.setTrait(dataSetTrait);\n        }\n      }\n      const plotView = this.view;\n      if (plotView !== null) {\n        this.owner.setRadius(plotTrait.radius.value);\n        this.owner.setFill(plotTrait.fill.value);\n      }\n    },\n    willAttachTrait(plotTrait: BubblePlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotTrait\", plotTrait, this.owner);\n    },\n    didDetachTrait(plotTrait: BubblePlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotTrait\", plotTrait, this.owner);\n    },\n    traitDidSetRadius(radius: Length | null): void {\n      this.owner.setRadius(radius);\n    },\n    traitDidSetFill(fill: ColorOrLook | null): void {\n      this.owner.setFill(fill);\n    },\n    viewType: BubblePlotView,\n    observesView: true,\n    initView(plotView: BubblePlotView<X, Y>): void {\n      const dataPointControllers = this.owner.dataPoints.controllers;\n      for (const controllerId in dataPointControllers) {\n        const dataPointController = dataPointControllers[controllerId]!;\n        dataPointController.dataPoint.insertView(plotView);\n      }\n      const plotTrait = this.trait;\n      if (plotTrait !== null) {\n        this.owner.setRadius(plotTrait.radius.value);\n        this.owner.setFill(plotTrait.fill.value);\n      }\n    },\n    willAttachView(plotView: BubblePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotView\", plotView, this.owner);\n    },\n    didDetachView(plotView: BubblePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotView\", plotView, this.owner);\n    },\n    viewDidSetRadius(radius: Length | null): void {\n      this.owner.callObservers(\"controllerDidSetPlotRadius\", radius, this.owner);\n    },\n    viewDidSetFill(fill: Color | null): void {\n      this.owner.callObservers(\"controllerDidSetPlotFill\", fill, this.owner);\n    },\n  })\n  readonly plot!: TraitViewRef<this, BubblePlotTrait<X, Y>, BubblePlotView<X, Y>> & Observes<BubblePlotTrait<X, Y>> & Observes<BubblePlotView<X, Y>>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Length} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"./DataPointView\";\nimport type {DataPointTrait} from \"./DataPointTrait\";\nimport type {DataPointController} from \"./DataPointController\";\nimport {DataSetTrait} from \"./DataSetTrait\";\nimport {LinePlotView} from \"./LinePlotView\";\nimport {LinePlotTrait} from \"./LinePlotTrait\";\nimport type {SeriesPlotControllerObserver} from \"./SeriesPlotController\";\nimport {SeriesPlotController} from \"./SeriesPlotController\";\n\n/** @public */\nexport interface LinePlotControllerObserver<X = unknown, Y = unknown, C extends LinePlotController<X, Y> = LinePlotController<X, Y>> extends SeriesPlotControllerObserver<X, Y, C> {\n  controllerWillAttachPlotTrait?(plotTrait: LinePlotTrait<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotTrait?(plotTrait: LinePlotTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachPlotView?(plotView: LinePlotView<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotView?(plotView: LinePlotView<X, Y>, controller: C): void;\n\n  controllerDidSetPlotStroke?(stroke: Color | null, controller: C): void;\n\n  controllerDidSetPlotStrokeWidth?(strokeWidth: Length | null, controller: C): void;\n}\n\n/** @public */\nexport class LinePlotController<X = unknown, Y = unknown> extends SeriesPlotController<X, Y> {\n  declare readonly observerType?: Class<LinePlotControllerObserver<X, Y>>;\n\n  @TraitViewControllerSet({\n    extends: true,\n    get parentView(): LinePlotView<X, Y> | null {\n      return this.owner.plot.view;\n    },\n  })\n  override readonly dataPoints!: TraitViewControllerSet<this, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>> & SeriesPlotController<X, Y>[\"dataPoints\"];\n\n  protected setStroke(stroke: ColorOrLook | null, timing?: TimingLike | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      plotView.stroke.setIntrinsic(stroke, timing);\n    }\n  }\n\n  protected setStrokeWidth(strokeWidth: Length | null, timing?: TimingLike | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      plotView.strokeWidth.setIntrinsic(strokeWidth, timing);\n    }\n  }\n\n  @TraitViewRef({\n    traitType: LinePlotTrait,\n    observesTrait: true,\n    initTrait(plotTrait: LinePlotTrait<X, Y>): void {\n      if (this.owner.dataSet.trait === null) {\n        const dataSetTrait = plotTrait.getTrait(DataSetTrait) as DataSetTrait<X, Y>;\n        if (dataSetTrait !== null) {\n          this.owner.dataSet.setTrait(dataSetTrait);\n        }\n      }\n      const plotView = this.view;\n      if (plotView !== null) {\n        const stroke = plotTrait.stroke.value;\n        if (stroke !== null) {\n          this.owner.setStroke(stroke);\n        }\n        const strokeWidth = plotTrait.strokeWidth.value;\n        if (strokeWidth !== null) {\n          this.owner.setStrokeWidth(strokeWidth);\n        }\n      }\n    },\n    willAttachTrait(plotTrait: LinePlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotTrait\", plotTrait, this.owner);\n    },\n    didDetachTrait(plotTrait: LinePlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotTrait\", plotTrait, this.owner);\n    },\n    traitDidSetStroke(stroke: ColorOrLook | null): void {\n      this.owner.setStroke(stroke);\n    },\n    traitDidSetStrokeWidth(strokeWidth: Length | null): void {\n      this.owner.setStrokeWidth(strokeWidth);\n    },\n    viewType: LinePlotView,\n    observesView: true,\n    initView(plotView: LinePlotView<X, Y>): void {\n      const dataPointControllers = this.owner.dataPoints.controllers;\n      for (const controllerId in dataPointControllers) {\n        const dataPointController = dataPointControllers[controllerId]!;\n        dataPointController.dataPoint.insertView(plotView);\n      }\n      const plotTrait = this.trait;\n      if (plotTrait !== null) {\n        const stroke = plotTrait.stroke.value;\n        if (stroke !== null) {\n          this.owner.setStroke(stroke);\n        }\n        const strokeWidth = plotTrait.strokeWidth.value;\n        if (strokeWidth !== null) {\n          this.owner.setStrokeWidth(strokeWidth);\n        }\n      }\n    },\n    willAttachView(plotView: LinePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotView\", plotView, this.owner);\n    },\n    didDetachView(plotView: LinePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotView\", plotView, this.owner);\n    },\n    viewDidSetStroke(stroke: Color | null): void {\n      this.owner.callObservers(\"controllerDidSetPlotStroke\", stroke, this.owner);\n    },\n    viewDidSetStrokeWidth(strokeWidth: Length | null): void {\n      this.owner.callObservers(\"controllerDidSetPlotStrokeWidth\", strokeWidth, this.owner);\n    },\n  })\n  readonly plot!: TraitViewRef<this, LinePlotTrait<X, Y>, LinePlotView<X, Y>> & Observes<LinePlotTrait<X, Y>> & Observes<LinePlotView<X, Y>>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"./DataPointView\";\nimport type {DataPointTrait} from \"./DataPointTrait\";\nimport type {DataPointController} from \"./DataPointController\";\nimport {DataSetTrait} from \"./DataSetTrait\";\nimport {AreaPlotView} from \"./AreaPlotView\";\nimport {AreaPlotTrait} from \"./AreaPlotTrait\";\nimport type {SeriesPlotControllerObserver} from \"./SeriesPlotController\";\nimport {SeriesPlotController} from \"./SeriesPlotController\";\n\n/** @public */\nexport interface AreaPlotControllerObserver<X = unknown, Y = unknown, C extends AreaPlotController<X, Y> = AreaPlotController<X, Y>> extends SeriesPlotControllerObserver<X, Y, C> {\n  controllerWillAttachPlotTrait?(plotTrait: AreaPlotTrait<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotTrait?(plotTrait: AreaPlotTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachPlotView?(plotView: AreaPlotView<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotView?(plotView: AreaPlotView<X, Y>, controller: C): void;\n\n  controllerDidSetPlotFill?(fill: Color | null, controller: C): void;\n}\n\n/** @public */\nexport class AreaPlotController<X = unknown, Y = unknown> extends SeriesPlotController<X, Y> {\n  declare readonly observerType?: Class<AreaPlotControllerObserver<X, Y>>;\n\n  @TraitViewControllerSet({\n    extends: true,\n    get parentView(): AreaPlotView<X, Y> | null {\n      return this.owner.plot.view;\n    },\n  })\n  override readonly dataPoints!: TraitViewControllerSet<this, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>> & SeriesPlotController<X, Y>[\"dataPoints\"];\n\n  protected setFill(fill: ColorOrLook | null, timing?: TimingLike | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      plotView.fill.setIntrinsic(fill, timing);\n    }\n  }\n\n  @TraitViewRef({\n    traitType: AreaPlotTrait,\n    observesTrait: true,\n    initTrait(plotTrait: AreaPlotTrait<X, Y>): void {\n      if (this.owner.dataSet.trait === null) {\n        const dataSetTrait = plotTrait.getTrait(DataSetTrait) as DataSetTrait<X, Y>;\n        if (dataSetTrait !== null) {\n          this.owner.dataSet.setTrait(dataSetTrait);\n        }\n      }\n      const plotView = this.view;\n      if (plotView !== null) {\n        const fill = plotTrait.fill.value;\n        if (fill !== null) {\n          this.owner.setFill(fill);\n        }\n      }\n    },\n    willAttachTrait(plotTrait: AreaPlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotTrait\", plotTrait, this.owner);\n    },\n    didDetachTrait(plotTrait: AreaPlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotTrait\", plotTrait, this.owner);\n    },\n    traitDidSetFill(fill: ColorOrLook | null): void {\n      this.owner.setFill(fill);\n    },\n    viewType: AreaPlotView,\n    observesView: true,\n    initView(plotView: AreaPlotView<X, Y>): void {\n      const dataPointControllers = this.owner.dataPoints.controllers;\n      for (const controllerId in dataPointControllers) {\n        const dataPointController = dataPointControllers[controllerId]!;\n        dataPointController.dataPoint.insertView(plotView);\n      }\n      const plotTrait = this.trait;\n      if (plotTrait !== null) {\n        const fill = plotTrait.fill.value;\n        if (fill !== null) {\n          this.owner.setFill(fill);\n        }\n      }\n    },\n    willAttachView(plotView: AreaPlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotView\", plotView, this.owner);\n    },\n    didDetachView(plotView: AreaPlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotView\", plotView, this.owner);\n    },\n    viewDidSetFill(fill: Color | null): void {\n      this.owner.callObservers(\"controllerDidSetPlotFill\", fill, this.owner);\n    },\n  })\n  readonly plot!: TraitViewRef<this, AreaPlotTrait<X, Y>, AreaPlotView<X, Y>> & Observes<AreaPlotTrait<X, Y>> & Observes<AreaPlotView<X, Y>>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {CanvasContext} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport type {ScaledViewObserver} from \"./ScaledView\";\nimport {ScaledView} from \"./ScaledView\";\n\n/** @public */\nexport interface GraphViewObserver<X = unknown, Y = unknown, V extends GraphView<X, Y> = GraphView<X, Y>> extends ScaledViewObserver<X, Y, V> {\n}\n\n/** @public */\nexport class GraphView<X = unknown, Y = unknown> extends ScaledView<X, Y> {\n  declare readonly observerType?: Class<GraphViewObserver<X, Y>>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  protected override willRender(): void {\n    super.willRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      context.save();\n      this.clipGraph(context, this.viewFrame);\n    }\n  }\n\n  protected override didRender(): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      context.restore();\n    }\n    super.didRender();\n  }\n\n  protected clipGraph(context: CanvasContext, frame: R2Box): void {\n    context.beginPath();\n    context.rect(frame.x, frame.y, frame.width, frame.height);\n    context.clip();\n  }\n\n  protected override hitTest(x: number, y: number): GraphicsView | null {\n    return this;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitSet} from \"@swim/model\";\nimport {PlotTrait} from \"./PlotTrait\";\n\n/** @public */\nexport interface GraphTraitObserver<X = unknown, Y = unknown, T extends GraphTrait<X, Y> = GraphTrait<X, Y>> extends TraitObserver<T> {\n  traitWillAttachPlot?(plotTrait: PlotTrait<X, Y>, trait: T): void;\n\n  traitDidDetachPlot?(plotTrait: PlotTrait<X, Y>, trait: T): void;\n}\n\n/** @public */\nexport class GraphTrait<X = unknown, Y = unknown> extends Trait {\n  declare readonly observerType?: Class<GraphTraitObserver<X, Y>>;\n\n  @TraitSet({\n    traitType: PlotTrait,\n    binds: true,\n    willAttachTrait(plotTrait: PlotTrait<X, Y>): void {\n      this.owner.callObservers(\"traitWillAttachPlot\", plotTrait, this.owner);\n    },\n    didAttachTrait(plotTrait: PlotTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        plotTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(plotTrait: PlotTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        plotTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(plotTrait: PlotTrait<X, Y>): void {\n      this.owner.callObservers(\"traitDidDetachPlot\", plotTrait, this.owner);\n    },\n    detectModel(model: Model): PlotTrait<X, Y> | null {\n      return model.getTrait(PlotTrait) as PlotTrait<X, Y>;\n    },\n  })\n  readonly plots!: TraitSet<this, PlotTrait<X, Y>>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.plots.consumeTraits(this);\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.plots.unconsumeTraits(this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"./DataPointView\";\nimport type {DataPointTrait} from \"./DataPointTrait\";\nimport type {DataPointController} from \"./DataPointController\";\nimport type {DataSetTrait} from \"./DataSetTrait\";\nimport type {PlotView} from \"./PlotView\";\nimport type {PlotTrait} from \"./PlotTrait\";\nimport {PlotController} from \"./PlotController\";\nimport {GraphView} from \"./GraphView\";\nimport {GraphTrait} from \"./GraphTrait\";\n\n/** @public */\nexport interface GraphControllerObserver<X = unknown, Y = unknown, C extends GraphController<X, Y> = GraphController<X, Y>> extends ControllerObserver<C> {\n  controllerWillAttachGraphTrait?(graphTrait: GraphTrait<X, Y> | null, controller: C): void;\n\n  controllerDidDetachGraphTrait?(graphTrait: GraphTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachGraphView?(graphView: GraphView<X, Y>, controller: C): void;\n\n  controllerDidDetachGraphView?(graphView: GraphView<X, Y>, controller: C): void;\n\n  controllerWillAttachPlot?(plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerDidDetachPlot?(plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerWillAttachPlotTrait?(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotTrait?(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerWillAttachPlotView?(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerDidDetachPlotView?(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerWillAttachDataSetTrait?(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerDidDetachDataSetTrait?(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerWillAttachDataPoint?(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPoint?(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerWillAttachDataPointTrait?(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPointTrait?(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerWillAttachDataPointView?(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPointView?(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerWillAttachDataPointLabelView?(labelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n\n  controllerDidDetachDataPointLabelView?(labelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>, controller: C): void;\n}\n\n/** @public */\nexport class GraphController<X = unknown, Y = unknown> extends Controller {\n  declare readonly observerType?: Class<GraphControllerObserver<X, Y>>;\n\n  @TraitViewRef({\n    traitType: GraphTrait,\n    observesTrait: true,\n    willAttachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachGraphTrait\", graphTrait, this.owner);\n    },\n    didAttachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.plots.addTraits(graphTrait.plots.traits);\n    },\n    willDetachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.plots.deleteTraits(graphTrait.plots.traits);\n    },\n    didDetachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachGraphTrait\", graphTrait, this.owner);\n    },\n    traitWillAttachPlot(plotTrait: PlotTrait<X, Y>, targetTrait: Trait): void {\n      this.owner.plots.addTrait(plotTrait, targetTrait);\n    },\n    traitDidDetachPlot(plotTrait: PlotTrait<X, Y>): void {\n      this.owner.plots.deleteTrait(plotTrait);\n    },\n    viewType: GraphView,\n    initView(graphView: GraphView<X, Y>): void {\n      const plotControllers = this.owner.plots.controllers;\n      for (const controllerId in plotControllers) {\n        const plotController = plotControllers[controllerId]!;\n        const plotView = plotController.plot.view;\n        if (plotView !== null && plotView.parent === null) {\n          plotController.plot.insertView(graphView);\n        }\n      }\n    },\n    willAttachView(newGraphView: GraphView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachGraphView\", newGraphView, this.owner);\n    },\n    didDetachView(newGraphView: GraphView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachGraphView\", newGraphView, this.owner);\n    },\n  })\n  readonly graph!: TraitViewRef<this, GraphTrait<X, Y>, GraphView<X, Y>> & Observes<GraphTrait<X, Y>>;\n\n  @TraitViewControllerSet({\n    controllerType: PlotController,\n    binds: true,\n    observes: true,\n    get parentView(): GraphView<X, Y> | null {\n      return this.owner.graph.view;\n    },\n    getTraitViewRef(plotController: PlotController<X, Y>): TraitViewRef<unknown, PlotTrait<X, Y>, PlotView<X, Y>> {\n      return plotController.plot;\n    },\n    willAttachController(plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlot\", plotController, this.owner);\n    },\n    didAttachController(plotController: PlotController<X, Y>): void {\n      const plotTrait = plotController.plot.trait;\n      if (plotTrait !== null) {\n        this.attachPlotTrait(plotTrait, plotController);\n      }\n      const plotView = plotController.plot.view;\n      if (plotView !== null) {\n        this.attachPlotView(plotView, plotController);\n      }\n      const dataSetTrait = plotController.dataSet.trait;\n      if (dataSetTrait !== null) {\n        this.attachDataSetTrait(dataSetTrait, plotController);\n      }\n    },\n    willDetachController(plotController: PlotController<X, Y>): void {\n      const dataSetTrait = plotController.dataSet.trait;\n      if (dataSetTrait !== null) {\n        this.detachDataSetTrait(dataSetTrait, plotController);\n      }\n      const plotView = plotController.plot.view;\n      if (plotView !== null) {\n        this.detachPlotView(plotView, plotController);\n      }\n      const plotTrait = plotController.plot.trait;\n      if (plotTrait !== null) {\n        this.detachPlotTrait(plotTrait, plotController);\n      }\n    },\n    didDetachController(plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlot\", plotController, this.owner);\n    },\n    controllerWillAttachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotTrait\", plotTrait, plotController, this.owner);\n      this.attachPlotTrait(plotTrait, plotController);\n    },\n    controllerDidDetachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachPlotTrait(plotTrait, plotController);\n      this.owner.callObservers(\"controllerDidDetachPlotTrait\", plotTrait, plotController, this.owner);\n    },\n    attachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    controllerWillAttachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotView\", plotView, plotController, this.owner);\n      this.attachPlotView(plotView, plotController);\n    },\n    controllerDidDetachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachPlotView(plotView, plotController);\n      this.owner.callObservers(\"controllerDidDetachPlotView\", plotView, plotController, this.owner);\n    },\n    attachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void {\n      plotView.remove();\n    },\n    controllerWillAttachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataSetTrait\", dataSetTrait, plotController, this.owner);\n      this.attachDataSetTrait(dataSetTrait, plotController);\n    },\n    controllerDidDetachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataSetTrait(dataSetTrait, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataSetTrait\", dataSetTrait, plotController, this.owner);\n    },\n    attachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    controllerWillAttachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPoint\", dataPointController, plotController, this.owner);\n      this.attachDataPoint(dataPointController, plotController);\n    },\n    controllerDidDetachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataPoint(dataPointController, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataPoint\", dataPointController, plotController, this.owner);\n    },\n    attachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      const dataPointTrait = dataPointController.dataPoint.trait;\n      if (dataPointTrait !== null) {\n        this.attachDataPointTrait(dataPointTrait, dataPointController, plotController);\n      }\n      const dataPointView = dataPointController.dataPoint.view;\n      if (dataPointView !== null) {\n        this.attachDataPointView(dataPointView, dataPointController, plotController);\n      }\n    },\n    detachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      const dataPointTrait = dataPointController.dataPoint.trait;\n      if (dataPointTrait !== null) {\n        this.detachDataPointTrait(dataPointTrait, dataPointController, plotController);\n      }\n      const dataPointView = dataPointController.dataPoint.view;\n      if (dataPointView !== null) {\n        this.detachDataPointView(dataPointView, dataPointController, plotController);\n      }\n    },\n    controllerWillAttachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointTrait\", dataPointTrait, dataPointController, plotController, this.owner);\n      this.attachDataPointTrait(dataPointTrait, dataPointController, plotController);\n    },\n    controllerDidDetachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataPointTrait(dataPointTrait, dataPointController, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataPointTrait\", dataPointTrait, dataPointController, plotController, this.owner);\n    },\n    attachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    controllerWillAttachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointView\", dataPointView, dataPointController, plotController, this.owner);\n      this.attachDataPointView(dataPointView, dataPointController, plotController);\n    },\n    controllerDidDetachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataPointView(dataPointView, dataPointController, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataPointView\", dataPointView, dataPointController, plotController, this.owner);\n    },\n    attachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.attachDataPointLabelView(labelView, dataPointController, plotController);\n      }\n    },\n    detachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.detachDataPointLabelView(labelView, dataPointController, plotController);\n      }\n    },\n    controllerWillAttachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointLabelView\", labelView, dataPointController, plotController, this.owner);\n      this.attachDataPointLabelView(labelView, dataPointController, plotController);\n    },\n    controllerDidDetachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataPointLabelView(labelView, dataPointController, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataPointLabelView\", labelView, dataPointController, plotController, this.owner);\n    },\n    attachDataPointLabelView(dataPointLabelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachDataPointLabelView(dataPointLabelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    createController(plotTrait?: PlotTrait<X, Y>): PlotController<X, Y> {\n      if (plotTrait !== void 0) {\n        return plotTrait.createPlotController();\n      } else {\n        return super.createController();\n      }\n    },\n  })\n  readonly plots!: TraitViewControllerSet<this, PlotTrait<X, Y>, PlotView<X, Y>, PlotController<X, Y>> & Observes<PlotController<X, Y>> & {\n    attachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void,\n    detachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void,\n    attachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void,\n    detachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void,\n    attachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void,\n    detachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void,\n    attachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void,\n    detachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void,\n    attachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void,\n    detachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void,\n    attachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void,\n    detachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void,\n    attachDataPointLabelView(dataPointLabelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void,\n    detachDataPointLabelView(dataPointLabelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void,\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {DomainLike} from \"@swim/util\";\nimport type {Domain} from \"@swim/util\";\nimport {LinearDomain} from \"@swim/util\";\nimport type {ContinuousScale} from \"@swim/util\";\nimport {LinearScale} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport type {TimeZone} from \"@swim/time\";\nimport type {DateTimeLike} from \"@swim/time\";\nimport {DateTime} from \"@swim/time\";\nimport {TimeDomain} from \"@swim/time\";\nimport {DateTimeFormat} from \"@swim/time\";\nimport {TimeInterval} from \"@swim/time\";\nimport {TimeScale} from \"@swim/time\";\n\nconst ERROR_10 = Math.sqrt(50);\nconst ERROR_5 = Math.sqrt(10);\nconst ERROR_2 = Math.sqrt(2);\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\nconst YEAR = 365 * DAY;\n\nconst TIME_TICK_INTERVALS = new BTree<number, TimeInterval>()\n  .set(SECOND, TimeInterval.second)\n  .set(5 * SECOND, TimeInterval.second.every(5))\n  .set(15 * SECOND, TimeInterval.second.every(15))\n  .set(30 * SECOND, TimeInterval.second.every(30))\n  .set(MINUTE, TimeInterval.minute)\n  .set(5 * MINUTE, TimeInterval.minute.every(5))\n  .set(15 * MINUTE, TimeInterval.minute.every(15))\n  .set(30 * MINUTE, TimeInterval.minute.every(30))\n  .set(HOUR, TimeInterval.hour)\n  .set(3 * HOUR, TimeInterval.hour.every(3))\n  .set(6 * HOUR, TimeInterval.hour.every(6))\n  .set(12 * HOUR, TimeInterval.hour.every(12))\n  .set(DAY, TimeInterval.day)\n  .set(2 * DAY, TimeInterval.day.every(2))\n  .set(WEEK, TimeInterval.week)\n  .set(MONTH, TimeInterval.month)\n  .set(3 * MONTH, TimeInterval.month.every(3))\n  .set(YEAR, TimeInterval.year);\n\nconst MILLISECOND_FORMAT = DateTimeFormat.pattern(\".%L\");\nconst SECOND_FORMAT = DateTimeFormat.pattern(\":%S\");\nconst MINUTE_FORMAT = DateTimeFormat.pattern(\"%i:%M\");\nconst HOUR_FORMAT = DateTimeFormat.pattern(\"%i %p\");\nconst WEEKDAY_FORMAT = DateTimeFormat.pattern(\"%a %e\");\nconst MONTHDAY_FORMAT = DateTimeFormat.pattern(\"%b %e\");\nconst MONTH_FORMAT = DateTimeFormat.pattern(\"%B\");\nconst YEAR_FORMAT = DateTimeFormat.pattern(\"%Y\");\n\n/** @public */\nexport abstract class TickGenerator<D> {\n  abstract count(): number;\n  abstract count(n: number): this;\n\n  abstract domain(): Domain<D>;\n  abstract domain(xs: DomainLike<D>): this;\n  abstract domain(x0: D, x1: D): this;\n\n  abstract generate(): D[];\n\n  format(tickValue: D): string {\n    return \"\" + tickValue;\n  }\n\n  static fromScale<D>(scale: ContinuousScale<D, number>, n?: number): TickGenerator<D> {\n    if (n === void 0) {\n      n = 10;\n    }\n    if (scale instanceof TimeScale) {\n      const domain = scale.domain;\n      return new TimeTickGenerator(domain[0], domain[1], n) as unknown as TickGenerator<D>;\n    } else if (scale instanceof LinearScale) {\n      const domain = scale.domain;\n      return new NumberTickGenerator(domain[0], domain[1], n) as unknown as TickGenerator<D>;\n    } else {\n      throw new TypeError(\"\" + scale);\n    }\n  }\n\n  /** @internal */\n  static step(dx: number, n: number): number {\n    const step0 = Math.abs(dx) / n;\n    let step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10));\n    const error = step0 / step1;\n    if (error >= ERROR_10) {\n      step1 *= 10;\n    } else if (error >= ERROR_5) {\n      step1 *= 5;\n    } else if (error >= ERROR_2) {\n      step1 *= 2;\n    }\n    return dx < 0 ? -step1 : step1;\n  }\n}\n\n/** @public */\nexport class NumberTickGenerator extends TickGenerator<number> {\n  /** @internal */\n  protected x0: number;\n  /** @internal */\n  protected dx: number;\n  /** @internal */\n  protected n: number;\n\n  constructor(x0: number, x1: number, n: number) {\n    super();\n    this.x0 = x0;\n    this.dx = x1 - this.x0;\n    this.n = Math.max(0, n);\n  }\n\n  override count(): number;\n  override count(n: number): this;\n  override count(n?: number): number | this {\n    if (n === void 0) {\n      return this.n;\n    } else {\n      this.n = Math.max(0, n);\n      return this;\n    }\n  }\n\n  override domain(): Domain<number>;\n  override domain(xs: DomainLike<number>): this;\n  override domain(x0: number, x1: number): this;\n  override domain(x0?: DomainLike<number> | number, x1?: number): Domain<number> | this {\n    if (x0 === void 0) {\n      return LinearDomain(this.x0, this.x0 + this.dx);\n    } else if (x1 === void 0) {\n      this.x0 = (x0 as DomainLike<number>)[0];\n      this.dx = (x0 as DomainLike<number>)[1] - this.x0;\n      return this;\n    } else {\n      this.x0 = x0 as number;\n      this.dx = x1 - this.x0;\n      return this;\n    }\n  }\n\n  override generate(): number[] {\n    let x0: number;\n    let x1: number;\n    if (this.dx < 0) {\n      x1 = this.x0;\n      x0 = x1 + this.dx;\n    } else {\n      x0 = this.x0;\n      x1 = x0 + this.dx;\n    }\n\n    const step = NumberTickGenerator.interval(x1 - x0, this.n);\n    if (step === 0 || !isFinite(step)) {\n      return [];\n    }\n\n    let ticks;\n    if (step > 0) {\n      x0 = Math.ceil(x0 / step);\n      x1 = Math.floor(x1 / step);\n      const n = Math.ceil(x1 - x0 + 1);\n      ticks = new Array<number>(n);\n      for (let i = 0; i < n; i += 1) {\n        ticks[i] = (x0 + i) * step;\n      }\n    } else {\n      x0 = Math.floor(x0 * step);\n      x1 = Math.ceil(x1 * step);\n      const n = Math.ceil(x0 - x1 + 1);\n      ticks = new Array<number>(n);\n      for (let i = 0; i < n; i += 1) {\n        ticks[i] = (x0 - i) / step;\n      }\n    }\n\n    if (this.dx < 0) {\n      ticks.reverse();\n    }\n\n    return ticks;\n  }\n\n  /** @internal */\n  static interval(dx: number, n: number = 10): number {\n    const step = dx / n;\n    const power = Math.floor(Math.log(step) / Math.LN10);\n    const power10 = Math.pow(10, power);\n    const error = step / power10;\n    const base = error >= ERROR_10 ? 10 : error >= ERROR_5 ? 5 : error >= ERROR_2 ? 2 : 1;\n    return power >= 0 ? power10 * base : -Math.pow(10, -power) / base;\n  }\n}\n\n/** @public */\nexport class TimeTickGenerator extends TickGenerator<DateTime> {\n  /** @internal */\n  protected t0: number;\n  /** @internal */\n  protected dt: number;\n  /** @internal */\n  protected zone: TimeZone;\n  /** @internal */\n  protected n: number;\n\n  constructor(t0: DateTimeLike, t1: DateTimeLike, n: number, zone?: TimeZone) {\n    super();\n    const d0 = DateTime.fromLike(t0);\n    const d1 = DateTime.fromLike(t1);\n    this.t0 = d0.time;\n    this.dt = d1.time - this.t0;\n    this.zone = zone !== void 0 ? zone : d0.zone;\n    this.n = Math.max(0, n);\n  }\n\n  override count(): number;\n  override count(n: number): this;\n  override count(n?: number): number | this {\n    if (n === void 0) {\n      return this.n;\n    } else {\n      this.n = Math.max(0, n);\n      return this;\n    }\n  }\n\n  override domain(): Domain<DateTime>;\n  override domain(ts: DomainLike<DateTime>): this;\n  override domain(d0: DateTimeLike, d1: DateTimeLike): this;\n  override domain(d0?: DomainLike<DateTime> | DateTimeLike,\n                  d1?: DateTimeLike): Domain<DateTime> | this {\n    if (d0 === void 0) {\n      return TimeDomain(new DateTime(this.t0, this.zone), new DateTime(this.t0 + this.dt, this.zone));\n    } else {\n      if (d1 === void 0) {\n        d1 = (d0 as DomainLike<DateTime>)[1];\n        d0 = (d0 as DomainLike<DateTime>)[0];\n      } else {\n        d0 = d0 as DateTimeLike;\n      }\n      d0 = DateTime.fromLike(d0);\n      d1 = DateTime.fromLike(d1);\n      this.t0 = d0.time;\n      this.dt = d1.time - this.t0;\n      return this;\n    }\n  }\n\n  override generate(interval?: TimeInterval | number): DateTime[] {\n    let t0: number;\n    let t1: number;\n    if (this.dt < 0) {\n      t1 = this.t0;\n      t0 = t1 + this.dt;\n    } else {\n      t0 = this.t0;\n      t1 = t0 + this.dt;\n    }\n\n    if (interval === void 0) {\n      interval = this.n;\n    }\n    interval = TimeTickGenerator.interval(t1 - t0, interval);\n    const ticks = interval.range(new DateTime(t0, this.zone), new DateTime(t1 + 1, this.zone));\n\n    if (this.dt < 0) {\n      ticks.reverse();\n    }\n\n    return ticks;\n  }\n\n  override format(tickValue: DateTime): string {\n    if (TimeInterval.second.floor(tickValue) < tickValue) {\n      return MILLISECOND_FORMAT.format(tickValue);\n    } else if (TimeInterval.minute.floor(tickValue) < tickValue) {\n      return SECOND_FORMAT.format(tickValue);\n    } else if (TimeInterval.hour.floor(tickValue) < tickValue) {\n      return MINUTE_FORMAT.format(tickValue);\n    } else if (TimeInterval.day.floor(tickValue) < tickValue) {\n      return HOUR_FORMAT.format(tickValue);\n    } else if (TimeInterval.month.floor(tickValue) < tickValue) {\n      if (TimeInterval.week.floor(tickValue) < tickValue) {\n        return WEEKDAY_FORMAT.format(tickValue);\n      } else {\n        return MONTHDAY_FORMAT.format(tickValue);\n      }\n    } else if (TimeInterval.year.floor(tickValue) < tickValue) {\n      return MONTH_FORMAT.format(tickValue);\n    } else {\n      return YEAR_FORMAT.format(tickValue);\n    }\n  }\n\n  /** @internal */\n  static interval(dt: number, interval: TimeInterval | number = 10): TimeInterval {\n    if (typeof interval === \"number\") {\n      const t = Math.abs(dt) / interval;\n      const duration = TIME_TICK_INTERVALS.nextKey(t);\n      if (duration === void 0) {\n        const k = TickGenerator.step(dt / YEAR, interval);\n        interval = TimeInterval.year.every(k);\n      } else if (duration > SECOND) {\n        if (t / TIME_TICK_INTERVALS.previousKey(t)! < duration / t) {\n          interval = TIME_TICK_INTERVALS.previousValue(t)!;\n        } else {\n          interval = TIME_TICK_INTERVALS.nextValue(t)!;\n        }\n      } else {\n        const k = Math.max(1, TickGenerator.step(dt, interval));\n        interval = TimeInterval.millisecond.every(k);\n      }\n    }\n    return interval;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport {Animator} from \"@swim/component\";\nimport {R2Point} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport {CanvasRenderer} from \"@swim/graphics\";\nimport {TypesetView} from \"@swim/graphics\";\nimport {TextRunView} from \"@swim/graphics\";\n\n/** @internal */\nexport const enum TickState {\n  Excluded,\n  Entering,\n  Included,\n  Leaving,\n}\n\n/** @public */\nexport type TickOrientation = \"top\" | \"right\" | \"bottom\" | \"left\";\n\n/** @public */\nexport interface TickViewObserver<D = unknown, V extends TickView<D> = TickView<D>> extends GraphicsViewObserver<V> {\n  viewWillAttachTickLabel?(labelView: GraphicsView, view: V): void;\n\n  viewDidDetachTickLabel?(labelView: GraphicsView, view: V): void;\n}\n\n/** @public */\nexport abstract class TickView<D = unknown> extends GraphicsView {\n  constructor(value: D) {\n    super();\n    this.value = value;\n    this.offset = 0;\n    this.tickState = TickState.Excluded;\n    this.preserved = true;\n  }\n\n  declare readonly observerType?: Class<TickViewObserver<D>>;\n\n  abstract readonly orientation: TickOrientation;\n\n  readonly value: D;\n\n  /** @internal */\n  readonly offset: number;\n\n  /** @internal */\n  setOffset(offset: number): void {\n    (this as Mutable<this>).offset = offset;\n  }\n\n  /** @internal */\n  readonly tickState: TickState;\n\n  @Animator({valueType: R2Point, value: R2Point.origin(), updateFlags: View.NeedsRender})\n  readonly anchor!: Animator<this, R2Point>;\n\n  @ThemeAnimator({valueType: Number, value: 1, updateFlags: View.NeedsRender})\n  readonly opacity!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickMarkColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 1, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickMarkWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 6, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickMarkLength!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 2, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickLabelPadding!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly gridLineColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 0, inherits: true, updateFlags: View.NeedsRender})\n  readonly gridLineWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  @ViewRef({\n    viewType: TextRunView,\n    viewKey: true,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachTickLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachTickLabel\", labelView, this.owner);\n    },\n    fromLike(value: GraphicsView | LikeType<GraphicsView> | string | undefined): GraphicsView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        if (view instanceof TextRunView) {\n          view.text.setState(value !== void 0 ? value : \"\");\n        }\n        return view;\n      }\n      return super.fromLike(value);\n    },\n  })\n  readonly label!: ViewRef<this, Like<GraphicsView, string | undefined>>;\n\n  /** @internal */\n  readonly preserved: boolean;\n\n  preserve(): boolean;\n  preserve(preserve: boolean): this;\n  preserve(preserve?: boolean): this | boolean {\n    if (preserve === void 0) {\n      return this.preserved;\n    } else {\n      (this as Mutable<this>).preserved = preserve;\n      return this;\n    }\n  }\n\n  fadeIn(timing?: Timing | boolean): void {\n    if (this.tickState === TickState.Excluded || this.tickState === TickState.Leaving) {\n      this.opacity.set(1, timing);\n      (this as Mutable<this>).tickState = TickState.Entering;\n    }\n  }\n\n  fadeOut(timing?: Timing | boolean): void {\n    if (this.tickState === TickState.Entering || this.tickState === TickState.Included) {\n      this.opacity.set(0, timing);\n      (this as Mutable<this>).tickState = TickState.Leaving;\n    }\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      this.layoutLabel(labelView);\n    }\n  }\n\n  /** @internal */\n  private static globalAlpha: number = NaN;\n\n  protected override willRender(): void {\n    super.willRender();\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      // save\n      TickView.globalAlpha = context.globalAlpha;\n      context.globalAlpha = this.opacity.getValue();\n    }\n  }\n\n  protected override onRender(): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderTick(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected override didRender(): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      // restore\n      context.globalAlpha = TickView.globalAlpha;\n      TickView.globalAlpha = NaN;\n    }\n    super.didRender();\n  }\n\n  protected abstract layoutLabel(labelView: GraphicsView): void;\n\n  protected abstract renderTick(context: PaintingContext, frame: R2Box): void;\n\n  static top<D>(value: D): TopTickView<D> {\n    return new TopTickView(value);\n  }\n\n  static right<D>(value: D): RightTickView<D> {\n    return new RightTickView(value);\n  }\n\n  static bottom<D>(value: D): BottomTickView<D> {\n    return new BottomTickView(value);\n  }\n\n  static left<D>(value: D): LeftTickView<D> {\n    return new LeftTickView(value);\n  }\n\n  static from<D>(value: D, orientation: TickOrientation): TickView<D> {\n    if (orientation === \"top\") {\n      return this.top(value);\n    } else if (orientation === \"right\") {\n      return this.right(value);\n    } else if (orientation === \"bottom\") {\n      return this.bottom(value);\n    } else if (orientation === \"left\") {\n      return this.left(value);\n    } else {\n      throw new TypeError(orientation);\n    }\n  }\n}\n\n/** @public */\nexport class TopTickView<X = unknown> extends TickView<X> {\n  constructor(value: X) {\n    super(value);\n  }\n\n  override get orientation(): TickOrientation {\n    return \"top\";\n  }\n\n  protected override layoutLabel(labelView: GraphicsView): void {\n    const anchor = this.anchor.getValue();\n    const x = Math.round(anchor.x);\n    const y0 = Math.round(anchor.y);\n    const y1 = y0 - this.tickMarkLength.getValue();\n    const y2 = y1 - this.tickLabelPadding.getValue();\n\n    if (TypesetView[Symbol.hasInstance](labelView)) {\n      labelView.setIntrinsic({\n        textAlign: \"center\",\n        textBaseline: \"bottom\",\n        textOrigin: new R2Point(x, y2),\n      });\n    }\n  }\n\n  protected override renderTick(context: PaintingContext, frame: R2Box): void {\n    const anchor = this.anchor.getValue();\n    const x = Math.round(anchor.x);\n    const y0 = Math.round(anchor.y);\n    const tickMarkLength = this.tickMarkLength.getValue();\n    const y1 = y0 - tickMarkLength;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const tickMarkColor = this.tickMarkColor.value;\n    const tickMarkWidth = this.tickMarkWidth.getValue();\n    if (tickMarkColor !== null && tickMarkWidth !== 0 && tickMarkLength !== 0) {\n      context.beginPath();\n      context.lineWidth = tickMarkWidth;\n      context.strokeStyle = tickMarkColor.toString();\n      context.moveTo(x, y0);\n      context.lineTo(x, y1);\n      context.stroke();\n    }\n\n    const gridLineColor = this.gridLineColor.value;\n    const gridLineWidth = this.gridLineWidth.getValue();\n    if (gridLineColor !== null && gridLineWidth !== 0 && frame.xMin < x && x < frame.xMax) {\n      context.beginPath();\n      context.lineWidth = gridLineWidth;\n      context.strokeStyle = gridLineColor.toString();\n      context.moveTo(x, y0);\n      context.lineTo(x, frame.yMax);\n      context.stroke();\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n\n/** @public */\nexport class RightTickView<Y = unknown> extends TickView<Y> {\n  constructor(value: Y) {\n    super(value);\n  }\n\n  override get orientation(): TickOrientation {\n    return \"right\";\n  }\n\n  protected override layoutLabel(labelView: GraphicsView): void {\n    const anchor = this.anchor.getValue();\n    const x0 = Math.round(anchor.x);\n    const y = Math.round(anchor.y);\n    const x1 = x0 + this.tickMarkLength.getValue();\n    const x2 = x1 + this.tickLabelPadding.getValue();\n\n    if (TypesetView[Symbol.hasInstance](labelView)) {\n      labelView.setIntrinsic({\n        textAlign: \"left\",\n        textBaseline: \"middle\",\n        textOrigin: new R2Point(x2, y),\n      });\n    }\n  }\n\n  protected override renderTick(context: PaintingContext, frame: R2Box): void {\n    const anchor = this.anchor.getValue();\n    const x0 = Math.round(anchor.x);\n    const y = Math.round(anchor.y);\n    const tickMarkLength = this.tickMarkLength.getValue();\n    const x1 = x0 + tickMarkLength;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const tickMarkColor = this.tickMarkColor.value;\n    const tickMarkWidth = this.tickMarkWidth.getValue();\n    if (tickMarkColor !== null && tickMarkWidth !== 0 && tickMarkLength !== 0) {\n      context.beginPath();\n      context.lineWidth = tickMarkWidth;\n      context.strokeStyle = tickMarkColor.toString();\n      context.moveTo(x0, y);\n      context.lineTo(x1, y);\n      context.stroke();\n    }\n\n    const gridLineColor = this.gridLineColor.value;\n    const gridLineWidth = this.gridLineWidth.getValue();\n    if (gridLineColor !== null && gridLineWidth !== 0 && frame.yMin < y && y < frame.yMax) {\n      context.beginPath();\n      context.lineWidth = gridLineWidth;\n      context.strokeStyle = gridLineColor.toString();\n      context.moveTo(x0, y);\n      context.lineTo(frame.xMin, y);\n      context.stroke();\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n\n/** @public */\nexport class BottomTickView<X = unknown> extends TickView<X> {\n  constructor(value: X) {\n    super(value);\n  }\n\n  override get orientation(): TickOrientation {\n    return \"bottom\";\n  }\n\n  protected override layoutLabel(labelView: GraphicsView): void {\n    const anchor = this.anchor.getValue();\n    const x = Math.round(anchor.x);\n    const y0 = Math.round(anchor.y);\n    const y1 = y0 + this.tickMarkLength.getValue();\n    const y2 = y1 + this.tickLabelPadding.getValue();\n\n    if (TypesetView[Symbol.hasInstance](labelView)) {\n      labelView.setIntrinsic({\n        textAlign: \"center\",\n        textBaseline: \"top\",\n        textOrigin: new R2Point(x, y2),\n      });\n    }\n  }\n\n  protected override renderTick(context: PaintingContext, frame: R2Box): void {\n    const anchor = this.anchor.getValue();\n    const x = Math.round(anchor.x);\n    const y0 = Math.round(anchor.y);\n    const tickMarkLength = this.tickMarkLength.getValue();\n    const y1 = y0 + tickMarkLength;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const tickMarkColor = this.tickMarkColor.value;\n    const tickMarkWidth = this.tickMarkWidth.getValue();\n    if (tickMarkColor !== null && tickMarkWidth !== 0 && tickMarkLength !== 0) {\n      context.beginPath();\n      context.lineWidth = tickMarkWidth;\n      context.strokeStyle = tickMarkColor.toString();\n      context.moveTo(x, y0);\n      context.lineTo(x, y1);\n      context.stroke();\n    }\n\n    const gridLineColor = this.gridLineColor.value;\n    const gridLineWidth = this.gridLineWidth.getValue();\n    if (gridLineColor !== null && gridLineWidth !== 0 && frame.xMin < x && x < frame.xMax) {\n      context.beginPath();\n      context.lineWidth = gridLineWidth;\n      context.strokeStyle = gridLineColor.toString();\n      context.moveTo(x, y0);\n      context.lineTo(x, frame.yMin);\n      context.stroke();\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n\n/** @public */\nexport class LeftTickView<Y = unknown> extends TickView<Y> {\n  constructor(value: Y) {\n    super(value);\n  }\n\n  override get orientation(): TickOrientation {\n    return \"left\";\n  }\n\n  protected override layoutLabel(labelView: GraphicsView): void {\n    const anchor = this.anchor.getValue();\n    const x0 = Math.round(anchor.x);\n    const y = Math.round(anchor.y);\n    const x1 = x0 - this.tickMarkLength.getValue();\n    const x2 = x1 - this.tickLabelPadding.getValue();\n\n    if (TypesetView[Symbol.hasInstance](labelView)) {\n      labelView.setIntrinsic({\n        textAlign: \"right\",\n        textBaseline: \"middle\",\n        textOrigin: new R2Point(x2, y),\n      });\n    }\n  }\n\n  protected override renderTick(context: PaintingContext, frame: R2Box): void {\n    const anchor = this.anchor.getValue();\n    const x0 = Math.round(anchor.x);\n    const y = Math.round(anchor.y);\n    const tickMarkLength = this.tickMarkLength.getValue();\n    const x1 = x0 - tickMarkLength;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const tickMarkColor = this.tickMarkColor.value;\n    const tickMarkWidth = this.tickMarkWidth.getValue();\n    if (tickMarkColor !== null && tickMarkWidth !== 0 && tickMarkLength !== 0) {\n      context.beginPath();\n      context.strokeStyle = tickMarkColor.toString();\n      context.lineWidth = tickMarkWidth;\n      context.moveTo(x0, y);\n      context.lineTo(x1, y);\n      context.stroke();\n    }\n\n    const gridLineColor = this.gridLineColor.value;\n    const gridLineWidth = this.gridLineWidth.getValue();\n    if (gridLineColor !== null && gridLineWidth !== 0 && frame.yMin < y && y < frame.yMax) {\n      context.beginPath();\n      context.lineWidth = gridLineWidth;\n      context.strokeStyle = gridLineColor.toString();\n      context.moveTo(x0, y);\n      context.lineTo(frame.xMax, y);\n      context.stroke();\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Easing} from \"@swim/util\";\nimport type {ContinuousScale} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {BTree} from \"@swim/collections\";\nimport {R2Point} from \"@swim/math\";\nimport type {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsViewObserver} from \"@swim/graphics\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {PaintingRenderer} from \"@swim/graphics\";\nimport {ContinuousScaleAnimator} from \"./ContinuousScaleAnimator\";\nimport {TickView} from \"./TickView\";\nimport {TickGenerator} from \"./TickGenerator\";\n\n/** @public */\nexport type AxisOrientation = \"top\" | \"right\" | \"bottom\" | \"left\";\n\n/** @public */\nexport interface AxisViewObserver<D = unknown, V extends AxisView<D> = AxisView<D>> extends GraphicsViewObserver<V> {\n  viewWillAttachTick?(tickView: TickView<D>, targetView: View | null, view: V): void;\n\n  viewDidDetachTick?(tickView: TickView<D>, view: V): void;\n\n  createTickLabel?(tickValue: D, tickView: TickView<D>, view: V): GraphicsView | string | null;\n\n  formatTickLabel?(tickLabel: string, tickView: TickView<D>, view: V): string | undefined;\n}\n\n/** @public */\nexport abstract class AxisView<D = unknown> extends GraphicsView {\n  constructor() {\n    super();\n    this.tickViews = new BTree();\n  }\n\n  declare readonly observerType?: Class<AxisViewObserver<D>>;\n\n  abstract readonly orientation: AxisOrientation;\n\n  abstract readonly scale: ContinuousScaleAnimator<this, D, number>;\n\n  /** @internal */\n  readonly tickViews!: BTree<D, TickView<D>>;\n\n  getTick(value: D): TickView<D> | null {\n    const tickView = this.tickViews.get(value);\n    return tickView !== void 0 ? tickView : null;\n  }\n\n  insertTick(value: D): TickView<D> | null {\n    const tickView = this.createTickView(value);\n    if (tickView !== null) {\n      return this.insertChild(tickView, null);\n    }\n    return tickView;\n  }\n\n  removeTick(value: D): TickView<D> | null {\n    const tickView = this.getTick(value);\n    if (tickView !== null) {\n      tickView.remove();\n    }\n    return tickView;\n  }\n\n  @Property({valueType: TickGenerator, value: true})\n  readonly tickGenerator!: Property<this, TickGenerator<D> | true | null>;\n\n  @ThemeAnimator({valueType: R2Point, value: R2Point.origin(), updateFlags: View.NeedsLayout | View.NeedsRender})\n  readonly origin!: ThemeAnimator<this, R2Point>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly borderColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 1, inherits: true, updateFlags: View.NeedsRender})\n  readonly borderWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 6, inherits: true, updateFlags: View.NeedsRender})\n  readonly borderSerif!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 80, updateFlags: View.NeedsRender})\n  readonly tickMarkSpacing!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickMarkColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 1, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickMarkWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 6, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickMarkLength!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 2, inherits: true, updateFlags: View.NeedsRender})\n  readonly tickLabelPadding!: ThemeAnimator<this, number>;\n\n  @Property({\n    valueType: Timing,\n    inherits: true,\n    initValue(): Timing {\n      return Easing.cubicOut.withDuration(250);\n    },\n  })\n  readonly tickTransition!: Property<this, Timing>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly gridLineColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 0, inherits: true, updateFlags: View.NeedsRender})\n  readonly gridLineWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  protected updateTicks(): void {\n    const scale = this.scale.value;\n    let tickGenerator = this.tickGenerator.value;\n    if (scale === null || tickGenerator === null) {\n      return;\n    }\n    let timing: Timing | boolean = this.tickTransition.value;\n    if (tickGenerator === true) {\n      tickGenerator = TickGenerator.fromScale(scale);\n      this.tickGenerator.set(tickGenerator);\n      timing = false;\n    }\n    this.generateTicks(tickGenerator, scale, timing);\n  }\n\n  protected generateTicks(tickGenerator: TickGenerator<D>,\n                          scale: ContinuousScale<D, number>,\n                          timing: Timing | boolean): void {\n    const tickMarkSpacing = this.tickMarkSpacing.getValue();\n    if (tickMarkSpacing !== 0) {\n      const range = scale.range;\n      const dy = Math.abs(range[1] - range[0]);\n      const n = Math.max(1, Math.floor(dy / tickMarkSpacing));\n      tickGenerator.count(n);\n    }\n    tickGenerator.domain(scale.domain);\n\n    const oldTicks = this.tickViews.clone();\n    const tickValues = tickGenerator.generate();\n    for (let i = 0; i < tickValues.length; i += 1) {\n      const tickValue = tickValues[i]!;\n      const oldTick = oldTicks.get(tickValue);\n      if (oldTick !== void 0) {\n        oldTicks.delete(tickValue);\n        oldTick.fadeIn(timing);\n      } else {\n        const newTick = this.createTickView(tickValue);\n        if (newTick !== null) {\n          this.appendChild(newTick);\n          newTick.opacity.setInterpolatedValue(0, 0);\n          newTick.fadeIn(timing);\n        }\n      }\n    }\n    oldTicks.forEachValue(function (oldTick: TickView<D>): void {\n      if (!oldTick.preserved) {\n        oldTick.fadeOut(timing);\n      }\n    }, this);\n  }\n\n  protected createTickView(tickValue: D): TickView<D> | null {\n    const tickView = TickView.from(tickValue, this.orientation);\n    if (tickView === null) {\n      return null;\n    }\n    const tickLabel = this.createTickLabel(tickValue, tickView);\n    if (tickLabel !== null) {\n      tickView.label.set(tickLabel);\n      tickView.preserve(false);\n    }\n    return tickView;\n  }\n\n  protected createTickLabel(tickValue: D, tickView: TickView<D>): GraphicsView | string | null {\n    let tickLabel: GraphicsView | string | null = null;\n    const observers = this.observers;\n    if (observers !== null) {\n      for (const observer of observers) {\n        if (observer.createTickLabel === void 0) {\n          continue;\n        }\n        tickLabel = observer.createTickLabel(tickValue, tickView, this);\n      }\n    }\n    if (tickLabel === void 0 || tickLabel === null) {\n      const tickGenerator = this.tickGenerator.value;\n      if (tickGenerator instanceof TickGenerator) {\n        tickLabel = tickGenerator.format(tickValue);\n      } else {\n        tickLabel = \"\" + tickValue;\n      }\n    }\n    if (typeof tickLabel === \"string\") {\n      tickLabel = this.formatTickLabel(tickLabel, tickView);\n    }\n    return tickLabel;\n  }\n\n  protected formatTickLabel(tickLabel: string, tickView: TickView<D>): string | null {\n    const observers = this.observers;\n    if (observers === null) {\n      return tickLabel;\n    }\n    for (const observer of observers) {\n      if (observer.formatTickLabel === void 0) {\n        continue;\n      }\n      const label = observer.formatTickLabel(tickLabel, tickView, this);\n      if (label !== void 0) {\n        return label;\n      }\n    }\n    return tickLabel;\n  }\n\n  protected override onInsertChild(child: View, target: View | null): void {\n    super.onInsertChild(child, target);\n    if (child instanceof TickView && this.tickViews.get(child.value) !== child) {\n      this.tickViews.set(child.value, child);\n    }\n  }\n\n  protected override onRemoveChild(child: View): void {\n    super.onRemoveChild(child);\n    if (child instanceof TickView && this.tickViews.get(child.value) === child) {\n      this.tickViews.delete(child.value);\n    }\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.scale.recohere(this.updateTime);\n    this.updateTicks();\n  }\n\n  protected override displayChild(child: View, displayFlags: ViewFlags): void {\n    if ((displayFlags & View.NeedsLayout) !== 0 && child instanceof TickView) {\n      const scale = this.scale.value;\n      if (scale !== null) {\n        this.layoutTick(child, this.origin.getValue(), this.viewFrame, scale);\n      }\n    }\n    super.displayChild(child, displayFlags);\n  }\n\n  protected abstract layoutTick(tick: TickView<D>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<D, number>): void;\n\n  protected override didRender(): void {\n    const renderer = this.renderer.value;\n    if (renderer instanceof PaintingRenderer) {\n      this.renderDomain(renderer.context, this.origin.getValue(), this.viewFrame);\n    }\n    super.didRender();\n  }\n\n  protected abstract renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void;\n}\n\n/** @public */\nexport class TopAxisView<X = unknown> extends AxisView<X> {\n  override get orientation(): AxisOrientation {\n    return \"top\";\n  }\n\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: \"xScale\",\n    updateFlags: View.NeedsLayout,\n  })\n  override readonly scale!: ContinuousScaleAnimator<this, X, number>;\n\n  protected override layoutTick(tick: TickView<X>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<X, number>): void {\n    if (tick.anchor.hasAffinity(Affinity.Intrinsic)) {\n      const offset = scale(tick.value);\n      tick.setOffset(offset);\n      tick.anchor.setIntrinsic(new R2Point(frame.xMin + offset, origin.y));\n    }\n  }\n\n  protected override renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void {\n    const borderColor = this.borderColor.value;\n    const borderWidth = this.borderWidth.getValue();\n    if (borderColor === null || borderWidth === 0) {\n      return;\n    }\n\n    const x0 = frame.xMin;\n    const x1 = frame.xMax;\n    const y = origin.y;\n    const dy = this.borderSerif.getValue();\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    context.lineWidth = borderWidth;\n    context.strokeStyle = borderColor.toString();\n    if (dy !== 0) {\n      context.moveTo(x0, y - dy);\n      context.lineTo(x0, y);\n      context.lineTo(x1, y);\n      context.lineTo(x1, y - dy);\n    } else {\n      context.moveTo(x0, y);\n      context.lineTo(x1, y);\n    }\n    context.stroke();\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n\n/** @public */\nexport class RightAxisView<Y = unknown> extends AxisView<Y> {\n  override get orientation(): AxisOrientation {\n    return \"right\";\n  }\n\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: \"yScale\",\n    updateFlags: View.NeedsLayout,\n  })\n  override readonly scale!: ContinuousScaleAnimator<this, Y, number>;\n\n  protected override layoutTick(tick: TickView<Y>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<Y, number>): void {\n    if (tick.anchor.hasAffinity(Affinity.Intrinsic)) {\n      const offset = scale(tick.value);\n      tick.setOffset(offset);\n      tick.anchor.setIntrinsic(new R2Point(origin.x, frame.yMin + offset));\n    }\n  }\n\n  protected override renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void {\n    const borderColor = this.borderColor.value;\n    const borderWidth = this.borderWidth.getValue();\n    if (borderColor === null || borderWidth === 0) {\n      return;\n    }\n\n    const x = origin.x;\n    const dx = this.borderSerif.getValue();\n    const y0 = frame.yMin;\n    const y1 = frame.yMax;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    context.lineWidth = borderWidth;\n    context.strokeStyle = borderColor.toString();\n    if (dx !== 0) {\n      context.moveTo(x + dx, y0);\n      context.lineTo(x,      y0);\n      context.lineTo(x,      y1);\n      context.lineTo(x + dx, y1);\n    } else {\n      context.moveTo(x, y0);\n      context.lineTo(x, y1);\n    }\n    context.stroke();\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n\n/** @public */\nexport class BottomAxisView<X = unknown> extends AxisView<X> {\n  override get orientation(): AxisOrientation {\n    return \"bottom\";\n  }\n\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: \"xScale\",\n    updateFlags: View.NeedsLayout,\n  })\n  override readonly scale!: ContinuousScaleAnimator<this, X, number>;\n\n  protected override layoutTick(tick: TickView<X>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<X, number>): void {\n    if (tick.anchor.hasAffinity(Affinity.Intrinsic)) {\n      const offset = scale(tick.value);\n      tick.setOffset(offset);\n      tick.anchor.setIntrinsic(new R2Point(frame.xMin + offset, origin.y));\n    }\n  }\n\n  protected override renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void {\n    const borderColor = this.borderColor.value;\n    const borderWidth = this.borderWidth.getValue();\n    if (borderColor === null || borderWidth === 0) {\n      return;\n    }\n\n    const x0 = frame.xMin;\n    const x1 = frame.xMax;\n    const y = origin.y;\n    const dy = this.borderSerif.getValue();\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    context.lineWidth = borderWidth;\n    context.strokeStyle = borderColor.toString();\n    if (dy !== 0) {\n      context.moveTo(x0, y + dy);\n      context.lineTo(x0, y);\n      context.lineTo(x1, y);\n      context.lineTo(x1, y + dy);\n    } else {\n      context.moveTo(x0, y);\n      context.lineTo(x1, y);\n    }\n    context.stroke();\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n\n/** @public */\nexport class LeftAxisView<Y = unknown> extends AxisView<Y> {\n  override get orientation(): AxisOrientation {\n    return \"left\";\n  }\n\n  @ContinuousScaleAnimator({\n    value: null,\n    inherits: \"yScale\",\n    updateFlags: View.NeedsLayout,\n  })\n  override readonly scale!: ContinuousScaleAnimator<this, Y, number>;\n\n  protected override layoutTick(tick: TickView<Y>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<Y, number>): void {\n    if (tick.anchor.hasAffinity(Affinity.Intrinsic)) {\n      const offset = scale(tick.value);\n      tick.setOffset(offset);\n      tick.anchor.setIntrinsic(new R2Point(origin.x, frame.yMin + offset));\n    }\n  }\n\n  protected override renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void {\n    const borderColor = this.borderColor.value;\n    const borderWidth = this.borderWidth.getValue();\n    if (borderColor === null || borderWidth === 0) {\n      return;\n    }\n\n    const x = origin.x;\n    const dx = this.borderSerif.getValue();\n    const y0 = frame.yMin;\n    const y1 = frame.yMax;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    context.lineWidth = borderWidth;\n    context.strokeStyle = borderColor.toString();\n    if (dx !== 0) {\n      context.moveTo(x - dx, y0);\n      context.lineTo(x,      y0);\n      context.lineTo(x,      y1);\n      context.lineTo(x - dx, y1);\n    } else {\n      context.moveTo(x, y0);\n      context.lineTo(x, y1);\n    }\n    context.stroke();\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\n\n/** @public */\nexport interface AxisTraitObserver<D = unknown, T extends AxisTrait<D> = AxisTrait<D>> extends TraitObserver<T> {\n}\n\n/** @public */\nexport abstract class AxisTrait<D = unknown> extends Trait {\n  declare readonly observerType?: Class<AxisTraitObserver<D>>;\n}\n\n/** @public */\nexport abstract class TopAxisTrait<X = unknown> extends AxisTrait<X> {\n  declare readonly observerType?: Class<AxisTraitObserver<X, TopAxisTrait<X>>>;\n}\n\n/** @public */\nexport abstract class RightAxisTrait<Y = unknown> extends AxisTrait<Y> {\n  declare readonly observerType?: Class<AxisTraitObserver<Y, RightAxisTrait<Y>>>;\n}\n\n/** @public */\nexport abstract class BottomAxisTrait<X = unknown> extends AxisTrait<X> {\n  declare readonly observerType?: Class<AxisTraitObserver<X, BottomAxisTrait<X>>>;\n}\n\n/** @public */\nexport abstract class LeftAxisTrait<Y = unknown> extends AxisTrait<Y> {\n  declare readonly observerType?: Class<AxisTraitObserver<Y, LeftAxisTrait<Y>>>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {AxisView} from \"./AxisView\";\nimport {TopAxisView} from \"./AxisView\";\nimport {RightAxisView} from \"./AxisView\";\nimport {BottomAxisView} from \"./AxisView\";\nimport {LeftAxisView} from \"./AxisView\";\nimport {AxisTrait} from \"./AxisTrait\";\nimport {TopAxisTrait} from \"./AxisTrait\";\nimport {RightAxisTrait} from \"./AxisTrait\";\nimport {BottomAxisTrait} from \"./AxisTrait\";\nimport {LeftAxisTrait} from \"./AxisTrait\";\n\n/** @public */\nexport interface AxisControllerObserver<D = unknown, C extends AxisController<D> = AxisController<D>> extends ControllerObserver<C> {\n  controllerWillAttachAxisTrait?(axisTrait: AxisTrait<D>, controller: C): void;\n\n  controllerDidDetachAxisTrait?(axisTrait: AxisTrait<D>, controller: C): void;\n\n  controllerWillAttachAxisView?(axisView: AxisView<D>, controller: C): void;\n\n  controllerDidDetachAxisView?(axisView: AxisView<D>, controller: C): void;\n}\n\n/** @public */\nexport abstract class AxisController<D = unknown> extends Controller {\n  declare readonly observerType?: Class<AxisControllerObserver<D>>;\n\n  @TraitViewRef({\n    traitType: AxisTrait,\n    willAttachTrait(axisTrait: AxisTrait<D>): void {\n      this.owner.callObservers(\"controllerWillAttachAxisTrait\", axisTrait, this.owner);\n    },\n    didDetachTrait(axisTrait: AxisTrait<D>): void {\n      this.owner.callObservers(\"controllerDidDetachAxisTrait\", axisTrait, this.owner);\n    },\n    viewType: AxisView,\n    willAttachView(axisView: AxisView<D>): void {\n      this.owner.callObservers(\"controllerWillAttachAxisView\", axisView, this.owner);\n    },\n    didDetachView(axisView: AxisView<D>): void {\n      this.owner.callObservers(\"controllerDidDetachAxisView\", axisView, this.owner);\n    },\n  })\n  readonly axis!: TraitViewRef<this, AxisTrait<D>, AxisView<D>>;\n}\n\n/** @public */\nexport class TopAxisController<X = unknown> extends AxisController<X> {\n  @TraitViewRef({\n    extends: true,\n    traitType: TopAxisTrait,\n    viewType: TopAxisView,\n  })\n  override readonly axis!: TraitViewRef<this, TopAxisTrait<X>, TopAxisView<X>> & AxisController<X>[\"axis\"];\n}\n\n/** @public */\nexport class RightAxisController<Y = unknown> extends AxisController<Y> {\n  @TraitViewRef({\n    extends: true,\n    traitType: RightAxisTrait,\n    viewType: RightAxisView,\n  })\n  override readonly axis!: TraitViewRef<this, RightAxisTrait<Y>, RightAxisView<Y>> & AxisController<Y>[\"axis\"];\n}\n\n/** @public */\nexport class BottomAxisController<X = unknown> extends AxisController<X> {\n  @TraitViewRef({\n    extends: true,\n    traitType: BottomAxisTrait,\n    viewType: BottomAxisView,\n  })\n  override readonly axis!: TraitViewRef<this, BottomAxisTrait<X>, BottomAxisView<X>> & AxisController<X>[\"axis\"];\n}\n\n/** @public */\nexport class LeftAxisController<Y = unknown> extends AxisController<Y> {\n  @TraitViewRef({\n    extends: true,\n    traitType: LeftAxisTrait,\n    viewType: LeftAxisView,\n  })\n  override readonly axis!: TraitViewRef<this, LeftAxisTrait<Y>, LeftAxisView<Y>> & AxisController<Y>[\"axis\"];\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Range} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Easing} from \"@swim/util\";\nimport {LinearRange} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Point} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {Font} from \"@swim/style\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {ScaledViewObserver} from \"./ScaledView\";\nimport {ScaledView} from \"./ScaledView\";\nimport {GraphView} from \"./GraphView\";\nimport type {AxisView} from \"./AxisView\";\nimport {TopAxisView} from \"./AxisView\";\nimport {RightAxisView} from \"./AxisView\";\nimport {BottomAxisView} from \"./AxisView\";\nimport {LeftAxisView} from \"./AxisView\";\n\n/** @public */\nexport interface ChartViewObserver<X = unknown, Y = unknown, V extends ChartView<X, Y> = ChartView<X, Y>> extends ScaledViewObserver<X, Y, V> {\n  viewWillAttachGraph?(graphView: GraphView<X, Y>, view: V): void;\n\n  viewDidDetachGraph?(graphView: GraphView<X, Y>, view: V): void;\n\n  viewWillAttachTopAxis?(topAxisView: AxisView<X>, view: V): void;\n\n  viewDidDetachTopAxis?(topAxisView: AxisView<X>, view: V): void;\n\n  viewWillAttachRightAxis?(rightAxisView: AxisView<Y> , view: V): void;\n\n  viewDidDetachRightAxis?(rightAxisView: AxisView<Y>, view: V): void;\n\n  viewWillAttachBottomAxis?(bottomAxisView: AxisView<X>, view: V): void;\n\n  viewDidDetachBottomAxis?(bottomAxisView: AxisView<X>, view: V): void;\n\n  viewWillAttachLeftAxis?(leftAxisView: AxisView<Y>, view: V): void;\n\n  viewDidDetachLeftAxis?(leftAxisView: AxisView<Y>, view: V): void;\n}\n\n/** @public */\nexport class ChartView<X = unknown, Y = unknown> extends ScaledView<X, Y> {\n  declare readonly observerType?: Class<ChartViewObserver<X, Y>>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(20)})\n  readonly gutterTop!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(40)})\n  readonly gutterRight!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(20)})\n  readonly gutterBottom!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(40)})\n  readonly gutterLeft!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.tickColor})\n  readonly borderColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 1})\n  readonly borderWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 6})\n  readonly borderSerif!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.tickColor})\n  readonly tickMarkColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 1})\n  readonly tickMarkWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 6})\n  readonly tickMarkLength!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 2})\n  readonly tickLabelPadding!: ThemeAnimator<this, number>;\n\n  @Property({\n    valueType: Timing,\n    initValue(): Timing {\n      return Easing.cubicOut.withDuration(250);\n    },\n  })\n  readonly tickTransition!: Property<this, Timing>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.gridColor})\n  readonly gridLineColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Number, value: 0})\n  readonly gridLineWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null>;\n\n  @ThemeAnimator({valueType: Color, value: null, look: Look.tickColor})\n  readonly textColor!: ThemeAnimator<this, Color | null>;\n\n  override xRange(): Range<number> | null {\n    const frame = this.viewFrame;\n    const gutterLeft = this.gutterLeft.getValue().pxValue(frame.width);\n    const gutterRight = this.gutterRight.getValue().pxValue(frame.width);\n    const xRangePadding = this.xRangePadding.value;\n    const xRangeMin = xRangePadding[0];\n    const xRangeMax = this.viewFrame.width - gutterRight - gutterLeft - xRangePadding[1];\n    return LinearRange(xRangeMin, xRangeMax);\n  }\n\n  override yRange(): Range<number> | null {\n    const frame = this.viewFrame;\n    const gutterTop = this.gutterTop.getValue().pxValue(frame.height);\n    const gutterBottom = this.gutterBottom.getValue().pxValue(frame.height);\n    const yRangePadding = this.yRangePadding.value;\n    const yRangeMin = yRangePadding[0];\n    const yRangeMax = this.viewFrame.height - gutterBottom - gutterTop - yRangePadding[1];\n    return LinearRange(yRangeMax, yRangeMin);\n  }\n\n  @ViewRef({\n    viewType: GraphView,\n    viewKey: true,\n    binds: true,\n    willAttachView(graphView: GraphView<X, Y>): void {\n      this.owner.callObservers(\"viewWillAttachGraph\", graphView, this.owner);\n    },\n    didDetachView(graphView: GraphView<X, Y>): void {\n      this.owner.callObservers(\"viewDidDetachGraph\", graphView, this.owner);\n    },\n    detectView(view: View): GraphView<X, Y> | null {\n      return view instanceof GraphView ? view : null;\n    },\n  })\n  readonly graph!: ViewRef<this, GraphView<X, Y>>;\n\n  @ViewRef({\n    viewType: TopAxisView,\n    viewKey: true,\n    binds: true,\n    willAttachView(topAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"viewWillAttachTopAxis\", topAxisView, this.owner);\n    },\n    didDetachView(topAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"viewDidDetachTopAxis\", topAxisView, this.owner);\n    },\n    detectView(view: View): AxisView<X> | null {\n      return view instanceof TopAxisView ? view : null;\n    },\n  })\n  readonly topAxis!: ViewRef<this, AxisView<X>>;\n\n  @ViewRef({\n    viewType: RightAxisView,\n    viewKey: true,\n    binds: true,\n    willAttachView(rightAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"viewWillAttachRightAxis\", rightAxisView, this.owner);\n    },\n    didDetachView(rightAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"viewDidDetachRightAxis\", rightAxisView, this.owner);\n    },\n    detectView(view: View): AxisView<Y> | null {\n      return view instanceof RightAxisView ? view : null;\n    },\n  })\n  readonly rightAxis!: ViewRef<this, AxisView<Y>>;\n\n  @ViewRef({\n    viewType: BottomAxisView,\n    viewKey: true,\n    binds: true,\n    willAttachView(bottomAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"viewWillAttachBottomAxis\", bottomAxisView, this.owner);\n    },\n    didDetachView(bottomAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"viewDidDetachBottomAxis\", bottomAxisView, this.owner);\n    },\n    detectView(view: View): AxisView<X> | null {\n      return view instanceof BottomAxisView ? view : null;\n    },\n  })\n  readonly bottomAxis!: ViewRef<this, AxisView<X>>;\n\n  @ViewRef({\n    viewType: LeftAxisView,\n    viewKey: true,\n    binds: true,\n    willAttachView(leftAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"viewWillAttachLeftAxis\", leftAxisView, this.owner);\n    },\n    didDetachView(leftAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"viewDidDetachLeftAxis\", leftAxisView, this.owner);\n    },\n    detectView(view: View): AxisView<Y> | null {\n      return view instanceof LeftAxisView ? view : null;\n    },\n  })\n  readonly leftAxis!: ViewRef<this, AxisView<Y>>;\n\n  protected override updateScales(): void {\n    this.layoutChart(this.viewFrame);\n    super.updateScales();\n  }\n\n  protected layoutChart(frame: R2Box): void {\n    const gutterTop = this.gutterTop.getValue().pxValue(frame.height);\n    const gutterRight = this.gutterRight.getValue().pxValue(frame.width);\n    const gutterBottom = this.gutterBottom.getValue().pxValue(frame.height);\n    const gutterLeft = this.gutterLeft.getValue().pxValue(frame.width);\n\n    const graphTop = frame.yMin + gutterTop;\n    const graphRight = frame.xMax - gutterRight;\n    const graphBottom = frame.yMax - gutterBottom;\n    const graphLeft = frame.xMin + gutterLeft;\n\n    const topAxisView = this.topAxis.view;\n    if (topAxisView !== null) {\n      topAxisView.setViewFrame(new R2Box(graphLeft, frame.yMin, graphRight, graphBottom));\n      topAxisView.origin.setIntrinsic(new R2Point(graphLeft, graphTop));\n    }\n    const rightAxisView = this.rightAxis.view;\n    if (rightAxisView !== null) {\n      rightAxisView.setViewFrame(new R2Box(graphLeft, graphTop, frame.xMax, graphBottom));\n      rightAxisView.origin.setIntrinsic(new R2Point(Math.max(graphLeft, graphRight), graphBottom));\n    }\n    const bottomAxisView = this.bottomAxis.view;\n    if (bottomAxisView !== null) {\n      bottomAxisView.setViewFrame(new R2Box(graphLeft, graphTop, graphRight, frame.yMax));\n      bottomAxisView.origin.setIntrinsic(new R2Point(graphLeft, Math.max(graphTop, graphBottom)));\n    }\n    const leftAxisView = this.leftAxis.view;\n    if (leftAxisView !== null) {\n      leftAxisView.setViewFrame(new R2Box(frame.xMin, graphTop, graphRight, graphBottom));\n      leftAxisView.origin.setIntrinsic(new R2Point(graphLeft, graphBottom));\n    }\n\n    const graphView = this.graph.view;\n    if (graphView !== null) {\n      graphView.setViewFrame(new R2Box(graphLeft, graphTop, graphRight, graphBottom));\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitRef} from \"@swim/model\";\nimport {GraphTrait} from \"./GraphTrait\";\nimport type {AxisTrait} from \"./AxisTrait\";\nimport {TopAxisTrait} from \"./AxisTrait\";\nimport {RightAxisTrait} from \"./AxisTrait\";\nimport {BottomAxisTrait} from \"./AxisTrait\";\nimport {LeftAxisTrait} from \"./AxisTrait\";\n\n/** @public */\nexport interface ChartTraitObserver<X = unknown, Y = unknown, T extends ChartTrait<X, Y> = ChartTrait<X, Y>> extends TraitObserver<T> {\n  traitWillAttachGraph?(graphTrait: GraphTrait<X, Y>, trait: T): void;\n\n  traitDidDetachGraph?(graphTrait: GraphTrait<X, Y>, trait: T): void;\n\n  traitWillAttachTopAxis?(topAxisTrait: AxisTrait<X>, trait: T): void;\n\n  traitDidDetachTopAxis?(topAxisTrait: AxisTrait<X>, trait: T): void;\n\n  traitWillAttachRightAxis?(rightAxisTrait: AxisTrait<Y>, trait: T): void;\n\n  traitDidDetachRightAxis?(rightAxisTrait: AxisTrait<Y>, trait: T): void;\n\n  traitWillAttachBottomAxis?(bottomAxisTrait: AxisTrait<X>, trait: T): void;\n\n  traitDidDetachBottomAxis?(bottomAxisTrait: AxisTrait<X>, trait: T): void;\n\n  traitWillAttachLeftAxis?(leftAxisTrait: AxisTrait<Y>, trait: T): void;\n\n  traitDidDetachLeftAxis?(leftAxisTrait: AxisTrait<Y>, trait: T): void;\n}\n\n/** @public */\nexport class ChartTrait<X = unknown, Y = unknown> extends Trait {\n  declare readonly observerType?: Class<ChartTraitObserver<X, Y>>;\n\n  @TraitRef({\n    traitType: GraphTrait,\n    binds: true,\n    willAttachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.callObservers(\"traitWillAttachGraph\", graphTrait, this.owner);\n    },\n    didAttachTrait(graphTrait: GraphTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        graphTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(graphTrait: GraphTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        graphTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.callObservers(\"traitDidDetachGraph\", graphTrait, this.owner);\n    },\n    detectModel(model: Model): GraphTrait<X, Y> | null {\n      return model.getTrait(GraphTrait) as GraphTrait<X, Y>;\n    },\n    detectTrait(trait: Trait): GraphTrait<X, Y> | null {\n      return trait instanceof GraphTrait ? trait : null;\n    },\n  })\n  readonly graph!: TraitRef<this, GraphTrait<X, Y>>;\n\n  @TraitRef({\n    traitType: TopAxisTrait,\n    binds: true,\n    willAttachTrait(topAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"traitWillAttachTopAxis\", topAxisTrait, this.owner);\n    },\n    didAttachTrait(topAxisTrait: AxisTrait<X>): void {\n      if (this.owner.consuming) {\n        topAxisTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(topAxisTrait: AxisTrait<X>): void {\n      if (this.owner.consuming) {\n        topAxisTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(topAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"traitDidDetachTopAxis\", topAxisTrait, this.owner);\n    },\n    detectModel(model: Model): AxisTrait<X> | null {\n      return model.getTrait(TopAxisTrait);\n    },\n    detectTrait(trait: Trait): AxisTrait<X> | null {\n      return trait instanceof TopAxisTrait ? trait : null;\n    },\n  })\n  readonly topAxis!: TraitRef<this, AxisTrait<X>>;\n\n  @TraitRef({\n    traitType: RightAxisTrait,\n    binds: true,\n    willAttachTrait(rightAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"traitWillAttachRightAxis\", rightAxisTrait, this.owner);\n    },\n    didAttachTrait(rightAxisTrait: AxisTrait<Y>): void {\n      if (this.owner.consuming) {\n        rightAxisTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(rightAxisTrait: AxisTrait<Y>): void {\n      if (this.owner.consuming) {\n        rightAxisTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(rightAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"traitDidDetachRightAxis\", rightAxisTrait, this.owner);\n    },\n    detectModel(model: Model): AxisTrait<Y> | null {\n      return model.getTrait(RightAxisTrait);\n    },\n    detectTrait(trait: Trait): AxisTrait<Y> | null {\n      return trait instanceof RightAxisTrait ? trait : null;\n    },\n  })\n  readonly rightAxis!: TraitRef<this, AxisTrait<Y>>;\n\n  @TraitRef({\n    traitType: BottomAxisTrait,\n    binds: true,\n    willAttachTrait(bottomAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"traitWillAttachBottomAxis\", bottomAxisTrait, this.owner);\n    },\n    didAttachTrait(bottomAxisTrait: AxisTrait<X>): void {\n      if (this.owner.consuming) {\n        bottomAxisTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(bottomAxisTrait: AxisTrait<X>): void {\n      if (this.owner.consuming) {\n        bottomAxisTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(bottomAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"traitDidDetachBottomAxis\", bottomAxisTrait, this.owner);\n    },\n    detectModel(model: Model): AxisTrait<X> | null {\n      return model.getTrait(BottomAxisTrait);\n    },\n    detectTrait(trait: Trait): AxisTrait<X> | null {\n      return trait instanceof BottomAxisTrait ? trait : null;\n    },\n  })\n  readonly bottomAxis!: TraitRef<this, AxisTrait<X>>;\n\n  @TraitRef({\n    traitType: LeftAxisTrait,\n    binds: true,\n    willAttachTrait(leftAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"traitWillAttachLeftAxis\", leftAxisTrait, this.owner);\n    },\n    didAttachTrait(leftAxisTrait: AxisTrait<Y>): void {\n      if (this.owner.consuming) {\n        leftAxisTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(leftAxisTrait: AxisTrait<Y>): void {\n      if (this.owner.consuming) {\n        leftAxisTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(leftAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"traitDidDetachLeftAxis\", leftAxisTrait, this.owner);\n    },\n    detectModel(model: Model): AxisTrait<Y> | null {\n      return model.getTrait(LeftAxisTrait);\n    },\n    detectTrait(trait: Trait): AxisTrait<Y> | null {\n      return trait instanceof LeftAxisTrait ? trait : null;\n    },\n  })\n  readonly leftAxis!: TraitRef<this, AxisTrait<Y>>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    const graphTrait = this.graph.trait;\n    if (graphTrait !== null) {\n      graphTrait.consume(this);\n    }\n    const topAxisTrair = this.topAxis.trait;\n    if (topAxisTrair !== null) {\n      topAxisTrair.consume(this);\n    }\n    const rightAxisTrait = this.rightAxis.trait;\n    if (rightAxisTrait !== null) {\n      rightAxisTrait.consume(this);\n    }\n    const bottomAxisTrait = this.bottomAxis.trait;\n    if (bottomAxisTrait !== null) {\n      bottomAxisTrait.consume(this);\n    }\n    const leftAxisTrait = this.leftAxis.trait;\n    if (leftAxisTrait !== null) {\n      leftAxisTrait.consume(this);\n    }\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    const graphTrait = this.graph.trait;\n    if (graphTrait !== null) {\n      graphTrait.unconsume(this);\n    }\n    const topAxisTrair = this.topAxis.trait;\n    if (topAxisTrair !== null) {\n      topAxisTrair.unconsume(this);\n    }\n    const rightAxisTrait = this.rightAxis.trait;\n    if (rightAxisTrait !== null) {\n      rightAxisTrait.unconsume(this);\n    }\n    const bottomAxisTrait = this.bottomAxis.trait;\n    if (bottomAxisTrait !== null) {\n      bottomAxisTrait.unconsume(this);\n    }\n    const leftAxisTrait = this.leftAxis.trait;\n    if (leftAxisTrait !== null) {\n      leftAxisTrait.unconsume(this);\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {View} from \"@swim/view\";\nimport type {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport type {GraphControllerObserver} from \"./GraphController\";\nimport type {GraphView} from \"./GraphView\";\nimport type {GraphTrait} from \"./GraphTrait\";\nimport {GraphController} from \"./GraphController\";\nimport type {AxisView} from \"./AxisView\";\nimport type {AxisTrait} from \"./AxisTrait\";\nimport type {AxisController} from \"./AxisController\";\nimport {TopAxisController} from \"./AxisController\";\nimport {RightAxisController} from \"./AxisController\";\nimport {BottomAxisController} from \"./AxisController\";\nimport {LeftAxisController} from \"./AxisController\";\nimport {ChartView} from \"./ChartView\";\nimport {ChartTrait} from \"./ChartTrait\";\n\n/** @public */\nexport interface ChartControllerObserver<X = unknown, Y = unknown, C extends ChartController<X, Y> = ChartController<X, Y>> extends GraphControllerObserver<X, Y, C> {\n  controllerWillAttachChartTrait?(chartTrait: ChartTrait<X, Y>, controller: C): void;\n\n  controllerDidDetachChartTrait?(chartTrait: ChartTrait<X, Y>, controller: C): void;\n\n  controllerWillAttachChartView?(chartView: ChartView<X, Y>, controller: C): void;\n\n  controllerDidDetachChartView?(chartView: ChartView<X, Y>, controller: C): void;\n\n  controllerWillAttachTopAxis?(topAxisController: AxisController<X>, controller: C): void;\n\n  controllerDidDetachTopAxis?(topAxisController: AxisController<X>, controller: C): void;\n\n  controllerWillAttachTopAxisTrait?(topAxisTrait: AxisTrait<X>, controller: C): void;\n\n  controllerDidDetachTopAxisTrait?(topAxisTrait: AxisTrait<X>, controller: C): void;\n\n  controllerWillAttachTopAxisView?(topAxisView: AxisView<X>, controller: C): void;\n\n  controllerDidDetachTopAxisView?(topAxisView: AxisView<X>, controller: C): void;\n\n  controllerWillAttachRightAxis?(rightAxisController: AxisController<Y>, controller: C): void;\n\n  controllerDidDetachRightAxis?(rightAxisController: AxisController<Y>, controller: C): void;\n\n  controllerWillAttachRightAxisTrait?(rightAxisTrait: AxisTrait<Y>, controller: C): void;\n\n  controllerDidDetachRightAxisTrait?(rightAxisTrait: AxisTrait<Y>, controller: C): void;\n\n  controllerWillAttachRightAxisView?(rightAxisView: AxisView<Y>, controller: C): void;\n\n  controllerDidDetachRightAxisView?(rightAxisView: AxisView<Y>, controller: C): void;\n\n  controllerWillAttachBottomAxis?(bottomAxisController: AxisController<X>, controller: C): void;\n\n  controllerDidDetachBottomAxis?(bottomAxisController: AxisController<X>, controller: C): void;\n\n  controllerWillAttachBottomAxisTrait?(bottomAxisTrait: AxisTrait<X>, controller: C): void;\n\n  controllerDidDetachBottomAxisTrait?(bottomAxisTrait: AxisTrait<X>, controller: C): void;\n\n  controllerWillAttachBottomAxisView?(bottomAxisView: AxisView<X>, controller: C): void;\n\n  controllerDidDetachBottomAxisView?(bottomAxisView: AxisView<X>, controller: C): void;\n\n  controllerWillAttachLeftAxis?(leftAxisController: AxisController<Y>, controller: C): void;\n\n  controllerDidDetachLeftAxis?(leftAxisController: AxisController<Y>, controller: C): void;\n\n  controllerWillAttachLeftAxisTrait?(leftAxisTrait: AxisTrait<Y>, controller: C): void;\n\n  controllerDidDetachLeftAxisTrait?(leftAxisTrait: AxisTrait<Y>, controller: C): void;\n\n  controllerWillAttachLeftAxisView?(leftAxisView: AxisView<Y>, controller: C): void;\n\n  controllerDidDetachLeftAxisView?(leftAxisView: AxisView<Y>, controller: C): void;\n}\n\n/** @public */\nexport class ChartController<X = unknown, Y = unknown> extends GraphController<X, Y> {\n  declare readonly observerType?: Class<ChartControllerObserver<X, Y>>;\n\n  @TraitViewRef({\n    traitType: ChartTrait,\n    observesTrait: true,\n    initTrait(chartTrait: ChartTrait<X, Y>): void {\n      this.owner.graph.setTrait(chartTrait.graph.trait);\n      const topAxisTrait = chartTrait.topAxis.trait;\n      if (topAxisTrait !== null) {\n        this.owner.topAxis.setTrait(topAxisTrait);\n      }\n      const rightAxisTrait = chartTrait.rightAxis.trait;\n      if (rightAxisTrait !== null) {\n        this.owner.rightAxis.setTrait(rightAxisTrait);\n      }\n      const bottomAxisTrait = chartTrait.bottomAxis.trait;\n      if (bottomAxisTrait !== null) {\n        this.owner.bottomAxis.setTrait(bottomAxisTrait);\n      }\n      const leftAxisTrait = chartTrait.leftAxis.trait;\n      if (leftAxisTrait !== null) {\n        this.owner.leftAxis.setTrait(leftAxisTrait);\n      }\n    },\n    deinitTrait(chartTrait: ChartTrait<X, Y>): void {\n      const leftAxisTrait = chartTrait.leftAxis.trait;\n      if (leftAxisTrait !== null) {\n        this.owner.leftAxis.deleteTrait(leftAxisTrait);\n      }\n      const bottomAxisTrait = chartTrait.bottomAxis.trait;\n      if (bottomAxisTrait !== null) {\n        this.owner.bottomAxis.deleteTrait(bottomAxisTrait);\n      }\n      const rightAxisTrait = chartTrait.rightAxis.trait;\n      if (rightAxisTrait !== null) {\n        this.owner.rightAxis.deleteTrait(rightAxisTrait);\n      }\n      const topAxisTrait = chartTrait.topAxis.trait;\n      if (topAxisTrait !== null) {\n        this.owner.topAxis.deleteTrait(topAxisTrait);\n      }\n      this.owner.graph.setTrait(null);\n    },\n    willAttachTrait(newChartTrait: ChartTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachChartTrait\", newChartTrait, this.owner);\n    },\n    didDetachTrait(newChartTrait: ChartTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachChartTrait\", newChartTrait, this.owner);\n    },\n    traitWillAttachTopAxis(topAxisTrait: AxisTrait<unknown>): void {\n      this.owner.topAxis.setTrait(topAxisTrait);\n    },\n    traitDidDetachTopAxis(topAxisTrait: AxisTrait<unknown>): void {\n      this.owner.topAxis.setTrait(null);\n    },\n    traitWillAttachRightAxis(rightAxisTrait: AxisTrait<unknown>): void {\n      this.owner.rightAxis.setTrait(rightAxisTrait);\n    },\n    traitDidDetachRightAxis(rightAxisTrait: AxisTrait<unknown>): void {\n      this.owner.rightAxis.setTrait(null);\n    },\n    traitWillAttachBottomAxis(bottomAxisTrait: AxisTrait<unknown>): void {\n      this.owner.bottomAxis.setTrait(bottomAxisTrait);\n    },\n    traitDidDetachBottomAxis(bottomAxisTrait: AxisTrait<unknown>): void {\n      this.owner.bottomAxis.setTrait(null);\n    },\n    traitWillAttachLeftAxis(leftAxisTrait: AxisTrait<unknown>): void {\n      this.owner.leftAxis.setTrait(leftAxisTrait);\n    },\n    traitDidDetachLeftAxis(leftAxisTrait: AxisTrait<unknown>): void {\n      this.owner.leftAxis.setTrait(null);\n    },\n    viewType: ChartView,\n    initView(chartView: ChartView<X, Y>): void {\n      const topAxisController = this.owner.topAxis.controller;\n      if (topAxisController !== null) {\n        topAxisController.axis.insertView(chartView);\n      }\n      const rightAxisController = this.owner.rightAxis.controller;\n      if (rightAxisController !== null) {\n        rightAxisController.axis.insertView(chartView);\n      }\n      const bottomAxisController = this.owner.bottomAxis.controller;\n      if (bottomAxisController !== null) {\n        bottomAxisController.axis.insertView(chartView);\n      }\n      const leftAxisController = this.owner.leftAxis.controller;\n      if (leftAxisController !== null) {\n        leftAxisController.axis.insertView(chartView);\n      }\n      if (this.owner.graph.view !== null || this.owner.graph.trait !== null) {\n        this.owner.graph.insertView(chartView);\n      }\n    },\n    willAttachView(chartView: ChartView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachChartView\", chartView, this.owner);\n    },\n    didDetachView(chartView: ChartView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachChartView\", chartView, this.owner);\n    },\n  })\n  readonly chart!: TraitViewRef<this, ChartTrait<X, Y>, ChartView<X, Y>> & Observes<ChartTrait<X, Y>>;\n\n  @TraitViewRef({\n    extends: true,\n    initTrait(graphTrait: GraphTrait<X, Y>): void {\n      super.initTrait(graphTrait as GraphTrait);\n      const chartView = this.owner.chart.view;\n      if (chartView !== null) {\n        this.insertView(chartView);\n      }\n    },\n    initView(graphView: GraphView<X, Y>): void {\n      super.initView(graphView as GraphView);\n      const chartView = this.owner.chart.view;\n      if (chartView !== null) {\n        this.insertView(chartView);\n      }\n    },\n    deinitView(graphView: GraphView<X, Y>): void {\n      super.deinitView(graphView as GraphView);\n      graphView.remove();\n    },\n  })\n  override readonly graph!: TraitViewRef<this, GraphTrait<X, Y>, GraphView<X, Y>> & GraphController<X, Y>[\"graph\"];\n\n  @TraitViewControllerRef({\n    controllerType: TopAxisController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.chart.view;\n    },\n    getTraitViewRef(controller: AxisController<X>): TraitViewRef<unknown, AxisTrait<X>, AxisView<X>> {\n      return controller.axis;\n    },\n    willAttachController(topAxisController: AxisController<X>): void {\n      this.owner.callObservers(\"controllerWillAttachTopAxis\", topAxisController, this.owner);\n    },\n    didAttachController(topAxisController: AxisController<X>): void {\n      const topAxisTrait = topAxisController.axis.trait;\n      if (topAxisTrait !== null) {\n        this.attachAxisTrait(topAxisTrait);\n      }\n      const topAxisView = topAxisController.axis.view;\n      if (topAxisView !== null) {\n        this.attachAxisView(topAxisView);\n      }\n    },\n    willDetachController(topAxisController: AxisController<X>): void {\n      const topAxisView = topAxisController.axis.view;\n      if (topAxisView !== null) {\n        this.detachAxisView(topAxisView);\n      }\n      const topAxisTrait = topAxisController.axis.trait;\n      if (topAxisTrait !== null) {\n        this.detachAxisTrait(topAxisTrait);\n      }\n    },\n    didDetachController(topAxisController: AxisController<X>): void {\n      this.owner.callObservers(\"controllerDidDetachTopAxis\", topAxisController, this.owner);\n    },\n    controllerWillAttachAxisTrait(topAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"controllerWillAttachTopAxisTrait\", topAxisTrait, this.owner);\n      this.attachAxisTrait(topAxisTrait);\n    },\n    controllerDidDetachAxisTrait(topAxisTrait: AxisTrait<X>): void {\n      this.detachAxisTrait(topAxisTrait);\n      this.owner.callObservers(\"controllerDidDetachTopAxisTrait\", topAxisTrait, this.owner);\n    },\n    attachAxisTrait(topAxisTrait: AxisTrait<X>): void {\n      // hook\n    },\n    detachAxisTrait(topAxisTrait: AxisTrait<X>): void {\n      // hook\n    },\n    controllerWillAttachAxisView(topAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"controllerWillAttachTopAxisView\", topAxisView, this.owner);\n      this.attachAxisView(topAxisView);\n    },\n    controllerDidDetachAxisView(topAxisView: AxisView<X>): void {\n      this.detachAxisView(topAxisView);\n      this.owner.callObservers(\"controllerDidDetachTopAxisView\", topAxisView, this.owner);\n    },\n    attachAxisView(topAxisView: AxisView<X>): void {\n      // hook\n    },\n    detachAxisView(topAxisView: AxisView<X>): void {\n      topAxisView.remove();\n    },\n    detectController(controller: Controller): AxisController<X> | null {\n      return controller instanceof TopAxisController ? controller : null;\n    },\n  })\n  readonly topAxis!: TraitViewControllerRef<this, AxisTrait<X>, AxisView<X>, AxisController<X>> & Observes<AxisController<X>> & {\n    attachAxisTrait(axisTrait: AxisTrait<X>): void,\n    detachAxisTrait(axisTrait: AxisTrait<X>): void,\n    attachAxisView(axisView: AxisView<X>): void,\n    detachAxisView(axisView: AxisView<X>): void,\n  };\n\n  @TraitViewControllerRef({\n    controllerType: RightAxisController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.chart.view;\n    },\n    getTraitViewRef(controller: AxisController<Y>): TraitViewRef<unknown, AxisTrait<Y>, AxisView<Y>> {\n      return controller.axis;\n    },\n    willAttachController(rightAxisController: AxisController<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachRightAxis\", rightAxisController, this.owner);\n    },\n    didAttachController(rightAxisController: AxisController<Y>): void {\n      const rightAxisTrait = rightAxisController.axis.trait;\n      if (rightAxisTrait !== null) {\n        this.attachAxisTrait(rightAxisTrait);\n      }\n      const rightAxisView = rightAxisController.axis.view;\n      if (rightAxisView !== null) {\n        this.attachAxisView(rightAxisView);\n      }\n    },\n    willDetachController(rightAxisController: AxisController<Y>): void {\n      const rightAxisView = rightAxisController.axis.view;\n      if (rightAxisView !== null) {\n        this.detachAxisView(rightAxisView);\n      }\n      const rightAxisTrait = rightAxisController.axis.trait;\n      if (rightAxisTrait !== null) {\n        this.detachAxisTrait(rightAxisTrait);\n      }\n    },\n    didDetachController(rightAxisController: AxisController<Y>): void {\n      this.owner.callObservers(\"controllerDidDetachRightAxis\", rightAxisController, this.owner);\n    },\n    controllerWillAttachAxisTrait(rightAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachRightAxisTrait\", rightAxisTrait, this.owner);\n      this.attachAxisTrait(rightAxisTrait);\n    },\n    controllerDidDetachAxisTrait(rightAxisTrait: AxisTrait<Y>): void {\n      this.detachAxisTrait(rightAxisTrait);\n      this.owner.callObservers(\"controllerDidDetachRightAxisTrait\", rightAxisTrait, this.owner);\n    },\n    attachAxisTrait(rightAxisTrait: AxisTrait<Y>): void {\n      // hook\n    },\n    detachAxisTrait(rightAxisTrait: AxisTrait<Y>): void {\n      // hook\n    },\n    controllerWillAttachAxisView(rightAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachRightAxisView\", rightAxisView, this.owner);\n      this.attachAxisView(rightAxisView);\n    },\n    controllerDidDetachAxisView(rightAxisView: AxisView<Y>): void {\n      this.detachAxisView(rightAxisView);\n      this.owner.callObservers(\"controllerDidDetachRightAxisView\", rightAxisView, this.owner);\n    },\n    attachAxisView(rightAxisView: AxisView<Y>): void {\n      // hook\n    },\n    detachAxisView(rightAxisView: AxisView<Y>): void {\n      rightAxisView.remove();\n    },\n    detectController(controller: Controller): AxisController<Y> | null {\n      return controller instanceof RightAxisController ? controller : null;\n    },\n  })\n  readonly rightAxis!: TraitViewControllerRef<this, AxisTrait<Y>, AxisView<Y>, AxisController<Y>> & Observes<AxisController<Y>> & {\n    attachAxisTrait(axisTrait: AxisTrait<Y>): void,\n    detachAxisTrait(axisTrait: AxisTrait<Y>): void,\n    attachAxisView(axisView: AxisView<Y>): void,\n    detachAxisView(axisView: AxisView<Y>): void,\n  };\n\n  @TraitViewControllerRef({\n    controllerType: BottomAxisController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.chart.view;\n    },\n    getTraitViewRef(controller: AxisController<X>): TraitViewRef<unknown, AxisTrait<X>, AxisView<X>> {\n      return controller.axis;\n    },\n    willAttachController(bottomAxisController: AxisController<X>): void {\n      this.owner.callObservers(\"controllerWillAttachBottomAxis\", bottomAxisController, this.owner);\n    },\n    didAttachController(bottomAxisController: AxisController<X>): void {\n      const bottomAxisTrait = bottomAxisController.axis.trait;\n      if (bottomAxisTrait !== null) {\n        this.attachAxisTrait(bottomAxisTrait);\n      }\n      const bottomAxisView = bottomAxisController.axis.view;\n      if (bottomAxisView !== null) {\n        this.attachAxisView(bottomAxisView);\n      }\n    },\n    willDetachController(bottomAxisController: AxisController<X>): void {\n      const bottomAxisView = bottomAxisController.axis.view;\n      if (bottomAxisView !== null) {\n        this.detachAxisView(bottomAxisView);\n      }\n      const bottomAxisTrait = bottomAxisController.axis.trait;\n      if (bottomAxisTrait !== null) {\n        this.detachAxisTrait(bottomAxisTrait);\n      }\n    },\n    didDetachController(bottomAxisController: AxisController<X>): void {\n      this.owner.callObservers(\"controllerDidDetachBottomAxis\", bottomAxisController, this.owner);\n    },\n    controllerWillAttachAxisTrait(bottomAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"controllerWillAttachBottomAxisTrait\", bottomAxisTrait, this.owner);\n      this.attachAxisTrait(bottomAxisTrait);\n    },\n    controllerDidDetachAxisTrait(bottomAxisTrait: AxisTrait<X>): void {\n      this.detachAxisTrait(bottomAxisTrait);\n      this.owner.callObservers(\"controllerDidDetachBottomAxisTrait\", bottomAxisTrait, this.owner);\n    },\n    attachAxisTrait(bottomAxisTrait: AxisTrait<X>): void {\n      // hook\n    },\n    detachAxisTrait(bottomAxisTrait: AxisTrait<X>): void {\n      // hook\n    },\n    controllerWillAttachAxisView(bottomAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"controllerWillAttachBottomAxisView\", bottomAxisView, this.owner);\n      this.attachAxisView(bottomAxisView);\n    },\n    controllerDidDetachAxisView(bottomAxisView: AxisView<X>): void {\n      this.detachAxisView(bottomAxisView);\n      this.owner.callObservers(\"controllerDidDetachBottomAxisView\", bottomAxisView, this.owner);\n    },\n    attachAxisView(bottomAxisView: AxisView<X>): void {\n      // hook\n    },\n    detachAxisView(bottomAxisView: AxisView<X>): void {\n      bottomAxisView.remove();\n    },\n    detectController(controller: Controller): AxisController<X> | null {\n      return controller instanceof BottomAxisController ? controller : null;\n    },\n  })\n  readonly bottomAxis!: TraitViewControllerRef<this, AxisTrait<X>, AxisView<X>, AxisController<X>> & Observes<AxisController<X>> & {\n    attachAxisTrait(axisTrait: AxisTrait<X>): void;\n    detachAxisTrait(axisTrait: AxisTrait<X>): void;\n    attachAxisView(axisView: AxisView<X>): void;\n    detachAxisView(axisView: AxisView<X>): void;\n  };\n\n  @TraitViewControllerRef({\n    controllerType: LeftAxisController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.chart.view;\n    },\n    getTraitViewRef(controller: AxisController<Y>): TraitViewRef<unknown, AxisTrait<Y>, AxisView<Y>> {\n      return controller.axis;\n    },\n    willAttachController(leftAxisController: AxisController<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachLeftAxis\", leftAxisController, this.owner);\n    },\n    didAttachController(leftAxisController: AxisController<Y>): void {\n      const leftAxisTrait = leftAxisController.axis.trait;\n      if (leftAxisTrait !== null) {\n        this.attachAxisTrait(leftAxisTrait);\n      }\n      const leftAxisView = leftAxisController.axis.view;\n      if (leftAxisView !== null) {\n        this.attachAxisView(leftAxisView);\n      }\n    },\n    willDetachController(leftAxisController: AxisController<Y>): void {\n      const leftAxisView = leftAxisController.axis.view;\n      if (leftAxisView !== null) {\n        this.detachAxisView(leftAxisView);\n      }\n      const leftAxisTrait = leftAxisController.axis.trait;\n      if (leftAxisTrait !== null) {\n        this.detachAxisTrait(leftAxisTrait);\n      }\n    },\n    didDetachController(leftAxisController: AxisController<Y>): void {\n      this.owner.callObservers(\"controllerDidDetachLeftAxis\", leftAxisController, this.owner);\n    },\n    controllerWillAttachAxisTrait(leftAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachLeftAxisTrait\", leftAxisTrait, this.owner);\n      this.attachAxisTrait(leftAxisTrait);\n    },\n    controllerDidDetachAxisTrait(leftAxisTrait: AxisTrait<Y>): void {\n      this.detachAxisTrait(leftAxisTrait);\n      this.owner.callObservers(\"controllerDidDetachLeftAxisTrait\", leftAxisTrait, this.owner);\n    },\n    attachAxisTrait(leftAxisTrait: AxisTrait<Y>): void {\n      // hook\n    },\n    detachAxisTrait(leftAxisTrait: AxisTrait<Y>): void {\n      // hook\n    },\n    controllerWillAttachAxisView(leftAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachLeftAxisView\", leftAxisView, this.owner);\n      this.attachAxisView(leftAxisView);\n    },\n    controllerDidDetachAxisView(leftAxisView: AxisView<Y>): void {\n      this.detachAxisView(leftAxisView);\n      this.owner.callObservers(\"controllerDidDetachLeftAxisView\", leftAxisView, this.owner);\n    },\n    attachAxisView(leftAxisView: AxisView<Y>): void {\n      // hook\n    },\n    detachAxisView(leftAxisView: AxisView<Y>): void {\n      leftAxisView.remove();\n    },\n    detectController(controller: Controller): AxisController<Y> | null {\n      return controller instanceof LeftAxisController ? controller : null;\n    },\n  })\n  readonly leftAxis!: TraitViewControllerRef<this, AxisTrait<Y>, AxisView<Y>, AxisController<Y>> & Observes<AxisController<Y>> & {\n    attachAxisTrait(axisTrait: AxisTrait<Y>): void;\n    detachAxisTrait(axisTrait: AxisTrait<Y>): void;\n    attachAxisView(axisView: AxisView<Y>): void;\n    detachAxisView(axisView: AxisView<Y>): void;\n  };\n}\n"],"names":["__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","f","TypeError","_","kind","key","target","prototype","descriptor","Object","getOwnPropertyDescriptor","name","done","i","length","context","p","access","addInitializer","push","result","get","set","init","unshift","defineProperty","__runInitializers","thisArg","value","useValue","arguments","call","SuppressedError","DialView","GraphicsView","_a","_classSuper","this","_instanceExtraInitializers","_value_initializers","limit","_limit_initializers","center","_center_initializers","innerRadius","_innerRadius_initializers","outerRadius","_outerRadius_initializers","startAngle","_startAngle_initializers","sweepAngle","_sweepAngle_initializers","cornerRadius","_cornerRadius_initializers","dialColor","_dialColor_initializers","meterColor","_meterColor_initializers","labelPadding","_labelPadding_initializers","tickAlign","_tickAlign_initializers","tickRadius","_tickRadius_initializers","tickLength","_tickLength_initializers","tickWidth","_tickWidth_initializers","tickPadding","_tickPadding_initializers","tickColor","_tickColor_initializers","font","_font_initializers","textColor","_textColor_initializers","label","_label_initializers","legend","_legend_initializers","arrangement","_arrangement_initializers","onLayout","super","recohere","updateTime","onRender","renderer","CanvasRenderer","hidden","culled","save","renderDial","viewFrame","restore","frame","width","height","size","Math","min","getValue","delta","px","deltaRadius","rad","dial","Arc","Angle","zero","meter","withSweepAngle","times","beginPath","fillStyle","toString","draw","fill","clip","labelView","view","r","rx","cos","Equivalent","Epsilon","ry","sin","textAlign","padAngle","PI","pxValue","dx","dy","TypesetView","Symbol","hasInstance","setIntrinsic","textBaseline","textOrigin","R2Point","x","y","legendView","tickAngle","cx","cy","r1x","r1y","r2x","r2y","lineWidth","strokeStyle","moveTo","lineTo","stroke","FillView","hitTest","transform","hitTestDial","isPointInPath","_value_decorators","Animator","valueType","Number","updateFlags","View","NeedsRender","didSetValue","owner","callObservers","_limit_decorators","origin","inherits","ThemeAnimator","Length","pct","_startAngle_decorators","_sweepAngle_decorators","Color","look","Look","etchColor","accentColor","legendColor","Font","_label_decorators","ViewRef","viewType","TextRunView","viewKey","binds","willAttachView","didDetachView","fromLike","createView","text","setState","_legend_decorators","Property","String","static","private","has","obj","metadata","_metadata","_center_decorators","_innerRadius_decorators","_outerRadius_decorators","_cornerRadius_decorators","_dialColor_decorators","_meterColor_decorators","_labelPadding_decorators","_tickAlign_decorators","_tickRadius_decorators","_tickLength_decorators","_tickWidth_decorators","_tickPadding_decorators","_tickColor_decorators","_font_decorators","_textColor_decorators","_arrangement_decorators","DialTrait","Trait","formatLabel","formatLegend","ColorLook","DialController","Controller","_dial_initializers","updateLabel","dialTrait","hasAffinity","Affinity","Intrinsic","updateLegend","setValue","timing","dialView","dialTiming","getLook","Mood","ambient","Timing","setLimit","setDialColor","setMeterColor","setLabelView","setLegendView","getter","_dial_decorators","TraitViewRef","traitType","observesTrait","willAttachTrait","didAttachTrait","didDetachTrait","traitDidSetValue","traitDidSetLimit","traitDidSetDialColor","traitDidSetMeterColor","traitDidSetLabel","traitDidSetLegend","observesView","didAttachView","trait","setView","willDetachView","viewDidSetValue","viewDidSetLimit","viewWillAttachLabel","viewDidDetachLabel","viewWillAttachLegend","viewDidDetachLegend","_get_dialTiming_decorators","GaugeView","dialSpacing","_dialSpacing_initializers","title","_title_initializers","dials","_dials_initializers","layoutGauge","xMin","xMax","yMin","yMax","dialViews","views","autoCount","viewId","gaugeLimit","r0","r1","rs","dr","isFinite","dialLimit","max","titleView","state","NeedsLayout","_title_decorators","initView","_dials_decorators","ViewSet","observes","targetView","attachLabelView","attachLegendView","detachLegendView","detachLabelView","requireUpdate","_dialSpacing_decorators","GaugeTrait","onStartConsuming","consumeTraits","onStopConsuming","unconsumeTraits","TraitSet","targetTrait","consuming","consume","willDetachTrait","unconsume","detectModel","model","getTrait","GaugeController","gauge","_gauge_initializers","setTitleView","gaugeView","_gauge_decorators","gaugeTrait","addTraits","traits","deleteTraits","traitDidSetTitle","traitWillAttachDial","addTrait","traitDidDetachDial","deleteTrait","dialControllers","controllers","controllerId","dialController","parent","insertView","deinitView","viewWillAttachTitle","viewDidDetachTitle","TraitViewControllerSet","controllerType","parentView","getTraitViewRef","willAttachController","didAttachController","attachDialTrait","attachDialView","willDetachController","detachDialView","detachDialTrait","didDetachController","controllerWillAttachDialTrait","controllerDidDetachDialTrait","controllerWillAttachDialView","controllerDidDetachDialView","attachDialLabelView","attachDialLegendView","detachDialLegendView","detachDialLabelView","remove","controllerDidSetDialValue","controllerDidSetDialLimit","controllerWillAttachDialLabelView","controllerDidDetachDialLabelView","controllerWillAttachDialLegendView","controllerDidDetachDialLegendView","SliceView","total","_total_initializers","phaseAngle","_phaseAngle_initializers","_padAngle_initializers","padRadius","_padRadius_initializers","labelRadius","_labelRadius_initializers","sliceColor","_sliceColor_initializers","PaintingRenderer","renderSlice","getValueOr","arc","contextFillStyle","labelAngle","contextLineWidth","contextStrokeStyle","hitTestSlice","_total_decorators","_phaseAngle_decorators","deg","_padAngle_decorators","_padRadius_decorators","_labelRadius_decorators","_sliceColor_decorators","SliceTrait","SliceController","slice","_slice_initializers","sliceTrait","sliceView","sliceTiming","setSliceColor","_slice_decorators","traitDidSetSliceColor","setHidden","_get_sliceTiming_decorators","PieView","baseAngle","_baseAngle_initializers","slices","_slices_initializers","layoutPie","sliceViews","_slices_decorators","_baseAngle_decorators","PieTrait","PieController","pie","_pie_initializers","pieView","_pie_decorators","pieTrait","traitWillAttachSlice","traitDidDetachSlice","sliceControllers","sliceController","attachSliceTrait","attachSliceView","detachSliceView","detachSliceTrait","controllerWillAttachSliceTrait","controllerDidDetachSliceTrait","controllerWillAttachSliceView","controllerDidDetachSliceView","attachSliceLabelView","attachSliceLegendView","detachSliceLegendView","detachSliceLabelView","controllerDidSetSliceValue","sliceValue","controllerWillAttachSliceLabelView","controllerDidDetachSliceLabelView","controllerWillAttachSliceLegendView","controllerDidDetachSliceLegendView","DataPointView","constructor","xCoord","_x_initializers","_y_initializers","NaN","yCoord","y2Coord","gradientStop","setXCoord","setYCoord","setY2Coord","y2","radius","hitRadius","color","opacity","category","labelPlacement","isGradientStop","updateGradientStop","layoutDataPoint","tryView","layoutLabel","placement","y1","hitTestPoint","tryValue","_x_decorators","oldX","_y_decorators","oldY","_get_y2_decorators","oldY2","_get_radius_decorators","_get_color_decorators","_get_opacity_decorators","_get_category_decorators","_get_labelPadding_decorators","_get_hitRadius_decorators","_get_font_decorators","_get_textColor_decorators","_get_labelPlacement_decorators","DataPointTrait","_get_label_decorators","DataPointController","dataPoint","_dataPoint_initializers","dataPointTrait","setX","dataPointView","dataPointTiming","setY","setY2","setRadius","setColor","setOpacity","_dataPoint_decorators","tryFastener","traitDidSetX","traitDidSetY","traitDidSetY2","traitDidSetRadius","traitDidSetColor","traitDidSetOpacity","viewDidSetX","viewDidSetY","viewDidSetY2","viewDidSetRadius","viewDidSetColor","viewDidSetOpacity","_get_dataPointTiming_decorators","DataSetTrait","dataPoints","_dataPoints_initializers","_dataPoints_decorators","DataSetController","dataSet","_dataSet_initializers","_dataSet_decorators","TraitRef","dataSetTrait","traitWillAttachDataPoint","traitDidDetachDataPoint","dataPointController","attachDataPointTrait","attachDataPointView","detachDataPointView","detachDataPointTrait","controllerWillAttachDataPointTrait","controllerDidDetachDataPointTrait","controllerWillAttachDataPointView","controllerDidDetachDataPointView","attachDataPointLabelView","detachDataPointLabelView","controllerDidSetDataPointX","controllerDidSetDataPointY","controllerDidSetDataPointY2","controllerDidSetDataPointRadius","controllerDidSetDataPointColor","controllerDidSetDataPointOpacity","controllerWillAttachDataPointLabelView","controllerDidDetachDataPointLabelView","ContinuousScaleAnimator","extend","ContinuousScale","setScale","ScaledView","parseScale","domain","Domain","oldState","newState","createScale","withDomain","overRange","flags","TweeningFlag","newValue","Extrinsic","setDomain","setRange","Range","setBaseScale","derived","inlet","setBaseDomain","setBaseRange","createDomain","DateTime","TimeDomain","ScaledXView","object","ScaledYView","ScaledXYView","scaledFlags","xScale","_xScale_initializers","yScale","_yScale_initializers","xDomainBounds","_xDomainBounds_initializers","yDomainBounds","_yDomainBounds_initializers","xZoomBounds","_xZoomBounds_initializers","yZoomBounds","_yZoomBounds_initializers","xDomainPadding","_xDomainPadding_initializers","yDomainPadding","_yDomainPadding_initializers","xRangePadding","_xRangePadding_initializers","yRangePadding","_yRangePadding_initializers","fitAlign","_fitAlign_initializers","fitAspectRatio","_fitAspectRatio_initializers","rescaleTransition","_rescaleTransition_initializers","reboundTransition","_reboundTransition_initializers","scaled","_scaled_initializers","gesture","_gesture_initializers","xDataDomain","yDataDomain","xDataRange","yDataRange","xDataDomainPadded","yDataDomainPadded","setScaledFlags","xDomain","xRange","yDomain","yRange","xRangeMin","xRangeMax","LinearRange","yRangeMin","yRangeMax","setXDataDomain","newXDataDomain","oldXDataDomain","Equals","willSetXDataDomain","onSetXDataDomain","didSetXDataDomain","updateXDataRange","updateXDataDomainPadded","updateXDataDomain","xScaledDomain","viewCount","Values","compare","setYDataDomain","newYDataDomain","oldYDataDomain","willSetYDataDomain","onSetYDataDomain","didSetYDataDomain","updateYDataRange","updateYDataDomainPadded","updateYDataDomain","yScaledDomain","setXDataRange","setYDataRange","setXDataDomainPadded","xDataDomainPaddedMin","xDataDomainPaddedMax","setYDataDomainPadded","yDataDomainPaddedMin","yDataDomainPaddedMax","equivalent","floor","ceil","updateXRangePadding","xScaledRangePadding","updateYRangePadding","yScaledRangePadding","xFitAlign","yFitAlign","preserveAspectRatio","domainTracking","xDomainTracking","yDomainTracking","XDomainTrackingFlag","YDomainTrackingFlag","Array","isArray","scaleGestures","xScaleGestures","yScaleGestures","XScaleGesturesFlag","YScaleGesturesFlag","fitX","tween","XFitFlag","XFitTweenFlag","fitY","YFitFlag","YFitTweenFlag","fit","FitTweenMask","resizeScales","updateScales","range","equals","RescaleFlag","inletValue","pressing","isCoasting","coasting","boundScales","oldXScale","oldYScale","oldXDomain","oldYDomain","newXDomain","newYDomain","XInRangeMask","YInRangeMask","xDomainPadded","xDomainMin","xDomainMax","xZoomMin","xZoomMax","LinearScale","LinearZoomMin","TimeScale","TimeZoomMin","LinearZoomMax","TimeZoomMax","clampDomain","yDomainPadded","yDomainMin","yDomainMax","yZoomMin","yZoomMax","xDomainWidth","XMinInRangeFlag","yDomainWidth","YMinInRangeFlag","FitMask","oldDomainWidth","oldDomainHeight","domainAspectRatio","rangeAspectRatio","anamorphicAspectRatio","abs","XBoundingFlag","InteractingMask","willReboundX","didReboundX","getState","YBoundingFlag","willReboundY","didReboundY","InteractedFlag","displayChildren","displayFlags","displayChild","layoutChildren","xDataDomainMin","xDataDomainMax","yDataDomainMin","yDataDomainMax","xRangePaddingMin","xRangePaddingMax","yRangePaddingMin","yRangePaddingMax","xCount","yCount","childView","is","childXDataDomain","childXRangePadding","childYDataDomain","childYRangePadding","onBeginBoundingXScale","onEndBoundingXScale","onInterruptBoundingXScale","onBeginBoundingYScale","onEndBoundingYScale","onInterruptBoundingYScale","neutralizeX","neutralizeY","x0","x1","y0","LinearDomain","string","d1","current","d0","withDay","day","split","parse","_xScale_decorators","willTransition","didTransition","didInterrupt","_yScale_decorators","_xDomainBounds_decorators","initValue","equalValues","newXDomainBounds","oldXDomainBounds","Arrays","equal","_yDomainBounds_decorators","newYDomainBounds","oldYDomainBounds","_xZoomBounds_decorators","newXZoomBounds","oldXZoomBounds","_yZoomBounds_decorators","_xDomainPadding_decorators","newXDomainPadding","oldXDomainPadding","_yDomainPadding_decorators","newYDomainPadding","oldYDomainPadding","_xRangePadding_decorators","newXRangePadding","oldXRangePadding","_yRangePadding_decorators","newYRangePadding","oldYRangePadding","_fitAlign_decorators","newFitAlign","oldFitAlign","_fitAspectRatio_decorators","_rescaleTransition_decorators","Easing","linear","withDuration","_reboundTransition_decorators","cubicOut","_scaled_decorators","scaledView","newScaledView","viewDidSetXRangePadding","viewDidSetYRangePadding","viewDidSetXDataDomain","viewDidSetYDataDomain","detectView","_gesture_decorators","ScaleGesture","bindsOwner","getXScale","setXScale","getYScale","setYScale","willStartInteracting","BoundingMask","InteractingFlag","didStopInteracting","contains","XMaxInRangeFlag","YMaxInRangeFlag","didStopPressing","willBeginCoast","input","event","disableX","vx","ax","disableY","vy","ay","DomainTrackingMask","ScaleGesturesMask","InsertChildFlags","NeedsResize","ScatterPlotView","_opacity_initializers","point0","point1","dy1","sx1","sy1","didRender","renderPlot","_opacity_decorators","newDataPointView","SeriesPlotView","hitMode","_hitMode_initializers","gradientStops","dataPointViews","BTree","firstKey","lastKey","getDataPoint","insertDataPoint","insertChild","removeDataPoint","removeChild","setChild","newChild","_b","nextValue","oldView","getChild","appendChild","child","prependChild","point2","x2","dy2","sx2","sy2","sdy2","hit","hitTestDomain","hitTestPlot","hitTestChildren","d","inverse","v0","previousValue","v1","dx0","dx1","delete","_hitMode_decorators","BubblePlotView","_radius_initializers","_fill_initializers","_stroke_initializers","strokeWidth","_strokeWidth_initializers","contextGlobalAlpha","globalAlpha","fillColor","tryValueOr","alpha","_radius_decorators","_fill_decorators","_stroke_decorators","_strokeWidth_decorators","LinePlotView","hitWidth","_hitWidth_initializers","transparent","gradient","isEmpty","p0","firstValue","p1","lastValue","createLinearGradient","forEach","offset","addColorStop","pointInStroke","isPointInStroke","strokeRadius","_hitWidth_decorators","AreaPlotView","cursor","values","next","hasNext","hasPrevious","previous","closePath","PlotTrait","detectTrait","ScatterPlotTrait","SeriesPlotTrait","BubblePlotTrait","createPlotController","BubblePlotController","LinePlotTrait","LinePlotController","AreaPlotTrait","AreaPlotController","PlotController","plotTiming","_get_plotTiming_decorators","ScatterPlotController","SeriesPlotController","plot","_plot_initializers","plotView","setFill","extends","_plot_decorators","initTrait","plotTrait","setTrait","traitDidSetFill","dataPointControllers","viewDidSetFill","setStroke","setStrokeWidth","traitDidSetStroke","traitDidSetStrokeWidth","viewDidSetStroke","viewDidSetStrokeWidth","GraphView","willRender","clipGraph","rect","GraphTrait","plots","_plots_initializers","_plots_decorators","GraphController","graph","_graph_initializers","_graph_decorators","graphTrait","traitWillAttachPlot","traitDidDetachPlot","graphView","plotControllers","plotController","newGraphView","attachPlotTrait","attachPlotView","attachDataSetTrait","detachDataSetTrait","detachPlotView","detachPlotTrait","controllerWillAttachPlotTrait","controllerDidDetachPlotTrait","controllerWillAttachPlotView","controllerDidDetachPlotView","controllerWillAttachDataSetTrait","controllerDidDetachDataSetTrait","controllerWillAttachDataPoint","attachDataPoint","controllerDidDetachDataPoint","detachDataPoint","dataPointLabelView","createController","ERROR_10","sqrt","ERROR_5","ERROR_2","SECOND","MINUTE","HOUR","DAY","MONTH","YEAR","TIME_TICK_INTERVALS","TimeInterval","second","every","minute","hour","week","month","year","MILLISECOND_FORMAT","DateTimeFormat","pattern","SECOND_FORMAT","MINUTE_FORMAT","HOUR_FORMAT","WEEKDAY_FORMAT","MONTHDAY_FORMAT","MONTH_FORMAT","YEAR_FORMAT","TickGenerator","format","tickValue","fromScale","scale","n","TimeTickGenerator","NumberTickGenerator","step","step0","step1","pow","log","LN10","error","count","generate","interval","ticks","reverse","power","power10","base","t0","t1","zone","time","dt","t","duration","nextKey","k","previousKey","millisecond","TickState","TickView","anchor","_anchor_initializers","tickMarkColor","_tickMarkColor_initializers","tickMarkWidth","_tickMarkWidth_initializers","tickMarkLength","_tickMarkLength_initializers","tickLabelPadding","_tickLabelPadding_initializers","gridLineColor","_gridLineColor_initializers","gridLineWidth","_gridLineWidth_initializers","tickState","Excluded","preserved","setOffset","preserve","fadeIn","Leaving","Entering","fadeOut","Included","renderTick","top","TopTickView","right","RightTickView","bottom","BottomTickView","left","LeftTickView","from","orientation","_anchor_decorators","_tickMarkColor_decorators","_tickMarkWidth_decorators","_tickMarkLength_decorators","_tickLabelPadding_decorators","_gridLineColor_decorators","_gridLineWidth_decorators","round","AxisView","tickViews","tickGenerator","_tickGenerator_initializers","_origin_initializers","borderColor","_borderColor_initializers","borderWidth","_borderWidth_initializers","borderSerif","_borderSerif_initializers","tickMarkSpacing","_tickMarkSpacing_initializers","tickTransition","_tickTransition_initializers","getTick","tickView","insertTick","createTickView","removeTick","updateTicks","generateTicks","oldTicks","clone","tickValues","oldTick","newTick","setInterpolatedValue","forEachValue","tickLabel","createTickLabel","observers","observer","formatTickLabel","onInsertChild","onRemoveChild","needsDisplay","layoutTick","renderDomain","_tickMarkSpacing_decorators","_tickTransition_decorators","_tickGenerator_decorators","_origin_decorators","_borderColor_decorators","_borderWidth_decorators","_borderSerif_decorators","TopAxisView","_scale_initializers","tick","_scale_decorators","RightAxisView","BottomAxisView","LeftAxisView","AxisTrait","TopAxisTrait","RightAxisTrait","BottomAxisTrait","LeftAxisTrait","AxisController","axis","_axis_initializers","_axis_decorators","axisTrait","axisView","TopAxisController","RightAxisController","BottomAxisController","LeftAxisController","ChartView","gutterTop","_gutterTop_initializers","gutterRight","_gutterRight_initializers","gutterBottom","_gutterBottom_initializers","gutterLeft","_gutterLeft_initializers","topAxis","_topAxis_initializers","rightAxis","_rightAxis_initializers","bottomAxis","_bottomAxis_initializers","leftAxis","_leftAxis_initializers","layoutChart","graphTop","graphRight","graphBottom","graphLeft","topAxisView","setViewFrame","R2Box","rightAxisView","bottomAxisView","leftAxisView","_gutterTop_decorators","_gutterRight_decorators","_gutterBottom_decorators","_gutterLeft_decorators","gridColor","_topAxis_decorators","_rightAxis_decorators","_bottomAxis_decorators","_leftAxis_decorators","ChartTrait","topAxisTrair","rightAxisTrait","bottomAxisTrait","leftAxisTrait","topAxisTrait","ChartController","chart","_chart_initializers","_chart_decorators","chartTrait","deinitTrait","newChartTrait","traitWillAttachTopAxis","traitDidDetachTopAxis","traitWillAttachRightAxis","traitDidDetachRightAxis","traitWillAttachBottomAxis","traitDidDetachBottomAxis","traitWillAttachLeftAxis","traitDidDetachLeftAxis","chartView","topAxisController","controller","rightAxisController","bottomAxisController","leftAxisController","TraitViewControllerRef","attachAxisTrait","attachAxisView","detachAxisView","detachAxisTrait","controllerWillAttachAxisTrait","controllerDidDetachAxisTrait","controllerWillAttachAxisView","controllerDidDetachAxisView","detectController"],"mappings":"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","x_google_ignoreList":[0]}