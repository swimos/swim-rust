{"version":3,"file":"game.min.js","sources":["../../node_modules/tslib/tslib.es6.mjs","../../src/leaderboard/KdSeriesView.ts","../../src/leaderboard/LeaderboardRowController.ts","../../src/leaderboard/LeaderboardTableController.ts","../../src/leaderboard/LeaderboardController.ts","../../src/AppController.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import { DataPointView, GraphView, LinePlotView } from \"@swim/chart\";\nimport { HtmlView } from \"@swim/dom\";\nimport { CanvasView } from \"@swim/graphics\";\nimport { ViewRef } from \"@swim/view\";\nimport { PlayerChange } from \"../types\";\nimport { Timing } from \"@swim/util\";\n\nexport class KdSeriesView extends HtmlView {\n  DEFAULT_STROKE: string = \"#FBFBFB\";\n  ELECTRIC_TEAL: string = \"#66FFDD\";\n  TANGERINE_SCREAM: string = \"#F8A147\";\n\n  constructor() {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"kdSeriesContainer\");\n    super(div);\n    this.containerView.setView(div);\n    this.plotView.insertView(this.graphView.insertView(this.canvasView.insertView(this)));\n  }\n\n  addPoint(x?: number, y?: number) {\n    this.plotView.attachView().insertDataPoint(new DataPointView(x, y));\n  }\n\n  updateStroke(change: PlayerChange): void {\n    const newStroke =\n      change === \"none\"\n        ? this.DEFAULT_STROKE\n        : change === \"rising\"\n        ? this.ELECTRIC_TEAL\n        : this.TANGERINE_SCREAM;\n    this.plotView\n      .attachView()\n      .set({ stroke: newStroke }, Timing.fromInit({ easing: \"linear\", t0: 0, dt: 500 }));\n  }\n\n  @ViewRef({\n    viewType: HtmlView,\n    initView(view): void {\n      view.set({\n        style: {\n          display: \"flex\",\n          width: \"90%\",\n          height: \"67%\",\n          touchAction: \"none\",\n          userSelect: \"none\",\n        },\n      });\n    },\n  })\n  readonly containerView!: ViewRef<this, HtmlView>;\n\n  @ViewRef({\n    viewType: CanvasView,\n    createView(): CanvasView {\n      return CanvasView.create().set({\n        style: {\n          touchAction: \"manipulation\",\n        },\n        wheelEvents: true,\n        mouseEvents: true,\n        pointerEvents: true,\n        touchEvents: true,\n      });\n    },\n  })\n  readonly canvasView!: ViewRef<this, CanvasView>;\n\n  @ViewRef({\n    viewType: GraphView,\n    createView(): GraphView {\n      const graphView = GraphView.create();\n      graphView.domainTracking(true);\n\n      return graphView;\n    },\n  })\n  readonly graphView!: ViewRef<this, GraphView>;\n\n  @ViewRef({\n    viewType: LinePlotView,\n    createView(): LinePlotView {\n      const plotView = LinePlotView.create().set({\n        hitMode: \"plot\",\n        stroke: this.owner.DEFAULT_STROKE,\n        strokeWidth: 1,\n      });\n\n      return plotView;\n    },\n  })\n  readonly plotView!: ViewRef<this, LinePlotView>;\n}\n","import { TraitViewRef } from \"@swim/controller\";\nimport { TraitRef } from \"@swim/model\";\nimport {\n  CellTrait,\n  CellView,\n  LeafTrait,\n  LeafView,\n  RowController,\n  RowTrait,\n  RowView,\n  TextCellTrait,\n  TextCellView,\n} from \"@swim/table\";\nimport { Observes } from \"@swim/util\";\nimport { Property } from \"@swim/component\";\nimport { PlayerChange, PlayerDetails } from \"../types\";\nimport { Uri } from \"@swim/uri\";\nimport { MapDownlink } from \"@swim/client\";\nimport { Value } from \"@swim/structure\";\nimport { HtmlView } from \"@swim/dom\";\nimport { ViewRef } from \"@swim/view\";\nimport { KdSeriesView } from \"./KdSeriesView\";\n\nexport class LeaderboardRowController extends RowController {\n  private _resetChangeStateTimer: NodeJS.Timeout | null = null;\n\n  constructor(trait: RowTrait) {\n    super();\n    this.trait.set(trait);\n\n    const urlParams = new URLSearchParams(window.location.search);\n\n    let host = urlParams.get(\"host\");\n    const baseUri = Uri.parse(document.location.href);\n    if (!host) {\n      host = baseUri\n        .base()\n        .withScheme(baseUri.schemeName === \"https\" ? \"warps\" : \"warp\")\n        .toString();\n    }\n    this.statsHistoryDownlink.setHostUri(host);\n  }\n\n  @TraitViewRef({\n    viewType: RowView,\n    extends: true,\n    initView(rowView: RowView): void {\n      super.initView(rowView);\n      rowView.set({\n        style: {\n          height: \"44px\",\n        },\n      });\n    },\n  })\n  override readonly row!: TraitViewRef<this, RowTrait, RowView>;\n\n  @TraitViewRef({\n    viewType: LeafView,\n    extends: true,\n    initView(leafView: LeafView): void {\n      super.initView(leafView);\n      leafView.set({\n        style: {\n          height: \"44px\",\n        },\n      });\n\n      if (Number.parseInt(this.owner.key ?? \"0\", 10) % 2 === 1) {\n        leafView.set({\n          style: {\n            backgroundColor: \"#242424\",\n          },\n        });\n      }\n    },\n    viewDidPress(): void {\n      // disable default press action\n      return;\n    },\n    viewDidLongPress(): void {\n      // disable default long press action\n      return;\n    },\n  })\n  override readonly leaf!: TraitViewRef<this, LeafTrait, LeafView> & Observes<LeafTrait> & Observes<LeafView>;\n\n  @TraitRef({\n    traitType: RowTrait,\n    extends: true,\n  })\n  readonly trait!: TraitRef<this, RowTrait>;\n\n  @TraitViewRef({\n    traitType: TextCellTrait,\n    viewType: TextCellView,\n    initView(view): void {\n      super.initView(view);\n      view.set({\n        classList: [\"rankCell\"],\n        style: {\n          fontSize: \"14px\",\n          color: \"#FBFBFB\",\n          opacity: 0.8,\n        },\n      });\n    },\n    extends: true,\n  })\n  readonly rankCell!: TraitViewRef<this, TextCellTrait, TextCellView>;\n\n  @TraitViewRef({\n    traitType: TextCellTrait,\n    viewType: TextCellView,\n    initView(view): void {\n      super.initView(view);\n      view.set({\n        classList: [\"nameCell\"],\n        style: {\n          fontSize: \"14px\",\n          color: \"#FBFBFB\",\n          opacity: 0.8,\n        },\n      });\n    },\n    extends: true,\n  })\n  readonly nameCell!: TraitViewRef<this, TextCellTrait, TextCellView>;\n\n  @TraitViewRef({\n    traitType: TextCellTrait,\n    viewType: TextCellView,\n    initView(view): void {\n      super.initView(view);\n      view.set({\n        classList: [\"levelCell\"],\n        style: {\n          fontSize: \"14px\",\n          color: \"#FBFBFB\",\n          opacity: 0.8,\n        },\n      });\n    },\n    extends: true,\n  })\n  readonly levelCell!: TraitViewRef<this, TextCellTrait, TextCellView>;\n\n  @TraitViewRef({\n    traitType: TextCellTrait,\n    viewType: TextCellView,\n    initView(view): void {\n      super.initView(view);\n      view.set({\n        classList: [\"teamCell\"],\n        style: {\n          color: \"#FBFBFB\",\n          opacity: 0.8,\n          justifyContent: \"center\",\n        },\n      });\n      const firstChild = view.firstChild;\n      if (firstChild) {\n        view.removeChild(firstChild);\n      }\n      this.owner.teamTeamSpan.insertView(view, undefined, null, \"teamTeamSpan\");\n      this.owner.teamPctSpan.insertView(view, undefined, null, \"teamPctSpan\");\n    },\n    extends: true,\n  })\n  readonly teamCell!: TraitViewRef<this, TextCellTrait, TextCellView>;\n\n  @ViewRef({\n    viewType: TextCellView,\n    createView(): HtmlView {\n      return new HtmlView(document.createElement(\"span\")).set({\n        classList: [\"teamTeamSpan\"],\n        style: {\n          display: \"inline-flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginRight: \"4px\",\n          marginBottom: \"4px\",\n          fontSize: \"14px\",\n        },\n      });\n    },\n  })\n  readonly teamTeamSpan!: ViewRef<this, HtmlView>;\n\n  @ViewRef({\n    viewType: TextCellView,\n    createView(): HtmlView {\n      return new HtmlView(document.createElement(\"span\")).set({\n        classList: [\"teamPctSpan\"],\n        style: {\n          display: \"inline-flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: \"4px\",\n          fontSize: \"12px\",\n        },\n      });\n    },\n  })\n  readonly teamPctSpan!: ViewRef<this, HtmlView>;\n\n  @TraitViewRef({\n    traitType: CellTrait,\n    viewType: CellView,\n    initView(view): void {\n      super.initView(view);\n      view.set({\n        classList: [\"kdCell\"],\n        style: {\n          fontSize: \"14px\",\n          color: \"#FBFBFB\",\n          opacity: 0.8,\n        },\n      });\n\n      const firstChild = view.firstChild;\n      if (firstChild) {\n        view.removeChild(firstChild);\n      }\n      this.owner.kdCellSeries.insertView(view, undefined, null, \"kdCellSeries\");\n      this.owner.kdCellText.insertView(view, undefined, null, \"kdCellText\");\n    },\n    extends: true,\n  })\n  readonly kdCell!: TraitViewRef<this, CellTrait, CellView>;\n\n  @ViewRef({\n    viewType: KdSeriesView,\n    createView(): KdSeriesView {\n      return new KdSeriesView();\n    },\n  })\n  readonly kdCellSeries!: ViewRef<this, KdSeriesView>;\n\n  @ViewRef({\n    viewType: TextCellView,\n    createView(): HtmlView {\n      return new HtmlView(document.createElement(\"span\")).set({\n        classList: [\"kdCellText\"],\n        style: {\n          display: \"inline-flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginLeft: \"4px\",\n        },\n      });\n    },\n  })\n  readonly kdCellText!: ViewRef<this, HtmlView>;\n\n  @Property({\n    valueType: Number,\n    didSetValue(newValue): void {\n      const nodeUri = `/player/${newValue}`;\n\n      if (this.owner.statsHistoryDownlink.opened) {\n        const oldKdCellSeries = this.owner.kdCell.attachView().getChild(\"kdCellSeries\", KdSeriesView);\n        if (oldKdCellSeries) {\n          // remove current kd time series view\n          this.owner.kdCell.attachView().removeChild(\"kdCellSeries\");\n\n          // add new, empty kd time series view\n          const newKdCellSeries = this.owner.kdCell.attachView().prependChild(KdSeriesView, \"kdCellSeries\");\n          this.owner.kdCellSeries.setView(newKdCellSeries);\n          if (this.owner.changeState.value !== \"none\") {\n            this.owner.kdCellSeries.attachView().updateStroke(this.owner.changeState.value as PlayerChange);\n          }\n        }\n        this.owner.statsHistoryDownlink.close();\n      }\n      this.owner.statsHistoryDownlink.setNodeUri(nodeUri);\n      // re-open downlink; results in empty time series being populated with the data for the new playerId\n      this.owner.statsHistoryDownlink.open();\n    },\n  })\n  readonly playerId!: Property<this, Number>;\n\n  @Property({\n    value: \"none\",\n    valueType: String,\n    didSetValue(newValue, oldValue) {\n      if (newValue !== \"none\") {\n        this.owner.row.attachView().classList.remove(newValue === \"rising\" ? \"falling\" : \"rising\");\n        this.owner.row.attachView().classList.add(newValue.toString());\n        this.owner.kdCellSeries.attachView().updateStroke(newValue.toString() as PlayerChange);\n\n        if (this.owner._resetChangeStateTimer !== null) {\n          clearTimeout(this.owner._resetChangeStateTimer!);\n        }\n        this.owner._resetChangeStateTimer = setTimeout(() => {\n          this.owner.row.attachView().classList.remove(newValue.toString());\n          this.owner.kdCellSeries.attachView().updateStroke(\"none\");\n          this.owner.changeState.setValue(\"none\");\n        }, 2500);\n      }\n    },\n  })\n  readonly changeState!: Property<this, String>;\n\n  updateRow(item: PlayerDetails, rank: string, change: PlayerChange = \"none\"): void {\n    const playerId = item.id;\n    const name = item.tag;\n    const level = item.level;\n    const kills = item.totalKills;\n    const deaths = item.totalDeaths;\n    const kd = deaths === 0 ? `${kills}.00` : (kills / deaths).toFixed(2);\n    const t = item.teamCount.Donut;\n    const ct = item.teamCount.Hubble;\n\n    // update content\n    this.rankCell.attachTrait().set({\n      content: rank,\n    });\n    this.nameCell.attachTrait().set({\n      content: name,\n    });\n    this.levelCell.attachTrait().set({\n      content: level.toFixed(0),\n    });\n\n    this.teamTeamSpan.attachView().node.innerText = t >= ct ? \"T\" : \"CT\";\n    let pctText = `${Math.round((t >= ct ? t / (t + ct) : ct / (t + ct)) * 100)}%`;\n    if ((t ?? 0) === 0 || (ct ?? 0) === 0) {\n      pctText = \"100%\";\n    }\n    this.teamPctSpan.attachView().node.innerText = pctText;\n\n    this.kdCellText.attachView().node.innerText = kd;\n\n    if (change !== \"none\") {\n      this.changeState.setValue(change);\n    }\n\n    this.playerId.setValue(playerId);\n  }\n\n  @MapDownlink({\n    laneUri: \"statsHistory\",\n    didUpdate(key, newValue) {\n      const timestamp = key.numberValue();\n      const kdRatio = newValue.get(\"kdRatio\").numberValue();\n      this.owner.kdCellSeries.attachView().addPoint(timestamp, kdRatio);\n    },\n  })\n  readonly statsHistoryDownlink!: MapDownlink<this, Value>;\n}\n","import { ValueDownlink } from \"@swim/client\";\nimport { TraitViewControllerRef, TraitViewControllerSet, TraitViewRef } from \"@swim/controller\";\nimport {\n  HeaderController,\n  HeaderTrait,\n  HeaderView,\n  RowController,\n  RowTrait,\n  RowView,\n  TableController,\n  TableTrait,\n  TableView,\n  TextCellTrait,\n  TextCellView,\n} from \"@swim/table\";\nimport { Observes } from \"@swim/util\";\nimport { LeaderboardRowController } from \"./LeaderboardRowController\";\nimport { Record as SwimRecord } from \"@swim/structure\";\nimport { Uri } from \"@swim/uri\";\nimport { Model } from \"@swim/model\";\nimport { Property } from \"@swim/component\";\nimport { PlayerDetails, PlayerChange } from \"../types\";\nimport { HtmlView } from \"@swim/dom\";\nimport { ViewRef } from \"@swim/view\";\n\nexport class LeaderboardTableController extends TableController {\n  LEADERBOARD_SIZE = 100;\n  private _didSync: boolean = false;\n\n  constructor() {\n    super();\n    LeaderboardTableController.initFasteners(this);\n  }\n\n  protected override didMount(): void {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    let host = urlParams.get(\"host\");\n    const baseUri = Uri.parse(document.location.href);\n    if (!host) {\n      host = baseUri\n        .base()\n        .withScheme(baseUri.schemeName === \"https\" ? \"warps\" : \"warp\")\n        .toString();\n    }\n    const nodeUri = \"/player\";\n    const laneUri = `leaderboard`;\n\n    // set up and open status downlink\n    this.leaderboardDownlink.setLaneUri(laneUri);\n    this.leaderboardDownlink.setHostUri(host);\n    this.leaderboardDownlink.setNodeUri(nodeUri);\n    this.leaderboardDownlink.open();\n  }\n\n  @Property({\n    valueType: Model,\n  })\n  readonly tableModel!: Property<this, Model>;\n\n  @TraitViewRef({\n    extends: true,\n    traitWillAttachRow(rowTrait, targetTrait) {\n      this.owner.rows.addTrait(rowTrait, targetTrait, rowTrait.key);\n    },\n  })\n  override readonly table!: TraitViewRef<this, TableTrait, TableView> &\n    Observes<TableTrait> &\n    Observes<TableView>;\n\n  @TraitViewControllerRef({\n    extends: true,\n    setUpSortableCells(): void {\n      const levelView = this.owner.header.view?.childMap?.level as HtmlView | undefined;\n      if (levelView) {\n        this.owner.headerLevelCellView.setView(levelView);\n      }\n      const kdView = this.owner.header.view?.childMap?.kd as HtmlView | undefined;\n      if (kdView) {\n        this.owner.headerKdCellView.setView(kdView);\n      }\n    },\n  })\n  override readonly header!: TraitViewControllerRef<this, HeaderTrait, HeaderView, HeaderController> &\n    TableController[\"header\"] & { setUpSortableCells: () => void };\n\n  @ViewRef({\n    viewType: HtmlView,\n    initView(view) {\n      view.set({\n        classList: [\"clickable\"],\n        style: { textDecorationLine: \"underline\", textDecorationColor: \"#BBBBBB\", cursor: \"pointer\" },\n      });\n      const that = this;\n      view?.addEventListener(\"click\", function () {\n        that.owner.leaderboardMetric.setValue(\"xp\");\n      });\n    },\n  })\n  readonly headerLevelCellView!: ViewRef<this, HtmlView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    initView(view) {\n      view.set({\n        classList: [\"clickable\", \"sorting\"],\n        style: { textDecorationLine: \"underline\", textDecorationColor: \"#BBBBBB\", cursor: \"pointer\" },\n      });\n      const that = this;\n      view?.addEventListener(\"click\", function () {\n        that.owner.leaderboardMetric.setValue(\"kd\");\n      });\n    },\n  })\n  readonly headerKdCellView!: ViewRef<this, HtmlView>;\n\n  @TraitViewControllerSet({\n    extends: true,\n    controllerDidEnterLeafView(leafView) {\n      leafView.hover.focus(false);\n    },\n    controllerDidLeaveLeafView(leafView) {\n      leafView.hover.unfocus(false);\n    },\n    controllerDidPressLeafView(input, event, leafView) {\n      leafView.highlight.toggle();\n    },\n    createController(trait) {\n      const traitKey = trait?.key ?? \"\";\n\n      if (trait && traitKey) {\n        const leaderboardRowController = new LeaderboardRowController(trait);\n        leaderboardRowController.setKey(traitKey);\n        return leaderboardRowController;\n      }\n\n      return super.createController(trait);\n    },\n  })\n  override readonly rows!: TraitViewControllerSet<this, RowTrait, RowView, LeaderboardRowController> &\n    Observes<RowController> &\n    TableController[\"rows\"];\n\n  @Property({\n    value: \"kd\",\n    valueType: String,\n    didSetValue(newValue) {\n      if (this.owner.leaderboardDownlink.opened) {\n        this.owner.leaderboardDownlink.close();\n      }\n\n      // style to header cell by which the leaderboard is sorted\n      if (newValue === \"kd\") {\n        this.owner.headerKdCellView.attachView().classList.add(\"sorting\");\n        this.owner.headerLevelCellView.attachView().classList.remove(\"sorting\");\n      } else if (newValue === \"xp\") {\n        this.owner.headerLevelCellView.attachView().classList.add(\"sorting\");\n        this.owner.headerKdCellView.attachView().classList.remove(\"sorting\");\n      }\n\n      this.owner.leaderboardDownlink.setLaneUri(\n        `leaderboard`\n      );\n\n      this.owner.leaderboardDownlink.open();\n    },\n  })\n  readonly leaderboardMetric!: Property<this, String>;\n\n  createLeaderboardRowController(rank: string, item: PlayerDetails): void {\n    const rowModel = new Model();\n    const rowTrait = new RowTrait();\n    rowModel.setTrait(rank, rowTrait);\n\n    // Create cells in trait before appending to model to display being set to 'none'\n    const rankCell = rowTrait.getOrCreateCell(\"rank\", TextCellTrait);\n    const nameCell = rowTrait.getOrCreateCell(\"name\", TextCellTrait);\n    const levelCell = rowTrait.getOrCreateCell(\"level\", TextCellTrait);\n    const teamCell = rowTrait.getOrCreateCell(\"team\", TextCellTrait);\n    const kdCell = rowTrait.getOrCreateCell(\"kd\", TextCellTrait);\n\n    this.tableModel.value.appendChild(rowModel);\n\n    const newLeaderboardRowController = Object.values(this.rows.controllers).find((c) => c?.key === rank) as\n      | LeaderboardRowController\n      | undefined;\n\n    if (newLeaderboardRowController) {\n      newLeaderboardRowController.playerId.setValue(item.id);\n\n      newLeaderboardRowController.rankCell.setTrait(rankCell);\n      newLeaderboardRowController.nameCell.setTrait(nameCell);\n      newLeaderboardRowController.levelCell.setTrait(levelCell);\n      newLeaderboardRowController.teamCell.setTrait(teamCell);\n      newLeaderboardRowController.kdCell.setTrait(kdCell);\n      newLeaderboardRowController.updateRow(item, rank);\n\n      [\"rank\", \"name\", \"level\", \"team\", \"kd\"].forEach(function (key) {\n        const view = Object.values(\n          newLeaderboardRowController.row.attachView().leaf.attachView().cells.views\n        ).find((v) => v?.key === key) as TextCellView | undefined;\n        if (view) {\n          (\n            newLeaderboardRowController[`${key}Cell` as \"rankCell\"] as TraitViewRef<\n              LeaderboardRowController,\n              TextCellTrait,\n              TextCellView\n            >\n          ).setView(view, null, key);\n        }\n      });\n    }\n  }\n\n  @ValueDownlink({\n    // laneUri: `leaderboard`,\n    consumed: true,\n    didSet(value: SwimRecord): void {\n      let items = Object.values(value.toObject() as Record<any, PlayerDetails>);\n\n      // reverse order of items if already synced; necessary for determining direction of rank change\n      if (this.owner._didSync) {\n        items = items.reverse();\n      }\n\n      items.forEach((item, index) => {\n        const rank = (\n          this.owner._didSync ? Math.abs(index - this.owner.LEADERBOARD_SIZE) : index + 1\n        ).toFixed(0);\n\n        if (!item.tag) {\n          return;\n        }\n\n        if (!this.owner._didSync) {\n          this.owner.createLeaderboardRowController(rank, item);\n        } else {\n          const rowController = this.owner.getChild(rank, LeaderboardRowController);\n          const playerId = item.id;\n          let change: PlayerChange = \"none\";\n\n          if (!playerId || !rowController) {\n            return;\n          }\n\n          const currentPlayerId = rowController.playerId.value;\n          if (currentPlayerId && currentPlayerId !== playerId) {\n            const prevRank = Object.values(this.owner.rows.controllers).find(\n              (c) => c?.playerId.value === playerId\n            );\n            if (prevRank !== undefined) {\n              change = \"falling\";\n            } else {\n              change = \"rising\";\n            }\n          }\n\n          rowController.updateRow(item, rank, change);\n        }\n      });\n\n      this.owner._didSync = true;\n    },\n  })\n  readonly leaderboardDownlink!: ValueDownlink<this>;\n}\n","import { BoardController, BoardView } from \"@swim/panel\";\nimport { ControllerRef, TraitViewRef } from \"@swim/controller\";\nimport { Model, Trait } from \"@swim/model\";\nimport { ViewRef } from \"@swim/view\";\nimport { PanelView } from \"@swim/panel\";\nimport { TableTrait, TextColTrait } from \"@swim/ux\";\nimport { Look } from \"@swim/theme\";\nimport { LeaderboardTableController } from \"./LeaderboardTableController\";\n\nexport class LeaderboardController extends BoardController {\n  constructor() {\n    super();\n\n    const boardView = this.sheet.attachView();\n    const panelView = this.panel.insertView(boardView);\n    const tablePanel = this.tablePanel.insertView(panelView);\n\n    // create table model; append header and column traits to model\n    const tableModel = new Model();\n    tableModel.mount();\n    const tableTrait = new TableTrait();\n    tableModel.setTrait(\"table\", tableTrait);\n    tableTrait.header.insertTrait();\n    tableTrait.appendTrait(TextColTrait, \"rank\").set({\n      layout: { key: \"rank\", grow: 1, textColor: Look.labelColor },\n      label: \"Rank\",\n    });\n    tableTrait.appendTrait(TextColTrait, \"name\").set({\n      layout: { key: \"name\", grow: 3 },\n      label: \"Player\",\n    });\n    tableTrait.appendTrait(TextColTrait, \"level\").set({\n      layout: { key: \"level\", grow: 1, textColor: Look.labelColor },\n      label: \"Level\",\n    });\n    // this.levelColTrait.setTrait(levelColTrait);\n    tableTrait.appendTrait(TextColTrait, \"team\").set({\n      layout: { key: \"team\", grow: 1, textColor: Look.labelColor },\n      label: \"Team\",\n    });\n    tableTrait.appendTrait(TextColTrait, \"kd\").set({\n      layout: { key: \"kd\", grow: 3, textColor: Look.labelColor },\n      label: \"KD Ratio\",\n    });\n\n    // mount tableController; set its model; insert its view\n    this.tableController.attachController().mount();\n    this.tableController.attachController().tableModel.set(tableModel);\n    this.tableController.attachController().table.insertView(tablePanel);\n    this.tableController.attachController().table.setTrait(tableTrait);\n\n    // add event listeners for handling sorting to header cells\n    this.tableController.attachController().header.setUpSortableCells();\n  }\n\n  @TraitViewRef({\n    extends: true,\n    createView(): BoardView {\n      const mainElement = document.createElement(\"main\");\n      const boardView = new BoardView(mainElement).set({\n        style: {\n          width: \"100%\",\n          flexGrow: 1,\n          flexShrink: 1,\n          flexBasis: \"0px\",\n          margin: \"0px\",\n          backgroundColor: \"#212121\",\n        },\n      });\n\n      return boardView;\n    },\n  })\n  override readonly sheet!: TraitViewRef<this, Trait, BoardView> & BoardController[\"sheet\"];\n\n  @ViewRef({\n    viewType: PanelView,\n    initView(panelView: PanelView) {\n      panelView.set({\n        classList: [\"panel-leaderboardController\"],\n      });\n      this.owner.tablePanel.insertView(panelView);\n    },\n  })\n  readonly panel!: ViewRef<this, PanelView>;\n\n  @ViewRef({\n    extends: true,\n    createView(): PanelView {\n      return PanelView.create();\n    },\n    initView(panelView: PanelView): void {\n      super.initView(panelView);\n      panelView.node.classList.add(\"main-controller__panel-view\");\n      panelView.node.style.backgroundColor = \"#181818\";\n      panelView.node.style.overflowY = \"scroll\";\n      panelView.set({\n        unitWidth: 1,\n        unitHeight: 1,\n      });\n    },\n  })\n  readonly tablePanel!: ViewRef<this, PanelView>;\n\n  @ControllerRef({\n    controllerType: LeaderboardTableController,\n    extends: true,\n  })\n  readonly tableController!: ControllerRef<this, LeaderboardTableController>;\n}\n","import { BoardController } from \"@swim/panel\";\nimport { View, ViewRef } from \"@swim/view\";\nimport { HtmlView } from \"@swim/dom\";\nimport { ControllerRef } from \"@swim/controller\";\nimport { LeaderboardController } from \"./leaderboard/LeaderboardController\";\nimport { ValueDownlink } from \"@swim/client\";\nimport { Value } from \"@swim/structure\";\nimport { Uri } from \"@swim/uri\";\n\nexport class AppController extends BoardController {\n  constructor() {\n    super();\n\n    // insert appBar view\n    this.initBoard();\n\n    const urlParams = new URLSearchParams(window.location.search);\n\n    let host = urlParams.get(\"host\");\n    const baseUri = Uri.parse(document.location.href);\n    if (!host) {\n      host = baseUri\n        .base()\n        .withScheme(baseUri.schemeName === \"https\" ? \"warps\" : \"warp\")\n        .toString();\n    }\n    const nodeUri = \"/match\";\n\n    // set up and match stats downlink\n    this.matchStatsDownlink.setHostUri(host);\n    this.matchStatsDownlink.setNodeUri(nodeUri);\n    this.matchStatsDownlink.open();\n\n    this.playerStatsDownlink.setHostUri(host);\n    this.playerStatsDownlink.open();\n  }\n\n  protected initBoard() {\n    const boardView = this.sheet.attachView().set({\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        boxSizing: \"border-box\",\n      },\n    });\n    boardView.node.style.backgroundColor = \"#181818\";\n    this.appBarView.insertView(boardView);\n    this.leaderboardController.attachController();\n  }\n\n  @ViewRef({\n    viewType: HtmlView,\n    createView() {\n      const nav = document.createElement(\"nav\");\n      nav.style.backgroundColor = \"#181818\";\n      return new HtmlView(nav).set({\n        style: {\n          width: \"100%\",\n          height: \"auto\",\n          flexGrow: 0,\n          flexShrink: 0,\n          flexBasis: \"auto\",\n          boxSizing: \"border-box\",\n          paddingTop: \"16px\",\n          paddingRight: \"48px\",\n          paddingBottom: \"16px\",\n          paddingLeft: \"16px\",\n        },\n      });\n    },\n    initView(appBarView: HtmlView): void {\n      const container = appBarView.appendChild(\"div\").set({\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"flex-start\",\n          boxSizing: \"border-box\",\n        },\n      });\n      // insert NStream logo icon\n      // container.insertChild(HtmlIconView, null, \"nStreamIcon\").setIntrinsic({\n      //   graphics: VectorIcon.create(\n      //     64,\n      //     64,\n      //     \"M0,0H64V64H0Z M5,5V59H59V5Z M44,38.78V46L25,29.55V46H20V18Z M39,25V18H44V29.33Z\"\n      //   ),\n      //   style: {\n      //     width: \"48px\",\n      //     height: \"48px\",\n      //     marginRight: \"16px\",\n      //   },\n      //   classList: [\"n-stream-icon\"],\n      // });\n\n      // insert Swim logo\n      const imgEl = document.createElement(\"img\");\n      imgEl.src = \"./assets/swim-logo.png\";\n      container.insertChild(new HtmlView(imgEl), null, \"swimLogo\").set({\n        style: {\n          width: \"48px\",\n          height: \"48px\",\n          marginRight: \"16px\",\n        },\n        classList: [\"swim-logo\"],\n      });\n\n      // insert details container\n      const detailsContainer = container.appendChild(\"div\", \"app-bar-details-container\").setIntrinsic({\n        style: {\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          flexBasis: \"0px\",\n          flexGrow: 1,\n          flexShrink: 1,\n          justifyContent: \"space-between\",\n          alignItems: \"flex-start\",\n        },\n      });\n\n      // insert NStream title text\n      const title = detailsContainer.appendChild(\"h1\").set({\n        style: {\n          width: \"auto\",\n          fontWeight: \"600\",\n          fontSize: \"20px\",\n          lineHeight: \"24px\",\n          color: \"#FFFFFF\",\n          margin: \"0px\",\n          boxSizing: \"border-box\",\n        },\n      });\n      title.node.innerText = \"Swim - Game Leaderboard\";\n\n      // insert NStream subtitle text\n      const subtitle = detailsContainer.appendChild(\"p\").set({\n        style: {\n          fontWeight: \"400\",\n          fontSize: \"12px\",\n          lineHeight: \"17px\",\n          color: \"#FFFFFF\",\n          boxSizing: \"border-box\",\n          marginTop: \"8px\",\n          marginRight: \"0px\",\n          marginBottom: \"0px\",\n          marginLeft: \"0px\",\n        },\n      });\n      subtitle.node.innerText = \"1.0.0b\";\n\n      const detailsInnerContainer = detailsContainer.appendChild(\"div\").set({\n        style: {\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"flex-start\",\n          boxSizing: \"border-box\",\n        },\n        classList: [\"details-inner-container\"],\n      });\n\n      // const activePlayerCount = detailsInnerContainer.appendChild(\"p\");\n      this.owner.totalPlayerCount.insertView(detailsInnerContainer);\n\n      this.owner.totalMatchesCount.insertView(detailsInnerContainer);\n    },\n  })\n  readonly appBarView!: ViewRef<this, View>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    createView(): HtmlView {\n      const el = new HtmlView(document.createElement(\"p\")).set({\n        style: {\n          fontWeight: \"400\",\n          fontSize: \"12px\",\n          lineHeight: \"17px\",\n          color: \"#FFFFFF\",\n          boxSizing: \"border-box\",\n          marginTop: \"8px\",\n          marginRight: \"0px\",\n          marginBottom: \"0px\",\n          marginLeft: \"0px\",\n        },\n      });\n      el.node.innerText = \"total players\";\n      return el;\n    },\n    updateNumPlayers(numPlayers: number): void {\n      this.attachView().node.innerText = `${numPlayers} total players`;\n    },\n  })\n  readonly totalPlayerCount!: ViewRef<this, HtmlView> & {\n    updateNumPlayers(numPlayers: number): void;\n  };\n\n  @ViewRef({\n    viewType: HtmlView,\n    createView(): HtmlView {\n      const el = new HtmlView(document.createElement(\"p\")).set({\n        style: {\n          fontWeight: \"400\",\n          fontSize: \"12px\",\n          lineHeight: \"17px\",\n          color: \"#FFFFFF\",\n          boxSizing: \"border-box\",\n          marginTop: \"8px\",\n          marginRight: \"0px\",\n          marginBottom: \"0px\",\n          marginLeft: \"0px\",\n        },\n      });\n      el.node.innerText = \"total matches\";\n      return el;\n    },\n    updateNumMatches(numMatches: number): void {\n      this.attachView().node.innerText = `${numMatches} total matches`;\n    },\n  })\n  readonly totalMatchesCount!: ViewRef<this, HtmlView> & {\n    updateNumMatches(numMatches: number): void;\n  };\n\n  @ControllerRef({\n    controllerType: LeaderboardController,\n    controllerKey: \"body\",\n    didAttachController(controller: LeaderboardController) {\n      controller.sheet.insertView(this.owner.sheet.attachView());\n    },\n  })\n  readonly leaderboardController!: ControllerRef<this, LeaderboardController, [LeaderboardController]>;\n\n  @ValueDownlink({\n    laneUri: \"stats\",\n    didSet(newValue) {\n      this.owner.totalMatchesCount.updateNumMatches(newValue.get(\"gameCount\").numberValue(0));\n    },\n  })\n  readonly matchStatsDownlink!: ValueDownlink<this, Value>;\n\n  @ValueDownlink({\n    nodeUri: \"/player\",\n    laneUri: \"stats\",\n    didSet(newValue) {\n      this.owner.totalPlayerCount.updateNumPlayers(newValue.get(\"playerCount\").numberValue(0));\n    },\n  })\n  readonly playerStatsDownlink!: ValueDownlink<this, Value>;\n}\n"],"names":["__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","f","TypeError","kind","key","target","prototype","descriptor","Object","getOwnPropertyDescriptor","name","_","done","i","length","context","p","access","addInitializer","push","result","get","set","init","unshift","defineProperty","__runInitializers","thisArg","value","useValue","arguments","call","SuppressedError","error","suppressed","message","e","Error","KdSeriesView","HtmlView","_a","_classSuper","constructor","div","document","createElement","classList","add","super","this","DEFAULT_STROKE","_instanceExtraInitializers","ELECTRIC_TEAL","TANGERINE_SCREAM","containerView","_containerView_initializers","canvasView","_canvasView_initializers","graphView","_graphView_initializers","plotView","_plotView_initializers","setView","insertView","addPoint","x","y","attachView","insertDataPoint","DataPointView","updateStroke","change","newStroke","stroke","Timing","fromInit","easing","t0","dt","_containerView_decorators","ViewRef","viewType","initView","view","style","display","width","height","touchAction","userSelect","_canvasView_decorators","CanvasView","createView","create","wheelEvents","mouseEvents","pointerEvents","touchEvents","_graphView_decorators","GraphView","domainTracking","_plotView_decorators","LinePlotView","hitMode","owner","strokeWidth","static","private","has","obj","metadata","_metadata","LeaderboardRowController","RowController","trait","_resetChangeStateTimer","row","_row_initializers","leaf","_leaf_initializers","_trait_initializers","rankCell","_rankCell_initializers","nameCell","_nameCell_initializers","levelCell","_levelCell_initializers","teamCell","_teamCell_initializers","teamTeamSpan","_teamTeamSpan_initializers","teamPctSpan","_teamPctSpan_initializers","kdCell","_kdCell_initializers","kdCellSeries","_kdCellSeries_initializers","kdCellText","_kdCellText_initializers","playerId","_playerId_initializers","changeState","_changeState_initializers","statsHistoryDownlink","_statsHistoryDownlink_initializers","urlParams","URLSearchParams","window","location","search","host","baseUri","Uri","parse","href","base","withScheme","schemeName","toString","setHostUri","updateRow","item","rank","id","tag","level","kills","totalKills","deaths","totalDeaths","kd","toFixed","t","teamCount","Donut","ct","Hubble","attachTrait","content","node","innerText","pctText","Math","round","setValue","_row_decorators","TraitViewRef","RowView","extends","rowView","_leaf_decorators","LeafView","leafView","Number","parseInt","_b","backgroundColor","viewDidPress","viewDidLongPress","_trait_decorators","TraitRef","traitType","RowTrait","_rankCell_decorators","TextCellTrait","TextCellView","fontSize","color","opacity","_nameCell_decorators","_levelCell_decorators","_teamCell_decorators","justifyContent","firstChild","removeChild","undefined","_teamTeamSpan_decorators","alignItems","marginRight","marginBottom","_teamPctSpan_decorators","marginTop","_kdCell_decorators","CellTrait","CellView","_kdCellSeries_decorators","_kdCellText_decorators","marginLeft","_playerId_decorators","Property","valueType","didSetValue","newValue","nodeUri","opened","oldKdCellSeries","getChild","newKdCellSeries","prependChild","close","setNodeUri","open","_changeState_decorators","String","oldValue","remove","clearTimeout","setTimeout","_statsHistoryDownlink_decorators","MapDownlink","laneUri","didUpdate","timestamp","numberValue","kdRatio","LeaderboardTableController","TableController","LEADERBOARD_SIZE","_didSync","tableModel","_tableModel_initializers","table","_table_initializers","header","_header_initializers","headerLevelCellView","_headerLevelCellView_initializers","headerKdCellView","_headerKdCellView_initializers","rows","_rows_initializers","leaderboardMetric","_leaderboardMetric_initializers","leaderboardDownlink","_leaderboardDownlink_initializers","initFasteners","didMount","setLaneUri","createLeaderboardRowController","rowModel","Model","rowTrait","setTrait","getOrCreateCell","appendChild","newLeaderboardRowController","values","controllers","find","c","forEach","cells","views","v","_tableModel_decorators","_table_decorators","traitWillAttachRow","targetTrait","addTrait","_header_decorators","TraitViewControllerRef","setUpSortableCells","levelView","_c","childMap","kdView","_e","_d","_headerLevelCellView_decorators","textDecorationLine","textDecorationColor","cursor","that","addEventListener","_headerKdCellView_decorators","_rows_decorators","TraitViewControllerSet","controllerDidEnterLeafView","hover","focus","controllerDidLeaveLeafView","unfocus","controllerDidPressLeafView","input","event","highlight","toggle","createController","traitKey","leaderboardRowController","setKey","_leaderboardMetric_decorators","_leaderboardDownlink_decorators","ValueDownlink","consumed","didSet","items","toObject","reverse","index","abs","rowController","currentPlayerId","prevRank","LeaderboardController","BoardController","sheet","_sheet_initializers","panel","_panel_initializers","tablePanel","_tablePanel_initializers","tableController","_tableController_initializers","boardView","panelView","mount","tableTrait","TableTrait","insertTrait","appendTrait","TextColTrait","layout","grow","textColor","Look","labelColor","label","attachController","_sheet_decorators","mainElement","BoardView","flexGrow","flexShrink","flexBasis","margin","_panel_decorators","PanelView","_tablePanel_decorators","overflowY","unitWidth","unitHeight","_tableController_decorators","ControllerRef","controllerType","AppController","appBarView","_appBarView_initializers","totalPlayerCount","_totalPlayerCount_initializers","totalMatchesCount","_totalMatchesCount_initializers","leaderboardController","_leaderboardController_initializers","matchStatsDownlink","_matchStatsDownlink_initializers","playerStatsDownlink","_playerStatsDownlink_initializers","initBoard","flexDirection","boxSizing","_appBarView_decorators","nav","paddingTop","paddingRight","paddingBottom","paddingLeft","container","imgEl","src","insertChild","detailsContainer","setIntrinsic","title","fontWeight","lineHeight","subtitle","detailsInnerContainer","_totalPlayerCount_decorators","el","updateNumPlayers","numPlayers","_totalMatchesCount_decorators","updateNumMatches","numMatches","_leaderboardController_decorators","controllerKey","didAttachController","controller","_matchStatsDownlink_decorators","_playerStatsDownlink_decorators"],"mappings":"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"}