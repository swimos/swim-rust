{"version":3,"file":"swim-ux.min.js","sources":["../../../../node_modules/tslib/tslib.es6.mjs","../../swim-button/main/ButtonGlow.ts","../../swim-button/main/ButtonMembrane.ts","../../swim-button/main/FloatingButton.ts","../../swim-button/main/ButtonItem.ts","../../swim-button/main/ButtonStack.ts","../../swim-button/main/IconButton.ts","../../swim-button/main/DisclosureButton.ts","../../swim-toolbar/main/ToolLayout.ts","../../swim-toolbar/main/BarLayout.ts","../../swim-toolbar/main/ToolView.ts","../../swim-toolbar/main/TitleToolView.ts","../../swim-toolbar/main/ButtonToolView.ts","../../swim-toolbar/main/SearchToolView.ts","../../swim-toolbar/main/ToolController.ts","../../swim-toolbar/main/TitleToolController.ts","../../swim-toolbar/main/ButtonToolController.ts","../../swim-toolbar/main/SearchToolController.ts","../../swim-toolbar/main/BarView.ts","../../swim-toolbar/main/BarController.ts","../../swim-token/main/TokenView.ts","../../swim-token/main/InputTokenView.ts","../../swim-table/main/ColLayout.ts","../../swim-table/main/TableLayout.ts","../../swim-table/main/CellView.ts","../../swim-table/main/TextCellView.ts","../../swim-table/main/IconCellView.ts","../../swim-table/main/DisclosureCellView.ts","../../swim-table/main/CellTrait.ts","../../swim-table/main/TextCellTrait.ts","../../swim-table/main/IconCellTrait.ts","../../swim-table/main/CellController.ts","../../swim-table/main/TextCellController.ts","../../swim-table/main/IconCellController.ts","../../swim-table/main/LeafView.ts","../../swim-table/main/LeafTrait.ts","../../swim-table/main/LeafController.ts","../../swim-table/main/RowView.ts","../../swim-table/main/RowTrait.ts","../../swim-table/main/RowController.ts","../../swim-table/main/ColView.ts","../../swim-table/main/TextColView.ts","../../swim-table/main/IconColView.ts","../../swim-table/main/DisclosureColView.ts","../../swim-table/main/ColTrait.ts","../../swim-table/main/TextColTrait.ts","../../swim-table/main/IconColTrait.ts","../../swim-table/main/ColController.ts","../../swim-table/main/TextColController.ts","../../swim-table/main/IconColController.ts","../../swim-table/main/HeaderView.ts","../../swim-table/main/HeaderTrait.ts","../../swim-table/main/HeaderController.ts","../../swim-table/main/TableView.ts","../../swim-table/main/TableTrait.ts","../../swim-table/main/TableController.ts","../../swim-window/main/ScrimView.ts","../../swim-window/main/PopoverView.ts","../../swim-window/main/DrawerView.ts","../../swim-window/main/DrawerButton.ts","../../swim-sheet/main/SheetView.ts","../../swim-sheet/main/SheetController.ts","../../swim-sheet/main/NavBarController.ts","../../swim-sheet/main/StackView.ts","../../swim-sheet/main/StackController.ts","../../swim-sheet/main/AppBarController.ts","../../swim-sheet/main/FolioView.ts","../../swim-sheet/main/FolioController.ts","../../swim-sheet/main/TabBarController.ts","../../swim-sheet/main/BinderView.ts","../../swim-sheet/main/BinderController.ts","../../swim-panel/main/PanelView.ts","../../swim-panel/main/PanelController.ts","../../swim-panel/main/BoardView.ts","../../swim-panel/main/BoardController.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Look} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {HtmlView} from \"@swim/dom\";\n\n/** @public */\nexport type ButtonGlowState = \"ready\" | \"glowing\" | \"pulsing\" | \"fading\";\n\n/** @public */\nexport class ButtonGlow extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.glowState = \"ready\";\n    this.glowTimer = 0;\n    this.initGlow();\n  }\n\n  protected initGlow(): void {\n    this.setIntrinsic<ButtonGlow>({\n      classList: [\"button-glow\"],\n      style: {\n        position: \"absolute\",\n        width: Length.zero(),\n        height: Length.zero(),\n        borderRadius: Length.pct(50),\n        pointerEvents: \"none\",\n      },\n    });\n  }\n\n  readonly glowState: ButtonGlowState;\n\n  /** @internal */\n  glowTimer: number;\n\n  @Animator({\n    inherits: true,\n    get parent(): Animator<any, Length | null, any> {\n      return this.owner.style.left;\n    },\n    didTransition(): void {\n      this.owner.didGlow();\n    },\n  })\n  readonly left!: Animator<this, Length | null>;\n\n  @Animator({\n    inherits: true,\n    get parent(): Animator<any, number | undefined, any> {\n      return this.owner.style.opacity;\n    },\n    didTransition(opacity: number | undefined): void {\n      if (this.owner.glowState === \"pulsing\" && opacity === 0) {\n        this.owner.didPulse();\n      } else if (this.owner.glowState === \"fading\" && opacity === 0) {\n        this.owner.didFade();\n      }\n    },\n  })\n  readonly opacity!: Animator<this, number | undefined>;\n\n  protected override didMount(): void {\n    if (this.style.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n      let highlightColor = this.getLookOr(Look.highlightColor, null);\n      if (highlightColor !== null) {\n        highlightColor = highlightColor.alpha(1);\n      }\n      this.style.backgroundColor.setIntrinsic(highlightColor);\n    }\n    super.didMount();\n  }\n\n  protected override onUnmount(): void {\n    (this as Mutable<this>).glowState = \"ready\";\n    this.cancelGlow();\n    this.remove();\n    super.onUnmount();\n  }\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (this.style.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n      let highlightColor = theme.getOr(Look.highlightColor, mood, null);\n      if (highlightColor !== null) {\n        highlightColor = highlightColor.alpha(1);\n      }\n      this.style.backgroundColor.setIntrinsic(highlightColor);\n    }\n  }\n\n  glow(clientX: number, clientY: number, timing?: TimingLike | boolean, delay: number = 0): void {\n    if (this.glowState !== \"ready\") {\n      return;\n    }\n    this.cancelGlow();\n    if (delay !== 0) {\n      const glow = this.glow.bind(this, clientX, clientY, timing, 0);\n      this.glowTimer = setTimeout(glow, delay) as any;\n      return;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    this.willGlow();\n    const offsetParent = this.node.offsetParent;\n    if (offsetParent === null) {\n      return;\n    }\n    const clientBounds = offsetParent.getBoundingClientRect();\n    const cx = clientX - clientBounds.left;\n    const cy = clientY - clientBounds.top;\n    const rx = Math.max(cx, clientBounds.width - cx);\n    const ry = Math.max(cy, clientBounds.height - cy);\n    const r = Math.sqrt(rx * rx + ry * ry);\n    const highlightColor = this.getLook(Look.highlightColor);\n    const opacity = highlightColor !== void 0 ? highlightColor.alpha() : 0.1;\n    this.style.opacity.setIntrinsic(opacity);\n    if (timing !== false) {\n      this.style.setIntrinsic({\n        left: cx,\n        top: cy,\n      });\n      this.style.setIntrinsic({\n        left: cx - r,\n        top: cy - r,\n        width: 2 * r,\n        height: 2 * r,\n      }, timing);\n    } else {\n      this.style.setIntrinsic({\n        left: cx - r,\n        top: cy - r,\n        width: 2 * r,\n        height: 2 * r,\n      });\n      this.didGlow();\n    }\n    (this as Mutable<this>).glowState = \"glowing\";\n  }\n\n  protected willGlow(): void {\n    // hook\n  }\n\n  protected didGlow(): void {\n    // hook\n  }\n\n  cancelGlow(): void {\n    if (this.glowTimer !== 0) {\n      clearTimeout(this.glowTimer);\n      this.glowTimer = 0;\n    }\n  }\n\n  pulse(clientX: number, clientY: number, timing?: TimingLike | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    if (this.glowState === \"ready\") {\n      this.glow(clientX, clientY, timing);\n    }\n    if (this.glowState === \"glowing\") {\n      this.willPulse();\n      if (timing !== false) {\n        this.style.opacity.setIntrinsic(0, timing);\n      } else {\n        this.style.opacity.setIntrinsic(0);\n        this.didPulse();\n      }\n      (this as Mutable<this>).glowState = \"pulsing\";\n    }\n  }\n\n  protected willPulse(): void {\n    // hook\n  }\n\n  protected didPulse(): void {\n    this.remove();\n  }\n\n  fade(clientX: number, clientY: number, timing?: TimingLike | boolean): void {\n    if (this.glowState === \"ready\") {\n      this.cancelGlow();\n      this.didFade();\n    } else if (this.glowState === \"glowing\") {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      this.willFade();\n      if (timing !== false) {\n        this.style.opacity.setIntrinsic(0, timing);\n      } else {\n        this.style.opacity.setIntrinsic(0);\n        this.didFade();\n      }\n    }\n    (this as Mutable<this>).glowState = \"fading\";\n  }\n\n  protected willFade(): void {\n    // hook\n  }\n\n  protected didFade(): void {\n    this.remove();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Property} from \"@swim/component\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport {ButtonGlow} from \"./ButtonGlow\";\n\n/** @public */\nexport class ButtonMembrane extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initMembrane(node);\n  }\n\n  protected initMembrane(node: HTMLElement): void {\n    this.classList.add(\"membrane\");\n  }\n\n  @Property({valueType: Boolean, value: true, inherits: true})\n  readonly glows!: Property<this, boolean>;\n\n  protected glow(input: PositionGestureInput): void {\n    if (input.detail instanceof ButtonGlow) {\n      input.detail.fade(input.x, input.y);\n      input.detail = void 0;\n    }\n    if (input.detail === void 0) {\n      const delay = input.inputType === \"mouse\" ? 0 : 100;\n      input.detail = this.prependChild(ButtonGlow);\n      (input.detail as ButtonGlow).glow(input.x, input.y, void 0, delay);\n    }\n  }\n\n  @PositionGesture({\n    bindsOwner: true,\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (this.owner.glows.value) {\n        this.owner.glow(input);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      } else if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        input.clearHoldTimer();\n        this.beginHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      } else if (input.detail instanceof ButtonGlow) {\n        input.detail.pulse(input.x, input.y);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n      if (input.detail instanceof ButtonGlow) {\n        input.detail.fade(input.x, input.y);\n        input.detail = void 0;\n      }\n    },\n  })\n  readonly gesture!: PositionGesture<this, HtmlView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Angle} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport type {Presence} from \"@swim/style\";\nimport {PresenceAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Feel} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {HtmlIconView} from \"@swim/graphics\";\nimport {ButtonMembrane} from \"./ButtonMembrane\";\n\n/** @public */\nexport type FloatingButtonType = \"regular\" | \"mini\";\n\n/** @public */\nexport class FloatingButton extends ButtonMembrane {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initButton();\n  }\n\n  protected initButton(): void {\n    this.setIntrinsic<FloatingButton>({\n      classList: [\"floating-button\"],\n      style: {\n        position: \"relative\",\n        borderRadius: Length.pct(50),\n        overflow: \"hidden\",\n        userSelect: \"none\",\n        cursor: \"pointer\",\n      },\n    });\n  }\n\n  @Property({\n    valueType: String,\n    value: \"regular\",\n    init(): void {\n      this.updateButtonType(this.value);\n    },\n    didSetValue(newButtonType: FloatingButtonType, oldButtonType: FloatingButtonType): void {\n      if (newButtonType === oldButtonType) {\n        return;\n      }\n      this.updateButtonType(newButtonType);\n    },\n    updateButtonType(buttonType: FloatingButtonType): void {\n      if (buttonType === \"regular\") {\n        this.owner.style.setIntrinsic({\n          width: 56,\n          height: 56,\n        });\n      } else if (buttonType === \"mini\") {\n        this.owner.style.setIntrinsic({\n          width: 40,\n          height: 40,\n        });\n      }\n    },\n  })\n  readonly buttonType!: Property<this, FloatingButtonType> & {\n    updateButtonType(buttonType: FloatingButtonType): void;\n  };\n\n  @ViewSet({\n    viewType: HtmlIconView,\n    observes: true,\n    viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, iconView: HtmlIconView): void {\n      const iconColor = theme.getOr(Look.backgroundColor, mood, null);\n      iconView.iconColor.set(iconColor, timing);\n    },\n    viewDidAnimate(iconView: HtmlIconView): void {\n      if (!iconView.style.opacity.tweening && iconView !== this.owner.icon.view) {\n        this.deleteView(iconView);\n      }\n    },\n  })\n  readonly icons!: ViewSet<this, HtmlIconView> & Observes<HtmlIconView>;\n\n  @ViewRef({\n    viewType: HtmlIconView,\n    createView(): HtmlIconView {\n      const iconView = HtmlIconView.create().setIntrinsic({\n        style: {\n          position: \"absolute\",\n          left: 0,\n          top: 0,\n          width: this.owner.style.width.state,\n          height: this.owner.style.height.state,\n          opacity: 0,\n          transform: Transform.rotate(Angle.deg(-90)),\n          pointerEvents: \"none\",\n        },\n        iconLayout: {width: 24, height: 24},\n      });\n      iconView.iconColor.setAffinity(Affinity.Extrinsic);\n      return iconView;\n    },\n    push(icon: Graphics, timing?: TimingLike | boolean): HtmlIconView {\n      if (timing === void 0 && this.owner.icons.viewCount === 0) {\n        timing = false;\n      } else if (timing === void 0 || timing === true) {\n        timing = this.owner.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n\n      const oldIconView = this.view;\n      if (oldIconView !== null) {\n        if (timing !== false) {\n          oldIconView.style.setIntrinsic({\n            opacity: 0,\n            transform: Transform.rotate(Angle.deg(90)),\n          }, timing);\n        } else {\n          this.owner.icons.deleteView(oldIconView);\n        }\n      }\n\n      const newIconView = this.createView().setIntrinsic({\n        graphics: icon,\n      });\n      this.owner.icons.attachView(newIconView);\n      this.insertView(void 0, newIconView);\n      newIconView.style.setIntrinsic({\n        opacity: 1,\n        transform: Transform.rotate(Angle.deg(0)),\n      }, timing);\n\n      return newIconView;\n    },\n    pop(timing?: TimingLike | boolean): HtmlIconView | null {\n      if (timing === void 0 || timing === true) {\n        timing = this.owner.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n\n      const oldIconView = this.view;\n      let newIconView: HtmlIconView | null = null;\n      const iconViews = this.owner.icons.views;\n      for (const viewId in iconViews) {\n        const iconView = iconViews[viewId]!;\n        if (iconView !== oldIconView) {\n          newIconView = iconView;\n        }\n      }\n\n      if (oldIconView !== null) {\n        if (timing !== false) {\n          oldIconView.style.setIntrinsic({\n            opacity: 0,\n            transform: Transform.rotate(Angle.deg(-90)),\n          }, timing);\n          this.owner.icons.insertView(void 0, oldIconView);\n        } else {\n          this.owner.icons.deleteView(oldIconView);\n        }\n      }\n\n      if (newIconView !== null) {\n        this.insertView(void 0, newIconView);\n        newIconView.style.setIntrinsic({\n          opacity: 1,\n          transform: Transform.rotate(Angle.deg(0)),\n        }, timing);\n      }\n\n      return oldIconView;\n    },\n  })\n  readonly icon!: ViewRef<this, HtmlIconView> & {\n    push(icon: Graphics, timing?: TimingLike | boolean): HtmlIconView;\n    pop(timing?: TimingLike | boolean): HtmlIconView | null;\n  };\n\n  @PresenceAnimator({\n    inherits: true,\n  })\n  readonly presence!: PresenceAnimator<this, Presence | undefined>;\n\n  @PositionGesture({\n    extends: true,\n    didStartHovering(): void {\n      this.owner.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n      if (this.owner.style.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n        const timing = this.owner.getLook(Look.timing);\n        this.owner.style.backgroundColor.setIntrinsic(this.owner.getLookOr(Look.accentColor, null), timing);\n      }\n    },\n    didStopHovering(): void {\n      this.owner.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      if (this.owner.style.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n        const timing = this.owner.getLook(Look.timing);\n        this.owner.style.backgroundColor.setIntrinsic(this.owner.getLookOr(Look.accentColor, null), timing);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      // nop\n    },\n  })\n  override readonly gesture!: PositionGesture<this, HtmlView>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n\n    this.style.backgroundColor.setIntrinsic(theme.getOr(Look.accentColor, mood, null), timing);\n\n    let shadow = theme.getOr(Look.shadow, Mood.floating, null);\n    if (shadow !== null) {\n      const shadowColor = shadow.color;\n      const phase = this.presence.getPhaseOr(1);\n      shadow = shadow.withColor(shadowColor.alpha(shadowColor.alpha() * phase));\n    }\n    this.style.boxShadow.setIntrinsic(shadow, timing);\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    let shadow = this.getLookOr(Look.shadow, Mood.floating, null);\n    if (shadow !== null) {\n      const shadowColor = shadow.color;\n      const phase = this.presence.getPhaseOr(1);\n      shadow = shadow.withColor(shadowColor.alpha(shadowColor.alpha() * phase));\n    }\n    this.style.boxShadow.setIntrinsic(shadow);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Presence} from \"@swim/style\";\nimport {PresenceAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {View} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {HtmlIconView} from \"@swim/graphics\";\nimport {FloatingButton} from \"./FloatingButton\";\n\n/** @public */\nexport class ButtonItem extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initButtonItem();\n  }\n\n  protected initButtonItem(): void {\n    this.classList.add(\"button-item\");\n    this.style.position.setIntrinsic(\"relative\");\n    const button = this.createButton();\n    if (button !== null) {\n      this.setChild(\"button\", button);\n    }\n  }\n\n  protected createButton(): FloatingButton | null {\n    const button = FloatingButton.create();\n    button.buttonType.setIntrinsic(\"mini\");\n    return button;\n  }\n\n  get button(): FloatingButton | null {\n    const childView = this.getChild(\"button\");\n    return childView instanceof FloatingButton ? childView : null;\n  }\n\n  get icon(): HtmlIconView | null {\n    const button = this.button;\n    const buttonIcon = button !== null ? button.icon : null;\n    return buttonIcon !== null ? buttonIcon.view : null;\n  }\n\n  get label(): HtmlView | null {\n    const childView = this.getChild(\"label\");\n    return childView instanceof HtmlView ? childView : null;\n  }\n\n  @PresenceAnimator({inherits: true})\n  readonly presence!: PresenceAnimator<this, Presence | undefined>;\n\n  protected override onLayout(): void {\n    super.onLayout();\n    const phase = this.presence.getPhaseOr(1);\n    const button = this.button;\n    if (button !== null) {\n      this.style.width.setIntrinsic(button.style.width.state);\n      this.style.height.setIntrinsic(button.style.height.state);\n    }\n    const label = this.label;\n    if (label !== null) {\n      label.style.opacity.setIntrinsic(phase);\n    }\n  }\n\n  protected override onInsertChild(childView: View, targetView: View | null): void {\n    super.onInsertChild(childView, targetView);\n    const childKey = childView.key;\n    if (childKey === \"button\" && childView instanceof FloatingButton) {\n      this.onInsertButton(childView);\n    } else if (childKey === \"label\" && childView instanceof HtmlView) {\n      this.onInsertLabel(childView);\n    }\n  }\n\n  protected override onRemoveChild(childView: View): void {\n    const childKey = childView.key;\n    if (childKey === \"button\" && childView instanceof FloatingButton) {\n      this.onRemoveButton(childView);\n    } else if (childKey === \"label\" && childView instanceof HtmlView) {\n      this.onRemoveLabel(childView);\n    }\n    super.onRemoveChild(childView);\n  }\n\n  protected onInsertButton(button: FloatingButton): void {\n    // hook\n  }\n\n  protected onRemoveButton(button: FloatingButton): void {\n    // hook\n  }\n\n  protected onInsertLabel(label: HtmlView): void {\n    label.style.setIntrinsic({\n      display: \"block\",\n      position: \"absolute\",\n      top: 0,\n      right: 40 + 16,\n      bottom: 0,\n      fontSize: 17,\n      fontWeight: \"500\",\n      lineHeight: 40,\n      whiteSpace: \"nowrap\",\n      color: Look.labelColor,\n      opacity: this.presence.getPhaseOr(0),\n    });\n  }\n\n  protected onRemoveLabel(label: HtmlView): void {\n    // hook\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {EventHandler} from \"@swim/component\";\nimport {Presence} from \"@swim/style\";\nimport {PresenceAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport {NodeView} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {ModalView} from \"@swim/dom\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {VectorIcon} from \"@swim/graphics\";\nimport {FloatingButton} from \"./FloatingButton\";\nimport {ButtonItem} from \"./ButtonItem\";\nimport type {ButtonStackObserver} from \"./ButtonStackObserver\";\n\n/** @public */\nexport class ButtonStack extends HtmlView implements ModalView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initButtonStack();\n  }\n\n  protected initButtonStack(): void {\n    this.setIntrinsic<ButtonStack>({\n      classList: [\"button-stack\"],\n      style: {\n        display: \"block\",\n        position: \"relative\",\n        width: 56,\n        height: 56,\n        opacity: 1,\n        userSelect: \"none\",\n        cursor: \"pointer\",\n      },\n    });\n    this.button.insertView();\n  }\n\n  declare readonly observerType?: Class<ButtonStackObserver>;\n\n  /** @internal */\n  @Property({valueType: Number, value: 0})\n  readonly stackHeight!: Property<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 28, updateFlags: View.NeedsLayout})\n  readonly buttonSpacing!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({valueType: Number, value: 20, updateFlags: View.NeedsLayout})\n  readonly itemSpacing!: ThemeAnimator<this, number>;\n\n  @Animator({\n    inherits: true,\n    get parent(): Animator<any, number | undefined, any> {\n      return this.owner.style.opacity;\n    },\n    didTransition(opacity: number | undefined): void {\n      if (opacity === 1) {\n        this.owner.didShowStack();\n      } else if (opacity === 0) {\n        this.owner.didHideStack();\n      }\n    },\n  })\n  readonly opacity!: Animator<this, number | undefined>;\n\n  get closeIcon(): Graphics {\n    return ButtonStack.closeIcon;\n  }\n\n  @ViewRef({\n    viewType: FloatingButton,\n    viewKey: true,\n    binds: true,\n    willAttachView(buttonView: FloatingButton, target: View | null): void {\n      buttonView.presence.setIntrinsic(Presence.presented());\n      if (this.owner.presence.presented || this.owner.presence.presenting) {\n        buttonView.icon.push(this.owner.closeIcon);\n      }\n    },\n    initView(buttonView: FloatingButton): void {\n      buttonView.style.zIndex.setIntrinsic(0);\n    },\n  })\n  readonly button!: ViewRef<this, FloatingButton>;\n\n  @ViewSet({\n    viewType: ButtonItem,\n    binds: true,\n    willAttachView(itemView: ButtonItem, target: View | null): void {\n      itemView.style.setIntrinsic({\n        position: \"absolute\",\n        right: 8,\n        bottom: 8,\n        left: 8,\n        zIndex: 0,\n      });\n    },\n  })\n  readonly items!: ViewSet<this, ButtonItem>;\n\n  insertItem(item: ButtonItem, index?: number, key?: string): void {\n    if (index === void 0) {\n      index = this.node.childNodes.length - 1;\n    }\n    this.insertChild(item.node, this.node.childNodes[1 + index] || null, key);\n  }\n\n  removeItems(): void {\n    const childNodes = this.node.childNodes;\n    for (let i = childNodes.length - 1; i >= 0; i -= 1) {\n      const childView = NodeView.get(childNodes[i]);\n      if (childView instanceof ButtonItem) {\n        this.removeChild(childView);\n      }\n    }\n  }\n\n  /** @override */\n  @PresenceAnimator({\n    value: Presence.dismissed(),\n    updateFlags: View.NeedsLayout,\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, null);\n    },\n    didSetValue(presence: Presence): void {\n      this.owner.callObservers(\"viewDidSetPresence\", presence, this.owner);\n      this.owner.modality.setIntrinsic(presence.phase);\n    },\n    willPresent(): void {\n      this.owner.callObservers(\"viewWillPresent\", this.owner);\n      const buttonView = this.owner.button.view;\n      if (buttonView !== null) {\n        const timing = this.timing;\n        buttonView.icon.push(this.owner.closeIcon, timing !== null ? timing : void 0);\n      }\n      this.owner.modal.present();\n    },\n    didPresent(): void {\n      this.owner.callObservers(\"viewDidPresent\", this.owner);\n    },\n    willDismiss(): void {\n      this.owner.callObservers(\"viewWillDismiss\", this.owner);\n      const buttonView = this.owner.button.view;\n      if (buttonView !== null && buttonView.icons.viewCount > 1) {\n        const timing = this.timing;\n        buttonView.icon.pop(timing !== null ? timing : void 0);\n      }\n    },\n    didDismiss(): void {\n      this.owner.callObservers(\"viewDidDismiss\", this.owner);\n    },\n  })\n  readonly presence!: PresenceAnimator<this, Presence>;\n\n  /** @override */\n  @Property({\n    valueType: Number,\n    value: 0,\n    didSetValue(modality: number): void {\n      this.owner.callObservers(\"viewDidSetModality\", modality, this.owner);\n    },\n  })\n  readonly modality!: Property<this, number>;\n\n  @PositionGesture({\n    binds: true,\n    viewKey: \"button\",\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.defaultPrevented || this.owner.presence.presented) {\n        return;\n      }\n      const stackHeight = this.owner.stackHeight.value;\n      const phase = Math.min(Math.max(0, -(input.y - input.y0) / (0.5 * stackHeight)), 1);\n      this.owner.presence.setPhase(phase);\n      if (phase > 0.1) {\n        input.clearHoldTimer();\n        if (!this.owner.presence.presenting) {\n          this.owner.presence.set(this.owner.presence.value.asPresenting());\n        }\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.defaultPrevented) {\n        return;\n      }\n      const phase = this.owner.presence.getPhase();\n      if (input.t - input.t0 < input.holdDelay) {\n        if (phase < 0.1 || this.owner.presence.presented) {\n          this.owner.presence.dismiss();\n        } else {\n          this.owner.presence.present();\n        }\n      } else {\n        if (phase < 0.5) {\n          this.owner.presence.dismiss();\n        } else if (phase >= 0.5) {\n          this.owner.presence.present();\n        }\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.buttons === 2) {\n        this.owner.presence.toggle();\n      } else {\n        const phase = this.owner.presence.getPhase();\n        if (phase < 0.1 || this.owner.presence.presented) {\n          this.owner.presence.dismiss();\n        } else {\n          this.owner.presence.present();\n        }\n      }\n    },\n    didLongPress(input: PositionGestureInput): void {\n      input.preventDefault();\n      this.owner.presence.toggle();\n    },\n  })\n  readonly gesture!: PositionGesture<this, HtmlView>;\n\n  @EventHandler({\n    eventType: \"click\",\n    handle(event: MouseEvent): void {\n      if (event.target === this.owner.button.view?.node) {\n        event.stopPropagation();\n      }\n    },\n  })\n  readonly click!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"contextmenu\",\n    handle(event: MouseEvent): void {\n      event.preventDefault();\n    },\n  })\n  readonly contextmenu!: EventHandler<this>;\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutStack();\n  }\n\n  protected layoutStack(): void {\n    const phase = this.presence.getPhase();\n    const childNodes = this.node.childNodes;\n    const childCount = childNodes.length;\n    const buttonView = this.button.view;\n    let zIndex = childCount - 1;\n    let itemIndex = 0;\n    let stackHeight = 0;\n    let y: number;\n    if (buttonView !== null) {\n      buttonView.style.zIndex.setIntrinsic(childCount);\n      y = buttonView.style.height.pxValue();\n    } else {\n      y = 0;\n    }\n    const buttonSpacing = this.buttonSpacing.value;\n    const itemSpacing = this.itemSpacing.value;\n    for (let i = 0; i < childCount; i += 1) {\n      const childView = NodeView.get(childNodes[i]);\n      if (childView instanceof ButtonItem) {\n        if (itemIndex === 0) {\n          stackHeight += buttonSpacing;\n          y += buttonSpacing;\n        } else {\n          stackHeight += itemSpacing;\n          y += itemSpacing;\n        }\n        const dy = childView.style.height.pxValue();\n        childView.style.setIntrinsic({\n          display: phase === 0 ? \"none\" : \"flex\",\n          bottom: phase * y,\n          zIndex,\n        });\n        y += dy;\n        stackHeight += dy;\n        itemIndex += 1;\n        zIndex -= 1;\n      }\n    }\n    this.stackHeight.set(stackHeight);\n  }\n\n  show(timing?: TimingLike | boolean): void {\n    if (this.opacity.state !== 1) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      this.willShowStack();\n      if (timing !== false) {\n        this.opacity.setIntrinsic(1, timing);\n      } else {\n        this.opacity.setIntrinsic(1);\n        this.didShowStack();\n      }\n    }\n  }\n\n  protected willShowStack(): void {\n    this.callObservers(\"buttonStackWillShow\", this);\n    this.style.display.set(\"block\");\n  }\n\n  protected didShowStack(): void {\n    this.requireUpdate(View.NeedsLayout);\n    this.callObservers(\"buttonStackDidShow\", this);\n  }\n\n  hide(timing?: TimingLike | boolean): void {\n    if (this.opacity.state !== 0) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      this.willHideStack();\n      if (timing !== false) {\n        this.opacity.setIntrinsic(0, timing);\n      } else {\n        this.opacity.setIntrinsic(0);\n        this.didHideStack();\n      }\n    }\n  }\n\n  protected willHideStack(): void {\n    this.callObservers(\"buttonStackWillHide\", this);\n  }\n\n  protected didHideStack(): void {\n    this.style.display.set(\"none\");\n    this.requireUpdate(View.NeedsLayout);\n    this.callObservers(\"buttonStackDidHide\", this);\n  }\n\n  @Lazy\n  static get closeIcon(): Graphics {\n    return VectorIcon.create(24, 24, \"M19,6.4L17.6,5L12,10.6L6.4,5L5,6.4L10.6,12L5,17.6L6.4,19L12,13.4L17.6,19L19,17.6L13.4,12Z\");\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {EventHandler} from \"@swim/component\";\nimport {Angle} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Feel} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport type {HtmlView} from \"@swim/dom\";\nimport {Graphics} from \"@swim/graphics\";\nimport {IconLayout} from \"@swim/graphics\";\nimport {Icon} from \"@swim/graphics\";\nimport type {IconView} from \"@swim/graphics\";\nimport {IconGraphicsAnimator} from \"@swim/graphics\";\nimport {SvgIconView} from \"@swim/graphics\";\nimport type {ButtonObserver} from \"./ButtonObserver\";\nimport {ButtonMembrane} from \"./ButtonMembrane\";\n\n/** @public */\nexport class IconButton extends ButtonMembrane implements IconView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initButton();\n    this.initTheme();\n  }\n\n  declare readonly observerType?: Class<HtmlViewObserver & ButtonObserver>;\n\n  protected initButton(): void {\n    this.setIntrinsic<IconButton>({\n      classList: [\"icon-button\"],\n      style: {\n        position: \"relative\",\n        width: 44,\n        height: 44,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: 4,\n        overflow: \"hidden\",\n        userSelect: \"none\",\n        cursor: \"pointer\",\n      },\n    });\n  }\n\n  protected initTheme(): void {\n    this.modifyTheme(Feel.default, [[Feel.translucent, 1]]);\n  }\n\n  /** @override */\n  @Animator({\n    valueType: IconLayout,\n    initValue(): IconLayout | null {\n      return IconLayout.of(24, 24);\n    },\n    updateFlags: View.NeedsLayout\n  })\n  readonly iconLayout!: Animator<this, IconLayout | null>;\n\n  /** @override */\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetState(iconColor: Color | null): void {\n      const timing = this.timing !== null ? this.timing : false;\n      this.owner.graphics.setIntrinsic(this.owner.graphics.state, timing);\n    },\n  })\n  readonly iconColor!: ThemeAnimator<this, Color | null>;\n\n  /** @override */\n  @ThemeAnimator({\n    extends: IconGraphicsAnimator,\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsLayout,\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  @ViewSet({\n    viewType: SvgIconView,\n    observes: true,\n    viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, iconView: SvgIconView): void {\n      const iconColor = theme.getOr(Look.backgroundColor, mood, null);\n      iconView.iconColor.set(iconColor, timing);\n    },\n    viewDidAnimate(iconView: SvgIconView): void {\n      if (!iconView.attributes.opacity.tweening && iconView !== this.owner.icon.view) {\n        this.deleteView(iconView);\n      }\n    },\n    viewWillLayout(iconView: SvgIconView): void {\n      const width = this.owner.style.width.pxValue();\n      const height = this.owner.style.height.pxValue();\n      iconView.attributes.setIntrinsic({\n        width, height,\n        viewBox: \"0 0 \" + width + \" \" + height,\n      });\n    },\n  })\n  readonly icons!: ViewSet<this, SvgIconView> & Observes<SvgIconView>;\n\n  @ViewRef({\n    viewType: SvgIconView,\n    createView(): SvgIconView {\n      const iconView = SvgIconView.create().setIntrinsic({\n        attributes: {\n          opacity: 0,\n          pointerEvents: \"none\",\n        },\n        style: {\n          position: \"absolute\",\n          left: 0,\n          top: 0,\n          transform: Transform.rotate(Angle.deg(-90)),\n        },\n      });\n      iconView.iconLayout.setInherits(true);\n      iconView.iconColor.setInherits(true);\n      return iconView;\n    },\n    push(icon: Graphics, timing?: TimingLike | boolean): SvgIconView {\n      if (timing === void 0 && this.owner.icons.viewCount === 0) {\n        timing = false;\n      } else if (timing === void 0 || timing === true) {\n        timing = this.owner.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n\n      const oldIconView = this.view;\n      if (oldIconView !== null) {\n        if (timing !== false) {\n          oldIconView.attributes.setIntrinsic({\n            opacity: 0,\n            transform: Transform.rotate(Angle.deg(90)),\n          }, timing);\n        } else {\n          this.owner.icons.deleteView(oldIconView);\n        }\n      }\n\n      const newIconView = this.createView().setIntrinsic({\n        graphics: icon,\n      });\n      this.owner.icons.attachView(newIconView);\n      this.insertView(void 0, newIconView);\n      newIconView.attributes.setIntrinsic({\n        opacity: 1,\n        transform: Transform.rotate(Angle.deg(0)),\n      }, timing);\n\n      return newIconView;\n    },\n    pop(timing?: TimingLike | boolean): SvgIconView | null {\n      if (timing === void 0 || timing === true) {\n        timing = this.owner.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n\n      const oldIconView = this.view;\n      let newIconView: SvgIconView | null = null;\n      const iconViews = this.owner.icons.views;\n      for (const viewId in iconViews) {\n        const iconView = iconViews[viewId]!;\n        if (iconView !== oldIconView) {\n          newIconView = iconView;\n        }\n      }\n\n      if (oldIconView !== null) {\n        if (timing !== false) {\n          oldIconView.attributes.setIntrinsic({\n            opacity: 0,\n            transform: Transform.rotate(Angle.deg(-90)),\n          }, timing);\n          this.owner.icons.insertView(void 0, oldIconView);\n        } else {\n          this.owner.icons.deleteView(oldIconView);\n        }\n      }\n\n      if (newIconView !== null) {\n        this.insertView(void 0, newIconView);\n        newIconView.attributes.setIntrinsic({\n          opacity: 1,\n          transform: Transform.rotate(Angle.deg(0)),\n        }, timing);\n      }\n\n      return oldIconView;\n    },\n  })\n  readonly icon!: ViewRef<this, SvgIconView> & {\n    push(icon: Graphics, timing?: TimingLike | boolean): SvgIconView;\n    pop(timing?: TimingLike | boolean): SvgIconView | null;\n  };\n\n  @Property({valueType: Boolean, value: true})\n  readonly hovers!: Property<this, boolean>;\n\n  @PositionGesture({\n    extends: true,\n    didStartHovering(): void {\n      if (this.owner.hovers.value) {\n        this.owner.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n        const timing = this.owner.getLook(Look.timing);\n        if (this.owner.style.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n          this.owner.style.backgroundColor.setIntrinsic(this.owner.getLookOr(Look.backgroundColor, null), timing);\n        }\n      }\n    },\n    didStopHovering(): void {\n      this.owner.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      const timing = this.owner.getLook(Look.timing);\n      if (this.owner.style.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n        let backgroundColor = this.owner.getLookOr(Look.backgroundColor, null);\n        if (backgroundColor !== null) {\n          backgroundColor = backgroundColor.alpha(0);\n        }\n        this.owner.style.backgroundColor.setIntrinsic(backgroundColor, timing);\n      }\n    },\n  })\n  override readonly gesture!: PositionGesture<this, HtmlView>;\n\n  @EventHandler({\n    eventType: \"click\",\n    handle(event: MouseEvent): void {\n      event.stopPropagation();\n      this.owner.callObservers(\"buttonDidPress\", this.owner);\n    },\n  })\n  readonly click!: EventHandler<this>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (this.style.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n      let backgroundColor = this.getLookOr(Look.backgroundColor, null);\n      if (!this.gesture.hovering && backgroundColor instanceof Color) {\n        backgroundColor = backgroundColor.alpha(0);\n      }\n      this.style.backgroundColor.setIntrinsic(backgroundColor, timing);\n    }\n    if (!this.graphics.derived) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setIntrinsic(newGraphics, oldGraphics.isThemed() ? timing : false);\n      }\n    }\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.requireUpdate(View.NeedsLayout);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Angle} from \"@swim/math\";\nimport {Transform} from \"@swim/math\";\nimport {Affinity} from \"@swim/component\";\nimport {Color} from \"@swim/style\";\nimport type {Expansion} from \"@swim/style\";\nimport {ExpansionAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {SvgView} from \"@swim/dom\";\n\n/** @public */\nexport class DisclosureButton extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initDisclosureButton();\n  }\n\n  protected initDisclosureButton(): void {\n    this.setIntrinsic<DisclosureButton>({\n      classList: [\"disclosure-button\"],\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexGrow: 1,\n        flexShrink: 0,\n        cursor: \"pointer\",\n      },\n    });\n\n    const icon = this.appendChild(SvgView, \"icon\").attributes.setIntrinsic({\n      width: 24,\n      height: 24,\n      viewBox: \"0 0 24 24\",\n    });\n    icon.appendChild(\"polygon\", \"arrow\").attributes.setIntrinsic({\n      points: \"0 4 -6 -2 -4.59 -3.41 0 1.17 4.59 -3.41 6 -2\",\n      transform: Transform.translate(12, 12).rotate(Angle.deg(0)),\n    });\n  }\n\n  get icon(): SvgView {\n    return this.getChild(\"icon\") as SvgView;\n  }\n\n  get arrow(): SvgView {\n    const icon = this.icon;\n    return icon.getChild(\"arrow\") as SvgView;\n  }\n\n  @ExpansionAnimator({inherits: true, updateFlags: View.NeedsLayout})\n  readonly disclosure!: ExpansionAnimator<this, Expansion | null>;\n\n  @ThemeAnimator({valueType: Color, look: Look.textColor, inherits: true, updateFlags: View.NeedsLayout})\n  readonly collapsedColor!: ThemeAnimator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Color, look: Look.accentColor, inherits: true, updateFlags: View.NeedsLayout})\n  readonly expandedColor!: ThemeAnimator<this, Color | null>;\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    const phase = this.disclosure.getPhaseOr(1);\n    const collapsedColor = this.collapsedColor.value;\n    const expandedColor = this.expandedColor.value;\n    if (collapsedColor !== null && expandedColor !== null && this.arrow.attributes.fill.hasAffinity(Affinity.Intrinsic)) {\n      const colorInterpolator = collapsedColor.interpolateTo(expandedColor);\n      this.arrow.attributes.fill.setIntrinsic(colorInterpolator(phase));\n    }\n    const transform = Transform.translate(12, 12).rotate(Angle.deg(-180 * phase));\n    this.arrow.attributes.transform.setIntrinsic(transform);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport {StepInterpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport {PxLength} from \"@swim/math\";\nimport type {PresenceLike} from \"@swim/style\";\nimport {Presence} from \"@swim/style\";\n\n/** @public */\nexport type ToolLayoutLike = ToolLayout | ToolLayoutInit;\n\n/** @public */\nexport interface ToolLayoutInit {\n  key?: string;\n  grow?: number;\n  shrink?: number;\n  basis?: LengthLike;\n  align?: number;\n  inAlign?: number;\n  outAlign?: number;\n  overlap?: string | undefined;\n  overpad?: LengthLike;\n  presence?: PresenceLike;\n  inPresence?: PresenceLike | null;\n  outPresence?: PresenceLike | null;\n  width?: LengthLike | null;\n  left?: LengthLike | null;\n  right?: LengthLike | null;\n}\n\n/** @public */\nexport class ToolLayout implements Interpolate<ToolLayout>, Equals, Equivalent, Debug {\n  constructor(key: string, grow: number, shrink: number, basis: Length,\n              align: number, inAlign: number, outAlign: number,\n              overlap: string | undefined, overpad: Length,\n              presence: Presence, inPresence: Presence | null, outPresence: Presence | null,\n              width: Length | null, left: Length | null, right: Length | null) {\n    this.key = key;\n    this.grow = grow;\n    this.shrink = shrink;\n    this.basis = basis;\n    this.align = align;\n    this.inAlign = inAlign;\n    this.outAlign = outAlign;\n    this.overlap = overlap;\n    this.overpad = overpad;\n    this.presence = presence;\n    this.inPresence = inPresence;\n    this.outPresence = outPresence;\n    this.width = width;\n    this.left = left;\n    this.right = right;\n  }\n\n  likeType?(like: ToolLayoutInit): void;\n\n  readonly key: string;\n\n  withKey(key: string): ToolLayout {\n    return this.copy(key, this.grow, this.shrink, this.basis, this.align,\n                     this.inAlign, this.outAlign, this.overlap, this.overpad,\n                     this.presence, this.inPresence, this.outPresence,\n                     this.width, this.left, this.right);\n  }\n\n  readonly grow: number;\n\n  readonly shrink: number;\n\n  readonly basis: Length;\n\n  withFlex(grow: number, shrink: number, basis?: LengthLike): ToolLayout {\n    if (basis !== void 0) {\n      basis = Length.fromLike(basis);\n    } else {\n      basis = this.basis;\n    }\n    return this.copy(this.key, grow, shrink, basis, this.align,\n                     this.inAlign, this.outAlign, this.overlap, this.overpad,\n                     this.presence, this.inPresence, this.outPresence,\n                     this.width, this.left, this.right);\n  }\n\n  readonly align: number;\n\n  readonly inAlign: number;\n\n  readonly outAlign: number;\n\n  withAlign(align: number, inAlign?: number, outAlign?: number): ToolLayout {\n    if (inAlign === void 0) {\n      inAlign = this.inAlign;\n    }\n    if (outAlign === void 0) {\n      outAlign = this.outAlign;\n    }\n    return this.copy(this.key, this.grow, this.shrink, this.basis, align,\n                     inAlign, outAlign, this.overlap, this.overpad,\n                     this.presence, this.inPresence, this.outPresence,\n                     this.width, this.left, this.right);\n  }\n\n  readonly overlap: string | undefined;\n\n  withOverlap(overlap: string | undefined): ToolLayout {\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.align,\n                     this.inAlign, this.outAlign, overlap, this.overpad,\n                     this.presence, this.inPresence, this.outPresence,\n                     this.width, this.left, this.right);\n  }\n\n  readonly overpad: Length;\n\n  withOverpad(overpad: LengthLike): ToolLayout {\n    overpad = Length.fromLike(overpad);\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.align,\n                     this.inAlign, this.outAlign, this.overlap, overpad,\n                     this.presence, this.inPresence, this.outPresence,\n                     this.width, this.left, this.right);\n  }\n\n  readonly presence: Presence;\n\n  readonly inPresence: Presence | null;\n\n  readonly outPresence: Presence | null;\n\n  withPresence(presence: PresenceLike, inPresence?: PresenceLike | null, outPresence?: PresenceLike | null): ToolLayout;\n  withPresence(presence: PresenceLike | undefined, inPresence: PresenceLike | null | undefined, outPresence: PresenceLike | null | undefined): ToolLayout;\n  withPresence(presence: PresenceLike | undefined, inPresence?: PresenceLike | null, outPresence?: PresenceLike | null): ToolLayout {\n    if (presence === void 0) {\n      presence = this.presence;\n    } else {\n      presence = Presence.fromLike(presence);\n    }\n    if (inPresence === void 0) {\n      inPresence = this.inPresence;\n    } else {\n      inPresence = Presence.fromLike(inPresence);\n    }\n    if (outPresence === void 0) {\n      outPresence = this.outPresence;\n    } else {\n      outPresence = Presence.fromLike(outPresence);\n    }\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.align,\n                     this.inAlign, this.outAlign, this.overlap, this.overpad,\n                     presence, inPresence, outPresence,\n                     this.width, this.left, this.right);\n  }\n\n  readonly width: Length | null;\n\n  readonly left: Length | null;\n\n  readonly right: Length | null;\n\n  resized(width: LengthLike | null, left: LengthLike | null, right: LengthLike | null): ToolLayout {\n    if (width !== null) {\n      width = Length.fromLike(width);\n    }\n    if (left !== null) {\n      left = Length.fromLike(left);\n    }\n    if (right !== null) {\n      right = Length.fromLike(right);\n    }\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.align,\n                     this.inAlign, this.outAlign, this.overlap, this.overpad,\n                     this.presence, this.inPresence, this.outPresence,\n                     width, left, right);\n  }\n\n  protected copy(key: string, grow: number, shrink: number, basis: Length,\n                 align: number, inAlign: number, outAlign: number,\n                 overlap: string | undefined, overpad: Length,\n                 presence: Presence, inPresence: Presence | null, outPresence: Presence | null,\n                 width: Length | null, left: Length | null, right: Length | null): ToolLayout {\n    return new ToolLayout(key, grow, shrink, basis, align, inAlign, outAlign,\n                          overlap, overpad, presence, inPresence, outPresence,\n                          width, left, right);\n  }\n\n  interpolateTo(that: ToolLayout): Interpolator<ToolLayout>;\n  interpolateTo(that: unknown): Interpolator<ToolLayout> | null;\n  interpolateTo(that: unknown): Interpolator<ToolLayout> | null {\n    if (that instanceof ToolLayout) {\n      return ToolLayoutInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ToolLayout) {\n      return this.key === that.key\n          && Equivalent(this.grow, that.grow, epsilon)\n          && Equivalent(this.shrink, that.shrink, epsilon)\n          && this.basis.equivalentTo(that.basis, epsilon)\n          && Equivalent(this.align, that.align, epsilon)\n          && Equivalent(this.inAlign, that.inAlign, epsilon)\n          && Equivalent(this.outAlign, that.outAlign, epsilon)\n          && this.overlap === that.overlap\n          && this.overpad.equivalentTo(that.overpad, epsilon)\n          && this.presence.equivalentTo(that.presence, epsilon)\n          && Equivalent(this.inPresence, that.inPresence, epsilon)\n          && Equivalent(this.outPresence, that.outPresence, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ToolLayout) {\n      return this.key === that.key && this.grow === that.grow && this.shrink === that.shrink\n          && this.basis.equals(that.basis) && this.align === that.align\n          && this.inAlign === that.inAlign && this.outAlign === that.outAlign\n          && this.overlap === that.overlap && this.overpad.equals(that.overpad)\n          && this.presence.equals(that.presence) && Equals(this.inPresence, that.inPresence)\n          && Equals(this.outPresence, that.outPresence) && Equals(this.width, that.width)\n          && Equals(this.left, that.left) && Equals(this.right, that.right);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"ToolLayout\").write(46/*'.'*/).write(\"create\").write(40/*'('*/)\n                   .debug(this.key).write(\", \").debug(this.grow).write(\", \")\n                   .debug(this.shrink).write(\", \").debug(this.basis).write(41/*')'*/);\n    if (this.align !== 0.5 || this.inAlign !== this.align || this.outAlign !== this.align) {\n      output = output.write(46/*'.'*/).write(\"withAlign\").write(40/*'('*/)\n                     .debug(this.align).write(\", \").debug(this.inAlign).write(\", \")\n                     .debug(this.outAlign).write(41/*')'*/);\n    }\n    if (this.overlap !== void 0) {\n      output = output.write(46/*'.'*/).write(\"withOverlap\").write(40/*'('*/)\n                     .debug(this.overlap).write(41/*')'*/);\n    }\n    if (!this.overpad.equals(Length.zero())) {\n      output = output.write(46/*'.'*/).write(\"withOverpad\").write(40/*'('*/)\n                     .debug(this.overpad).write(41/*')'*/);\n    }\n    if (!this.presence.presented || this.inPresence === null || !this.inPresence.dismissed\n                                 || this.outPresence === null || !this.outPresence.dismissed) {\n      output = output.write(46/*'.'*/).write(\"withPresence\").write(40/*'('*/)\n                     .debug(this.presence).write(\", \").debug(this.inPresence).write(\", \")\n                     .debug(this.outPresence).write(41/*')'*/);\n    }\n    if (this.width !== null || this.left !== null || this.right !== null) {\n      output = output.write(46/*'.'*/).write(\"resized\").write(40/*'('*/)\n                     .debug(this.width).write(\", \").debug(this.left).write(\", \")\n                     .debug(this.right).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(key: string, grow?: number, shrink?: number, basis?: LengthLike,\n                align?: number, inAlign?: number, outAlign?: number,\n                overlap?: string | undefined, overpad?: LengthLike,\n                presence?: PresenceLike, inPresence?: PresenceLike | null,\n                outPresence?: PresenceLike | null): ToolLayout {\n    if (grow === void 0) {\n      grow = 0;\n    }\n    if (shrink === void 0) {\n      shrink = 1;\n    }\n    if (basis !== void 0) {\n      basis = Length.fromLike(basis);\n    } else {\n      basis = Length.zero();\n    }\n    if (align === void 0) {\n      align = 0.5;\n    }\n    if (inAlign === void 0) {\n      inAlign = align;\n    }\n    if (outAlign === void 0) {\n      outAlign = align;\n    }\n    if (overpad !== void 0) {\n      overpad = Length.fromLike(overpad);\n    } else {\n      overpad = Length.zero();\n    }\n    if (presence !== void 0) {\n      presence = Presence.fromLike(presence);\n    } else {\n      presence = Presence.presented();\n    }\n    if (inPresence === void 0) {\n      inPresence = Presence.dismissed();\n    } else {\n      inPresence = Presence.fromLike(inPresence);\n    }\n    if (outPresence === void 0) {\n      outPresence = Presence.dismissed();\n    } else {\n      outPresence = Presence.fromLike(outPresence);\n    }\n    return new ToolLayout(key, grow, shrink, basis, align, inAlign, outAlign,\n                          overlap, overpad, presence, inPresence, outPresence,\n                          null, null, null);\n  }\n\n  static fromLike(value: ToolLayoutLike): ToolLayout {\n    if (value === void 0 || value === null || value instanceof ToolLayout) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return ToolLayout.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: ToolLayoutInit): ToolLayout {\n    let key = init.key;\n    if (key === void 0) {\n      key = \"\";\n    }\n    let grow = init.grow;\n    if (grow === void 0) {\n      grow = 0;\n    }\n    let shrink = init.shrink;\n    if (shrink === void 0) {\n      shrink = 1;\n    }\n    let basis = init.basis;\n    if (basis !== void 0) {\n      basis = Length.fromLike(basis);\n    } else {\n      basis = Length.zero();\n    }\n    let align = init.align;\n    if (align === void 0) {\n      align = 0.5;\n    }\n    let inAlign = init.inAlign;\n    if (inAlign === void 0) {\n      inAlign = align;\n    }\n    let outAlign = init.outAlign;\n    if (outAlign === void 0) {\n      outAlign = align;\n    }\n    const overlap = init.overlap;\n    let overpad = init.overpad;\n    if (overpad !== void 0) {\n      overpad = Length.fromLike(overpad);\n    } else {\n      overpad = Length.zero();\n    }\n    let presence = init.presence;\n    if (presence !== void 0) {\n      presence = Presence.fromLike(presence);\n    } else {\n      presence = Presence.presented();\n    }\n    let inPresence = init.inPresence;\n    if (inPresence === void 0) {\n      inPresence = Presence.presented();\n    } else {\n      inPresence = Presence.fromLike(inPresence);\n    }\n    let outPresence = init.outPresence;\n    if (outPresence === void 0) {\n      outPresence = Presence.presented();\n    } else {\n      outPresence = Presence.fromLike(outPresence);\n    }\n    let width = init.width;\n    if (width !== void 0 && width !== null) {\n      width = Length.fromLike(width);\n    } else {\n      width = null;\n    }\n    let left = init.left;\n    if (left !== void 0 && left !== null) {\n      left = Length.fromLike(left);\n    } else {\n      left = null;\n    }\n    let right = init.right;\n    if (right !== void 0 && right !== null) {\n      right = Length.fromLike(right);\n    } else {\n      right = null;\n    }\n    return new ToolLayout(key, grow, shrink, basis, align, inAlign, outAlign,\n                          overlap, overpad, presence, inPresence, outPresence,\n                          width, left, right);\n  }\n}\n\n/** @internal */\nexport interface ToolLayoutInterpolator extends Interpolator<ToolLayout> {\n  /** @internal */\n  readonly key: string;\n  /** @internal */\n  readonly growInterpolator: Interpolator<number>;\n  /** @internal */\n  readonly shrinkInterpolator: Interpolator<number>;\n  /** @internal */\n  readonly basisInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly alignInterpolator: Interpolator<number>;\n  /** @internal */\n  readonly inAlignInterpolator: Interpolator<number>;\n  /** @internal */\n  readonly outAlignInterpolator: Interpolator<number>;\n  /** @internal */\n  readonly overlapInterpolator: Interpolator<string | undefined>;\n  /** @internal */\n  readonly overpadInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly presenceInterpolator: Interpolator<Presence>;\n  /** @internal */\n  readonly inPresenceInterpolator: Interpolator<Presence | null>;\n  /** @internal */\n  readonly outPresenceInterpolator: Interpolator<Presence | null>;\n  /** @internal */\n  readonly widthInterpolator: Interpolator<Length | null>;\n  /** @internal */\n  readonly leftInterpolator: Interpolator<Length | null>;\n  /** @internal */\n  readonly rightInterpolator: Interpolator<Length | null>;\n\n  readonly 0: ToolLayout;\n\n  readonly 1: ToolLayout;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const ToolLayoutInterpolator = (function (_super: typeof Interpolator) {\n  const ToolLayoutInterpolator = function (l0: ToolLayout, l1: ToolLayout): ToolLayoutInterpolator {\n    const interpolator = function (u: number): ToolLayout {\n      const key = interpolator.key;\n      const grow = interpolator.growInterpolator(u);\n      const shrink = interpolator.shrinkInterpolator(u);\n      const basis = interpolator.basisInterpolator(u);\n      const align = interpolator.alignInterpolator(u);\n      const inAlign = interpolator.inAlignInterpolator(u);\n      const outAlign = interpolator.outAlignInterpolator(u);\n      const overlap = interpolator.overlapInterpolator(u === 0 ? 0 : 1);\n      const overpad = interpolator.overpadInterpolator(u);\n      const presence = interpolator.presenceInterpolator(u);\n      const inPresence = interpolator.inPresenceInterpolator(u);\n      const outPresence = interpolator.outPresenceInterpolator(u);\n      const width = interpolator.widthInterpolator(u);\n      const left = interpolator.leftInterpolator(u);\n      const right = interpolator.rightInterpolator(u);\n      return new ToolLayout(key, grow, shrink, basis, align, inAlign, outAlign,\n                            overlap, overpad, presence, inPresence, outPresence,\n                            width, left, right);\n    } as ToolLayoutInterpolator;\n    Object.setPrototypeOf(interpolator, ToolLayoutInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).key = l1.key;\n    (interpolator as Mutable<typeof interpolator>).growInterpolator = Interpolator(l0.grow, l1.grow);\n    (interpolator as Mutable<typeof interpolator>).shrinkInterpolator = Interpolator(l0.shrink, l1.shrink);\n    (interpolator as Mutable<typeof interpolator>).basisInterpolator = l0.basis.interpolateTo(l1.basis);\n    (interpolator as Mutable<typeof interpolator>).alignInterpolator = Interpolator(l0.align, l1.align);\n    (interpolator as Mutable<typeof interpolator>).inAlignInterpolator = Interpolator(l0.inAlign, l1.inAlign);\n    (interpolator as Mutable<typeof interpolator>).outAlignInterpolator = Interpolator(l0.outAlign, l1.outAlign);\n    (interpolator as Mutable<typeof interpolator>).overlapInterpolator = Interpolator(l0.overlap, l1.overlap);\n    (interpolator as Mutable<typeof interpolator>).overpadInterpolator = l0.overpad.interpolateTo(l1.overpad);\n    (interpolator as Mutable<typeof interpolator>).presenceInterpolator = l0.presence.interpolateTo(l1.presence);\n    (interpolator as Mutable<typeof interpolator>).inPresenceInterpolator = Interpolator(l0.inPresence, l1.inPresence);\n    (interpolator as Mutable<typeof interpolator>).outPresenceInterpolator = Interpolator(l0.outPresence, l1.outPresence);\n    const width0 = l0.width;\n    const width1 = l1.width;\n    if (l0.align !== l1.align && width0 instanceof PxLength && width1 instanceof PxLength) {\n      const phase = width0.value < width1.value ? 0 : 1;\n      (interpolator as Mutable<typeof interpolator>).widthInterpolator = StepInterpolator(width0, width1, phase);\n    } else {\n      (interpolator as Mutable<typeof interpolator>).widthInterpolator = Interpolator(width0, width1);\n    }\n    (interpolator as Mutable<typeof interpolator>).leftInterpolator = Interpolator(l0.left, l1.left);\n    (interpolator as Mutable<typeof interpolator>).rightInterpolator = Interpolator(l0.right, l1.right);\n    return interpolator;\n  } as {\n    (l0: ToolLayout, l1: ToolLayout): ToolLayoutInterpolator;\n\n    /** @internal */\n    prototype: ToolLayoutInterpolator;\n  };\n\n  ToolLayoutInterpolator.prototype = Object.create(_super.prototype);\n  ToolLayoutInterpolator.prototype.constructor = ToolLayoutInterpolator;\n\n  Object.defineProperty(ToolLayoutInterpolator.prototype, 0, {\n    get(this: ToolLayoutInterpolator): ToolLayout {\n      const key = this.key;\n      const grow = this.growInterpolator[0];\n      const shrink = this.shrinkInterpolator[0];\n      const basis = this.basisInterpolator[0];\n      const align = this.alignInterpolator[0];\n      const inAlign = this.inAlignInterpolator[0];\n      const outAlign = this.outAlignInterpolator[0];\n      const overlap = this.overlapInterpolator[0];\n      const overpad = this.overpadInterpolator[0];\n      const presence = this.presenceInterpolator[0];\n      const inPresence = this.inPresenceInterpolator[0];\n      const outPresence = this.outPresenceInterpolator[0];\n      const width = this.widthInterpolator[0];\n      const left = this.leftInterpolator[0];\n      const right = this.rightInterpolator[0];\n      return new ToolLayout(key, grow, shrink, basis, align, inAlign, outAlign,\n                            overlap, overpad, presence, inPresence, outPresence,\n                            width, left, right);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ToolLayoutInterpolator.prototype, 1, {\n    get(this: ToolLayoutInterpolator): ToolLayout {\n      const key = this.key;\n      const grow = this.growInterpolator[1];\n      const shrink = this.shrinkInterpolator[1];\n      const basis = this.basisInterpolator[1];\n      const align = this.alignInterpolator[1];\n      const inAlign = this.inAlignInterpolator[1];\n      const outAlign = this.outAlignInterpolator[1];\n      const overlap = this.overlapInterpolator[1];\n      const overpad = this.overpadInterpolator[1];\n      const presence = this.presenceInterpolator[1];\n      const inPresence = this.inPresenceInterpolator[1];\n      const outPresence = this.outPresenceInterpolator[1];\n      const width = this.widthInterpolator[1];\n      const left = this.leftInterpolator[1];\n      const right = this.rightInterpolator[1];\n      return new ToolLayout(key, grow, shrink, basis, align, inAlign, outAlign,\n                            overlap, overpad, presence, inPresence, outPresence,\n                            width, left, right);\n    },\n    configurable: true,\n  });\n\n  ToolLayoutInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ToolLayoutInterpolator) {\n      return this.key === that.key\n          && this.growInterpolator.equals(that.growInterpolator)\n          && this.shrinkInterpolator.equals(that.shrinkInterpolator)\n          && this.basisInterpolator.equals(that.basisInterpolator)\n          && this.alignInterpolator.equals(that.alignInterpolator)\n          && this.inAlignInterpolator.equals(that.inAlignInterpolator)\n          && this.outAlignInterpolator.equals(that.outAlignInterpolator)\n          && this.overlapInterpolator.equals(that.overlapInterpolator)\n          && this.overpadInterpolator.equals(that.overpadInterpolator)\n          && this.presenceInterpolator.equals(that.presenceInterpolator)\n          && this.inPresenceInterpolator.equals(that.inPresenceInterpolator)\n          && this.outPresenceInterpolator.equals(that.outPresenceInterpolator)\n          && this.widthInterpolator.equals(that.widthInterpolator)\n          && this.leftInterpolator.equals(that.leftInterpolator)\n          && this.rightInterpolator.equals(that.rightInterpolator);\n    }\n    return false;\n  };\n\n  return ToolLayoutInterpolator;\n})(Interpolator);\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport {Equals} from \"@swim/util\";\nimport type {Equivalent} from \"@swim/util\";\nimport type {Interpolate} from \"@swim/util\";\nimport {Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport {Presence} from \"@swim/style\";\nimport type {ToolLayoutLike} from \"./ToolLayout\";\nimport {ToolLayout} from \"./ToolLayout\";\n\n/** @public */\nexport type BarLayoutLike = BarLayout | BarLayoutInit;\n\n/** @public */\nexport interface BarLayoutInit {\n  width?: LengthLike | null;\n  left?: LengthLike | null;\n  right?: LengthLike | null;\n  spacing?: LengthLike | null;\n  tools: ToolLayoutLike[];\n}\n\n/** @public */\nexport class BarLayout implements Interpolate<BarLayout>, Equals, Equivalent, Debug {\n  constructor(width: Length | null, left: Length | null, right: Length | null,\n              spacing: Length | null, tools: readonly ToolLayout[]) {\n    this.width = width;\n    this.left = left;\n    this.right = right;\n    this.spacing = spacing;\n    this.tools = tools;\n  }\n\n  likeType?(like: BarLayoutInit): void;\n\n  readonly width: Length | null;\n\n  readonly left: Length | null;\n\n  readonly right: Length | null;\n\n  readonly spacing: Length | null;\n\n  readonly tools: readonly ToolLayout[];\n\n  getTool(key: string): ToolLayout | null {\n    const tools = this.tools;\n    for (let i = 0; i < tools.length; i += 1) {\n      const tool = tools[i]!;\n      if (key === tool.key) {\n        return tool;\n      }\n    }\n    return null;\n  }\n\n  resized(width: LengthLike, left?: LengthLike | null, right?: LengthLike | null,\n          spacing?: LengthLike | null): BarLayout {\n    width = Length.fromLike(width);\n    if (left === void 0) {\n      left = this.left;\n    } else if (left !== null) {\n      left = Length.fromLike(left);\n    }\n    if (right === void 0) {\n      right = this.right;\n    } else if (right !== null) {\n      right = Length.fromLike(right);\n    }\n    if (spacing === void 0) {\n      spacing = this.spacing;\n    } else if (spacing !== null) {\n      spacing = Length.fromLike(spacing);\n    }\n\n    if (Equals(this.width, width) && Equals(this.left, left) &&\n        Equals(this.right, right) && Equals(this.spacing, spacing)) {\n      return this;\n    } else {\n      const oldTools = this.tools;\n      const toolCount = oldTools.length;\n      const newTools = new Array<ToolLayout>(toolCount);\n      const barWidth = width.pxValue();\n      const barLeft = left !== null ? left.pxValue(barWidth) : 0;\n      const barRight = right !== null ? right.pxValue(barWidth) : 0;\n      const toolSpacing = spacing !== null ? spacing.pxValue(barWidth) : 0;\n\n      let grow = 0;\n      let shrink = 0;\n      let basis = barLeft + barRight;\n      let x = barLeft;\n      let k = 0;\n      for (let i = 0; i < toolCount; i += 1) {\n        const tool = oldTools[i]!;\n        if (k !== 0) {\n          basis += toolSpacing;\n          x += toolSpacing;\n        }\n        const toolWidth = tool.basis.pxValue(barWidth);\n        newTools[i] = tool.resized(toolWidth, x, barWidth - toolWidth - x);\n        grow += tool.grow;\n        shrink += tool.shrink;\n        basis += toolWidth;\n        x += toolWidth;\n        k += 1;\n      }\n\n      if (basis < barWidth && grow > 0) {\n        const delta = barWidth - basis;\n        let x = barLeft;\n        let j = 0;\n        for (let i = 0; i < toolCount; i += 1) {\n          const tool = newTools[i]!;\n          if (j !== 0) {\n            x += toolSpacing;\n          }\n          const toolBasis = tool.basis.pxValue(barWidth);\n          const toolWidth = toolBasis + delta * (tool.grow / grow);\n          newTools[i] = tool.resized(toolWidth, x, barWidth - toolWidth - x);\n          x += toolWidth;\n          j += 1;\n        }\n      } else if (basis > barWidth && shrink > 0) {\n        const delta = basis - barWidth;\n        let x = barLeft;\n        let j = 0;\n        for (let i = 0; i < toolCount; i += 1) {\n          const tool = newTools[i]!;\n          if (j !== 0) {\n            x += toolSpacing;\n          }\n          const toolBasis = tool.basis.pxValue(barWidth);\n          const toolWidth = toolBasis - delta * (tool.shrink / shrink);\n          newTools[i] = tool.resized(toolWidth, x, barWidth - toolWidth - x);\n          x += toolWidth;\n          j += 1;\n        }\n      }\n\n      return new BarLayout(width, left, right, spacing, newTools);\n    }\n  }\n\n  interpolateTo(that: BarLayout): Interpolator<BarLayout>;\n  interpolateTo(that: unknown): Interpolator<BarLayout> | null;\n  interpolateTo(that: unknown): Interpolator<BarLayout> | null {\n    if (that instanceof BarLayout) {\n      return BarLayoutInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BarLayout) {\n      const theseTools = this.tools;\n      const thoseTools = that.tools;\n      const n = theseTools.length;\n      if (n === thoseTools.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!theseTools[i]!.equivalentTo(thoseTools[i]!, epsilon)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BarLayout) {\n      return Equals(this.width, that.width) && Equals(this.left, that.left)\n          && Equals(this.right, that.right) && Equals(this.spacing, that.spacing)\n          && Arrays.equal(this.tools, that.tools);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"BarLayout\").write(46/*'.'*/).write(\"of\").write(40/*'('*/);\n    for (let i = 0; i < this.tools.length; i += 1) {\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.debug(this.tools[i]!);\n    }\n    output = output.write(41/*')'*/);\n    if (this.width !== null || this.left !== null || this.right !== null || this.spacing !== null) {\n      output = output.write(46/*'.'*/).write(\"resized\").write(40/*'('*/)\n                     .debug(this.width).write(\", \").debug(this.left).write(\", \")\n                     .debug(this.right).write(\", \").debug(this.spacing).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static of(...barTools: ToolLayoutLike[]): BarLayout {\n    const n = barTools.length;\n    const tools = new Array<ToolLayout>(n);\n    for (let i = 0; i < n; i += 1) {\n      tools[i] = ToolLayout.fromLike(barTools[i]!);\n    }\n    return new BarLayout(null, null, null, null, tools);\n  }\n\n  static create(tools: readonly ToolLayout[]): BarLayout {\n    return new BarLayout(null, null, null, null, tools);\n  }\n\n  static fromLike(value: BarLayoutLike): BarLayout {\n    if (value === void 0 || value === null || value instanceof BarLayout) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return BarLayout.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: BarLayoutInit): BarLayout {\n    let width = init.width;\n    if (width !== void 0 && width !== null) {\n      width = Length.fromLike(width);\n    } else {\n      width = null;\n    }\n    let left = init.left;\n    if (left !== void 0 && left !== null) {\n      left = Length.fromLike(left);\n    } else {\n      left = null;\n    }\n    let right = init.right;\n    if (right !== void 0 && right !== null) {\n      right = Length.fromLike(right);\n    } else {\n      right = null;\n    }\n    let spacing = init.spacing;\n    if (spacing !== void 0 && spacing !== null) {\n      spacing = Length.fromLike(spacing);\n    } else {\n      spacing = null;\n    }\n    const toolCount = init.tools.length;\n    const tools = new Array<ToolLayout>(toolCount);\n    for (let i = 0; i < toolCount; i += 1) {\n      tools[i] = ToolLayout.fromLike(init.tools[i]!);\n    }\n    return new BarLayout(width, left, right, spacing, tools);\n  }\n}\n\n/** @internal */\nexport interface BarLayoutInterpolator extends Interpolator<BarLayout> {\n  /** @internal */\n  readonly widthInterpolator: Interpolator<Length | null>;\n  /** @internal */\n  readonly leftInterpolator: Interpolator<Length | null>;\n  /** @internal */\n  readonly rightInterpolator: Interpolator<Length | null>;\n  /** @internal */\n  readonly spacingInterpolator: Interpolator<Length | null>;\n  /** @internal */\n  readonly toolInterpolators: readonly Interpolator<ToolLayout>[];\n\n  readonly 0: BarLayout;\n\n  readonly 1: BarLayout;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const BarLayoutInterpolator = (function (_super: typeof Interpolator) {\n  const BarLayoutInterpolator = function (l0: BarLayout, l1: BarLayout): BarLayoutInterpolator {\n    const interpolator = function (u: number): BarLayout {\n      const width = interpolator.widthInterpolator(u);\n      const left = interpolator.leftInterpolator(u);\n      const right = interpolator.rightInterpolator(u);\n      const spacing = interpolator.spacingInterpolator(u);\n      const toolInterpolators = interpolator.toolInterpolators;\n      const tools = new Array<ToolLayout>();\n      for (let i = 0; i < toolInterpolators.length; i += 1) {\n        tools.push(toolInterpolators[i]!(u));\n      }\n      return new BarLayout(width, left, right, spacing, tools);\n    } as BarLayoutInterpolator;\n    Object.setPrototypeOf(interpolator, BarLayoutInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).widthInterpolator = Interpolator(l0.width, l1.width);\n    (interpolator as Mutable<typeof interpolator>).leftInterpolator = Interpolator(l0.left, l1.left);\n    (interpolator as Mutable<typeof interpolator>).rightInterpolator = Interpolator(l0.right, l1.right);\n    (interpolator as Mutable<typeof interpolator>).spacingInterpolator = Interpolator(l0.spacing, l1.spacing);\n    const tools0 = l0.tools;\n    const tools1 = l1.tools;\n    const toolInterpolators = new Array<Interpolator<ToolLayout>>();\n    for (let i = 0; i < tools0.length; i += 1) {\n      let tool0 = tools0[i]!;\n      let tool1 = l1.getTool(tool0.key);\n      if (tool1 === null && !tool0.presence.dismissed && tool0.outPresence !== null) {\n        tool1 = tool0.withPresence(tool0.outPresence);\n        tool1 = tool1.withAlign(tool1.outAlign);\n        tool0 = tool0.withPresence(tool0.presence.asDismissing());\n      } else if (tool1 !== null && tool0.presence.dismissed) {\n        tool0 = tool0.withPresence(tool0.presence.asPresenting());\n      }\n      if (tool1 !== null) {\n        toolInterpolators.push(tool0.interpolateTo(tool1));\n      }\n    }\n    for (let i = 0; i < tools1.length; i += 1) {\n      let tool1 = tools1[i]!;\n      let tool0 = l0.getTool(tool1.key);\n      if (tool0 === null) {\n        const inPresence = tool1.inPresence !== null ? tool1.inPresence : tool1.presence;\n        tool0 = tool1.withPresence(inPresence.asPresenting());\n        tool1 = tool1.withPresence(Presence.presented());\n        tool0 = tool0.withAlign(tool0.inAlign);\n        toolInterpolators.push(tool0.interpolateTo(tool1));\n      }\n    }\n    (interpolator as Mutable<typeof interpolator>).toolInterpolators = toolInterpolators;\n    return interpolator;\n  } as {\n    (l0: BarLayout, l1: BarLayout): BarLayoutInterpolator;\n\n    /** @internal */\n    prototype: BarLayoutInterpolator;\n  };\n\n  BarLayoutInterpolator.prototype = Object.create(_super.prototype);\n  BarLayoutInterpolator.prototype.constructor = BarLayoutInterpolator;\n\n  Object.defineProperty(BarLayoutInterpolator.prototype, 0, {\n    get(this: BarLayoutInterpolator): BarLayout {\n      const width = this.widthInterpolator[0];\n      const left = this.leftInterpolator[0];\n      const right = this.rightInterpolator[0];\n      const spacing = this.spacingInterpolator[0];\n      const toolInterpolators = this.toolInterpolators;\n      const tools = new Array<ToolLayout>();\n      for (let i = 0; i < toolInterpolators.length; i += 1) {\n        tools.push(toolInterpolators[i]![0]);\n      }\n      return new BarLayout(width, left, right, spacing, tools);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(BarLayoutInterpolator.prototype, 1, {\n    get(this: BarLayoutInterpolator): BarLayout {\n      const width = this.widthInterpolator[1];\n      const left = this.leftInterpolator[1];\n      const right = this.rightInterpolator[1];\n      const spacing = this.spacingInterpolator[1];\n      const toolInterpolators = this.toolInterpolators;\n      const tools = new Array<ToolLayout>();\n      for (let i = 0; i < toolInterpolators.length; i += 1) {\n        tools.push(toolInterpolators[i]![1]);\n      }\n      return new BarLayout(width, left, right, spacing, tools);\n    },\n    configurable: true,\n  });\n\n  BarLayoutInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BarLayoutInterpolator) {\n      if (this.widthInterpolator.equals(that.widthInterpolator) &&\n          this.leftInterpolator.equals(that.leftInterpolator) &&\n          this.rightInterpolator.equals(that.rightInterpolator) &&\n          this.spacingInterpolator.equals(that.spacingInterpolator)) {\n        const n = this.toolInterpolators.length;\n        if (n === that.toolInterpolators.length) {\n          for (let i = 0; i < n; i += 1) {\n            if (!this.toolInterpolators[i]!.equals(that.toolInterpolators[i]!)) {\n              return false;\n            }\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  return BarLayoutInterpolator;\n})(Interpolator);\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Animator} from \"@swim/component\";\nimport {ConstraintProperty} from \"@swim/constraint\";\nimport {Length} from \"@swim/math\";\nimport {View} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\n\n/** @public */\nexport interface ToolViewObserver<V extends ToolView = ToolView> extends HtmlViewObserver<V> {\n  viewDidPress?(input: PositionGestureInput, event: Event | null, view: V): void;\n\n  viewDidLongPress?(input: PositionGestureInput, view: V): void;\n}\n\n/** @public */\nexport class ToolView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initTool();\n  }\n\n  protected initTool(): void {\n    this.classList.add(\"tool\");\n  }\n\n  declare readonly observerType?: Class<ToolViewObserver>;\n\n  @Animator({valueType: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  readonly xAlign!: Animator<this, number>;\n\n  @ConstraintProperty({valueType: Length, value: null})\n  readonly effectiveWidth!: ConstraintProperty<this, Length | null>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {ToolViewObserver} from \"./ToolView\";\nimport {ToolView} from \"./ToolView\";\n\n/** @public */\nexport interface TitleToolViewObserver<V extends TitleToolView = TitleToolView> extends ToolViewObserver<V> {\n  viewWillAttachContent?(contentView: HtmlView, view: V): void;\n\n  viewDidDetachContent?(contentView: HtmlView, view: V): void;\n}\n\n/** @public */\nexport class TitleToolView extends ToolView {\n  protected override initTool(): void {\n    super.initTool();\n    this.setIntrinsic<TitleToolView>({\n      classList: [\"tool-title\"],\n      style: {\n        overflowX: \"hidden\",\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<TitleToolViewObserver>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    binds: true,\n    initView(contentView: HtmlView): void {\n      contentView.style.setIntrinsic({\n        position: \"relative\",\n        left: 0,\n        top: 0,\n      });\n    },\n    willAttachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachContent\", contentView, this.owner);\n    },\n    didDetachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachContent\", contentView, this.owner);\n    },\n    fromLike(value: HtmlView | LikeType<HtmlView> | string | undefined): HtmlView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        view.text.setState(value);\n        return view;\n      }\n      return super.fromLike(value);\n    },\n    createView(): HtmlView {\n      return HtmlView.fromTag(\"span\").style.setIntrinsic({\n        display: \"block\",\n        whiteSpace: \"nowrap\",\n        textOverflow: \"ellipsis\",\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n      });\n    },\n  })\n  readonly content!: ViewRef<this, Like<HtmlView, string | undefined>>;\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutTool();\n  }\n\n  protected layoutTool(): void {\n    const contentView = this.content.view;\n    if (contentView === null) {\n      return;\n    }\n    const contentWidth = contentView.style.width.pxValue();\n    const toolWidth = this.style.width.pxValue();\n    contentView.style.setIntrinsic({\n      left: (toolWidth !== 0 ? toolWidth - contentWidth : contentWidth) * this.xAlign.value,\n      top: 0,\n      height: this.style.height.value,\n      lineHeight: this.style.height.value,\n    });\n    if (this.effectiveWidth.value === null && contentWidth !== 0) {\n      this.effectiveWidth.set(contentWidth);\n    }\n  }\n\n  @PositionGesture({\n    bindsOwner: true,\n    didPress(input: PositionGestureInput, event: Event | null): void {\n      if (!input.defaultPrevented && this.owner.clientBounds.contains(input.x, input.y)) {\n        this.owner.didPress(input, event);\n      }\n    },\n    didLongPress(input: PositionGestureInput): void {\n      if (!input.defaultPrevented) {\n        this.owner.didLongPress(input);\n      }\n    },\n  })\n  readonly gesture!: PositionGesture<this, HtmlView>;\n\n  didPress(input: PositionGestureInput, event: Event | null): void {\n    this.callObservers(\"viewDidPress\", input, event, this);\n  }\n\n  didLongPress(input: PositionGestureInput): void {\n    this.callObservers(\"viewDidLongPress\", input, this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Color} from \"@swim/style\";\nimport {Focus} from \"@swim/style\";\nimport {FocusAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Feel} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport {Graphics} from \"@swim/graphics\";\nimport {IconLayout} from \"@swim/graphics\";\nimport {Icon} from \"@swim/graphics\";\nimport type {IconView} from \"@swim/graphics\";\nimport {IconGraphicsAnimator} from \"@swim/graphics\";\nimport {SvgIconView} from \"@swim/graphics\";\nimport {ButtonGlow} from \"@swim/button\";\nimport type {ToolViewObserver} from \"./ToolView\";\nimport {ToolView} from \"./ToolView\";\n\n/** @public */\nexport interface ButtonToolViewObserver<V extends ButtonToolView = ButtonToolView> extends ToolViewObserver<V> {\n  viewDidSetGraphics?(graphics: Graphics | null, view: V): void;\n}\n\n/** @public */\nexport class ButtonToolView extends ToolView implements IconView {\n  protected override initTool(): void {\n    super.initTool();\n    this.setIntrinsic<ButtonToolView>({\n      classList: [\"tool-button\"],\n      style: {\n        boxSizing: \"border-box\",\n        borderRadius: 4,\n        overflow: \"hidden\",\n        userSelect: \"none\",\n        cursor: \"pointer\",\n        backgroundColor: Look.backgroundColor,\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<ButtonToolViewObserver>;\n\n  @Animator({valueType: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  override readonly xAlign!: Animator<this, number>;\n\n  /** @override */\n  @Animator({valueType: IconLayout, value: null, updateFlags: View.NeedsLayout})\n  readonly iconLayout!: Animator<this, IconLayout | null>;\n\n  /** @override */\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetState(iconColor: Color | null): void {\n      const timing = this.timing !== null ? this.timing : false;\n      this.owner.graphics.setState(this.owner.graphics.state, timing, Affinity.Reflexive);\n    },\n  })\n  get iconColor(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  /** @override */\n  @ThemeAnimator({\n    extends: IconGraphicsAnimator,\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"viewDidSetGraphics\", newGraphics, this.owner);\n    },\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  @ViewRef({\n    viewType: SvgIconView,\n    viewKey: true,\n    binds: true,\n    init(): void {\n      this.insertView();\n    },\n    initView(svgView: SvgIconView): void {\n      svgView.style.position.set(\"absolute\");\n      svgView.iconLayout.setInherits(true);\n      svgView.iconColor.setInherits(true);\n      svgView.graphics.setInherits(true);\n    },\n  })\n  readonly svg!: ViewRef<this, SvgIconView>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.derived) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutTool();\n  }\n\n  protected layoutTool(): void {\n    const svgView = this.svg.view;\n    if (svgView === null || !svgView.attributes.width.hasAffinity(Affinity.Intrinsic)\n                         && !svgView.attributes.height.hasAffinity(Affinity.Intrinsic)\n                         && !svgView.attributes.viewBox.hasAffinity(Affinity.Intrinsic)) {\n      return;\n    }\n    const width = this.style.width.pxValue();\n    const height = this.style.height.pxValue();\n    svgView.attributes.setIntrinsic({\n      width, height,\n      viewBox: \"0 0 \" + width + \" \" + height,\n    });\n    this.effectiveWidth.set(width);\n  }\n\n  @Property({valueType: Boolean, value: true, inherits: true})\n  readonly hovers!: Property<this, boolean>;\n\n  @FocusAnimator({\n    value: Focus.unfocused(),\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, null);\n    },\n    didSetValue(newHover: Focus, oldHover: Focus): void {\n      this.owner.modifyMood(Feel.default, [[Feel.transparent, 1 - newHover.phase]], false);\n    },\n    init(): void {\n      this.owner.modifyMood(Feel.default, [[Feel.hovering, 1],\n                                           [Feel.translucent, 1],\n                                           [Feel.transparent, 1 - this.value.phase]], false);\n    },\n  })\n  readonly hover!: FocusAnimator<this, Focus>;\n\n  @Property({valueType: Boolean, value: true, inherits: true})\n  readonly glows!: Property<this, boolean>;\n\n  protected glow(input: PositionGestureInput): void {\n    if (input.detail instanceof ButtonGlow) {\n      input.detail.fade(input.x, input.y);\n      input.detail = void 0;\n    }\n    if (input.detail === void 0) {\n      const delay = input.inputType === \"mouse\" ? 0 : 100;\n      input.detail = this.prependChild(ButtonGlow);\n      (input.detail as ButtonGlow).glow(input.x, input.y, void 0, delay);\n    }\n  }\n\n  @PositionGesture({\n    bindsOwner: true,\n    observes: true,\n    viewDidUnmount(): void {\n      this.owner.hover.unfocus(false);\n    },\n    didStartHovering(): void {\n      if (this.owner.hovers.value) {\n        this.owner.hover.focus(false);\n      }\n    },\n    didStopHovering(): void {\n      if (this.owner.hovers.value) {\n        this.owner.hover.unfocus();\n      }\n    },\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (this.owner.glows.value) {\n        this.owner.glow(input);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      } else if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        input.clearHoldTimer();\n        this.beginHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      } else if (input.detail instanceof ButtonGlow) {\n        input.detail.pulse(input.x, input.y);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n      if (input.detail instanceof ButtonGlow) {\n        input.detail.fade(input.x, input.y);\n        input.detail = void 0;\n      }\n    },\n    didPress(input: PositionGestureInput, event: Event | null): void {\n      if (!input.defaultPrevented && this.owner.clientBounds.contains(input.x, input.y)) {\n        this.owner.didPress(input, event);\n      }\n    },\n    didLongPress(input: PositionGestureInput): void {\n      if (!input.defaultPrevented) {\n        this.owner.didLongPress(input);\n      }\n    },\n  })\n  readonly gesture!: PositionGesture<this, HtmlView> & Observes<HtmlView>;\n\n  didPress(input: PositionGestureInput, event: Event | null): void {\n    this.callObservers(\"viewDidPress\", input, event, this);\n  }\n\n  didLongPress(input: PositionGestureInput): void {\n    this.callObservers(\"viewDidLongPress\", input, this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Length} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport type {StyleSheet} from \"@swim/dom\";\nimport {StyleRule} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {StyleView} from \"@swim/dom\";\nimport type {ToolViewObserver} from \"./ToolView\";\nimport {ToolView} from \"./ToolView\";\n\n/** @public */\nexport interface SearchToolViewObserver<V extends SearchToolView = SearchToolView> extends ToolViewObserver<V> {\n  viewWillAttachInput?(inputView: HtmlView, view: V): void;\n\n  viewDidDetachInput?(inputView: HtmlView, view: V): void;\n\n  viewDidUpdateSearch?(query: string, inputView: HtmlView, view: V): void;\n\n  viewDidSubmitSearch?(query: string, inputView: HtmlView, view: V): void;\n\n  viewDidCancelSearch?(inputView: HtmlView, view: V): void;\n}\n\n/** @public */\nexport class SearchToolView extends ToolView {\n  protected override initTool(): void {\n    super.initTool();\n    this.classList.add(\"tool-search\");\n  }\n\n  declare readonly observerType?: Class<SearchToolViewObserver>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    binds: true,\n    init(): void {\n      this.onInput = this.onInput.bind(this);\n      this.onKeyDown = this.onKeyDown.bind(this);\n    },\n    initView(inputView: HtmlView): void {\n      inputView.style.setIntrinsic({\n        position: \"relative\",\n        left: 0,\n        top: 0,\n        width: Length.pct(100),\n        height: 30,\n      });\n    },\n    willAttachView(inputView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachInput\", inputView, this.owner);\n    },\n    didDetachView(inputView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachInput\", inputView, this.owner);\n    },\n    didAttachView(inputView: HtmlView): void {\n      inputView.addEventListener(\"input\", this.onInput as EventListener);\n      inputView.addEventListener(\"keydown\", this.onKeyDown);\n    },\n    willDetachView(inputView: HtmlView): void {\n      inputView.removeEventListener(\"input\", this.onInput as EventListener);\n      inputView.removeEventListener(\"keydown\", this.onKeyDown);\n    },\n    onInput(event: InputEvent): void {\n      const inputView = this.view;\n      if (inputView !== null) {\n        const query = (inputView.node as HTMLInputElement).value;\n        this.owner.callObservers(\"viewDidUpdateSearch\", query, inputView, this.owner);\n      }\n    },\n    onKeyDown(event: KeyboardEvent): void {\n      const inputView = this.view;\n      if (inputView !== null) {\n        if (event.key === \"Enter\") {\n          const query = (inputView.node as HTMLInputElement).value;\n          this.owner.callObservers(\"viewDidSubmitSearch\", query, inputView, this.owner);\n        } else if (event.key === \"Escape\") {\n          this.owner.callObservers(\"viewDidCancelSearch\", inputView, this.owner);\n        }\n      }\n    },\n    createView(): HtmlView {\n      return HtmlView.fromTag(\"input\").setIntrinsic({\n        attributes: {\n          type: \"search\",\n        },\n        style: {\n          paddingTop: 3,\n          paddingRight: 15,\n          paddingBottom: 3,\n          paddingLeft: 15,\n          userSelect: \"none\",\n        },\n      });\n    },\n  })\n  readonly input!: ViewRef<this, HtmlView> & {\n    onInput(event: InputEvent): void,\n    onKeyDown(event: KeyboardEvent): void,\n  };\n\n  @ViewRef({\n    viewType: StyleView,\n    viewKey: true,\n    binds: true,\n  })\n  readonly stylesheet!: ViewRef<this, StyleView>;\n\n  @StyleRule({\n    inherits: true,\n    get parent(): StyleSheet | null {\n      const styleView = this.owner.stylesheet.view;\n      return styleView !== null ? styleView.sheet : null;\n    },\n    selector: \"input\",\n    init(): void {\n      this.style.setIntrinsic({\n        appearance: \"none\",\n        borderWidth: 1,\n        borderStyle: \"solid\",\n        borderColor: Look.borderColor,\n        borderRadius: 10,\n        outlineWidth: 0,\n        outlineStyle: \"none\",\n        outlineColor: Color.transparent(),\n        backgroundColor: Color.transparent(),\n        color: Look.textColor,\n      });\n      this.setStyle(\"transition\", \"border 100ms ease-out\");\n    },\n  })\n  readonly inputRule!: StyleRule<this>;\n\n  @StyleRule({\n    inherits: true,\n    get parent(): StyleSheet | null {\n      const styleView = this.owner.stylesheet.view;\n      return styleView !== null ? styleView.sheet : null;\n    },\n    selector: \"input:focus\",\n    init(): void {\n      this.style.setIntrinsic({\n        borderWidth: 2,\n        borderColor: Look.focusColor,\n      });\n      this.setStyle(\"transition\", \"border 100ms ease-out\");\n    },\n  })\n  readonly inputFocusRule!: StyleRule<this>;\n\n  @StyleRule({\n    inherits: true,\n    get parent(): StyleSheet | null {\n      const styleView = this.owner.stylesheet.view;\n      return styleView !== null ? styleView.sheet : null;\n    },\n    selector: \"input::placeholder\",\n    init(): void {\n      this.style.color.setIntrinsic(Look.placeholderColor);\n    },\n  })\n  readonly inputPlaceholderRule!: StyleRule<this>;\n\n  @StyleRule({\n    inherits: true,\n    get parent(): StyleSheet | null {\n      const styleView = this.owner.stylesheet.view;\n      return styleView !== null ? styleView.sheet : null;\n    },\n    selector: \"input::-webkit-search-cancel-button\",\n    init(): void {\n      this.setStyle(\"-webkit-appearance\", \"none\");\n    },\n  })\n  readonly inputSearchCancelButtonRule!: StyleRule<this>;\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutTool();\n  }\n\n  protected layoutTool(): void {\n    const inputView = this.input.view;\n    if (inputView === null) {\n      return;\n    }\n    const toolWidth = this.style.width.pxValue();\n    const toolHeight = this.style.height.pxValue();\n    const inputWidth = inputView.style.width.pxValue();\n    const inputHeight = inputView.style.height.pxValue();\n    const excessWidth = toolWidth - inputWidth;\n    const excessHeight = toolHeight - inputHeight;\n    inputView.style.setIntrinsic({\n      left: (toolWidth !== 0 ? excessWidth : inputWidth) * this.xAlign.value,\n      top: excessHeight * 0.5,\n    });\n    this.effectiveWidth.set(inputWidth);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {ToolLayout} from \"./ToolLayout\";\nimport {ToolView} from \"./ToolView\";\n\n/** @public */\nexport interface ToolControllerObserver<C extends ToolController = ToolController> extends ControllerObserver<C> {\n  controllerWillAttachToolView?(toolView: ToolView, controller: C): void;\n\n  controllerDidDetachToolView?(toolView: ToolView, controller: C): void;\n\n  controllerDidSetToolLayout?(toolLayout: ToolLayout | null, controller: C): void;\n\n  controllerDidPressToolView?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidLongPressToolView?(input: PositionGestureInput, controller: C): void;\n}\n\n/** @public */\nexport class ToolController extends Controller {\n  declare readonly observerType?: Class<ToolControllerObserver>;\n\n  @TraitViewRef({\n    viewType: ToolView,\n    observesView: true,\n    willAttachView(toolView: ToolView): void {\n      this.owner.callObservers(\"controllerWillAttachToolView\", toolView, this.owner);\n    },\n    didDetachView(toolView: ToolView): void {\n      this.owner.callObservers(\"controllerDidDetachToolView\", toolView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null): void {\n      this.owner.callObservers(\"controllerDidPressToolView\", input, event, this.owner);\n    },\n    viewDidLongPress(input: PositionGestureInput): void {\n      this.owner.callObservers(\"controllerDidLongPressToolView\", input, this.owner);\n    },\n  })\n  readonly tool!: TraitViewRef<this, Trait, ToolView> & Observes<ToolView>;\n\n  @Property({\n    valueType: ToolLayout,\n    value: null,\n    didSetValue(toolLayout: ToolLayout | null): void {\n      this.owner.callObservers(\"controllerDidSetToolLayout\", toolLayout, this.owner);\n    },\n  })\n  readonly layout!: Property<this, ToolLayout | null>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport type {ToolControllerObserver} from \"./ToolController\";\nimport {ToolController} from \"./ToolController\";\nimport {TitleToolView} from \"./TitleToolView\";\n\n/** @public */\nexport interface TitleToolControllerObserver<C extends TitleToolController = TitleToolController> extends ToolControllerObserver<C> {\n  controllerWillAttachToolView?(toolView: TitleToolView, controller: C): void;\n\n  controllerDidDetachToolView?(toolView: TitleToolView, controller: C): void;\n\n  controllerWillAttachToolContentView?(toolContentView: HtmlView, controller: C): void;\n\n  controllerDidDetachToolContentView?(toolContentView: HtmlView, controller: C): void;\n}\n\n/** @public */\nexport class TitleToolController extends ToolController {\n  declare readonly observerType?: Class<TitleToolControllerObserver>;\n\n  @TraitViewRef({\n    extends: true,\n    viewType: TitleToolView,\n    observesView: true,\n    initView(toolView: TitleToolView): void {\n      this.owner.content.setView(toolView.content.view);\n    },\n    deinitView(toolView: TitleToolView): void {\n      this.owner.content.setView(null);\n    },\n    viewWillAttachContent(contentView: HtmlView): void {\n      this.owner.content.setView(contentView);\n    },\n    viewDidDetachContent(contentView: HtmlView): void {\n      this.owner.content.setView(null);\n    },\n  })\n  override readonly tool!: TraitViewRef<this, Trait, TitleToolView> & ToolController[\"tool\"] & Observes<TitleToolView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    willAttachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"controllerWillAttachToolContentView\", contentView, this.owner);\n    },\n    didDetachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidDetachToolContentView\", contentView, this.owner);\n    },\n  })\n  readonly content!: ViewRef<this, HtmlView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport type {ToolControllerObserver} from \"./ToolController\";\nimport {ToolController} from \"./ToolController\";\nimport {ButtonToolView} from \"./ButtonToolView\";\n\n/** @public */\nexport interface ButtonToolControllerObserver<C extends ButtonToolController = ButtonToolController> extends ToolControllerObserver<C> {\n  controllerWillAttachToolView?(toolView: ButtonToolView, controller: C): void;\n\n  controllerDidDetachToolView?(toolView: ButtonToolView, controller: C): void;\n\n  controllerDidSetToolIcon?(toolIcon: Graphics | null, controller: C): void;\n}\n\n/** @public */\nexport class ButtonToolController extends ToolController {\n  declare readonly observerType?: Class<ButtonToolControllerObserver>;\n\n  @TraitViewRef({\n    extends: true,\n    viewType: ButtonToolView,\n    observesView: true,\n    viewDidSetGraphics(toolIcon: Graphics | null): void {\n      this.owner.callObservers(\"controllerDidSetToolIcon\", toolIcon, this.owner);\n    },\n  })\n  override readonly tool!: TraitViewRef<this, Trait, ButtonToolView> & ToolController[\"tool\"] & Observes<ButtonToolView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport type {ToolControllerObserver} from \"./ToolController\";\nimport {ToolController} from \"./ToolController\";\nimport {SearchToolView} from \"./SearchToolView\";\n\n/** @public */\nexport interface SearchToolControllerObserver<C extends SearchToolController = SearchToolController> extends ToolControllerObserver<C> {\n  controllerWillAttachToolView?(toolView: SearchToolView, controller: C): void;\n\n  controllerDidDetachToolView?(toolView: SearchToolView, controller: C): void;\n\n  controllerWillAttachToolInputView?(toolInputView: HtmlView, controller: C): void;\n\n  controllerDidDetachToolInputView?(toolInputView: HtmlView, controller: C): void;\n\n  controllerDidUpdateSearch?(query: string, inputView: HtmlView, controller: C): void;\n\n  controllerDidSubmitSearch?(query: string, inputView: HtmlView, controller: C): void;\n\n  controllerDidCancelSearch?(inputView: HtmlView, controller: C): void;\n}\n\n/** @public */\nexport class SearchToolController extends ToolController {\n  declare readonly observerType?: Class<SearchToolControllerObserver>;\n\n  @TraitViewRef({\n    extends: true,\n    viewType: SearchToolView,\n    observesView: true,\n    initView(toolView: SearchToolView): void {\n      this.owner.input.setView(toolView.input.view);\n    },\n    deinitView(toolView: SearchToolView): void {\n      this.owner.input.setView(null);\n    },\n    viewWillAttachInput(inputView: HtmlView): void {\n      this.owner.input.setView(inputView);\n    },\n    viewDidDetachInput(inputView: HtmlView): void {\n      this.owner.input.setView(null);\n    },\n    viewDidUpdateSearch(query: string, inputView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidUpdateSearch\", query, inputView, this.owner);\n    },\n    viewDidSubmitSearch(query: string, inputView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidSubmitSearch\", query, inputView, this.owner);\n    },\n    viewDidCancelSearch(inputView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidCancelSearch\", inputView, this.owner);\n    },\n  })\n  override readonly tool!: TraitViewRef<this, Trait, SearchToolView> & ToolController[\"tool\"] & Observes<SearchToolView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    willAttachView(inputView: HtmlView): void {\n      this.owner.callObservers(\"controllerWillAttachToolInputView\", inputView, this.owner);\n    },\n    didDetachView(inputView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidDetachToolInputView\", inputView, this.owner);\n    },\n  })\n  readonly input!: ViewRef<this, HtmlView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Feel} from \"@swim/theme\";\nimport {ThemeConstraintAnimator} from \"@swim/theme\";\nimport type {ViewInsets} from \"@swim/view\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {ToolLayout} from \"./ToolLayout\";\nimport {BarLayout} from \"./BarLayout\";\nimport {ToolView} from \"./ToolView\";\n\n/** @public */\nexport type BarPlacement = \"top\" | \"bottom\" | \"none\";\n\n/** @public */\nexport interface BarViewObserver<V extends BarView = BarView> extends HtmlViewObserver<V> {\n  viewDidSetPlacement?(placement: BarPlacement, view: V): void;\n\n  viewDidSetEffectiveHeight?(effectiveHeight: Length | null, view: V): void;\n\n  viewDidSetBarLayout?(barLayout: BarLayout | null, view: V): void;\n\n  viewDidSetBarHeight?(barHeight: Length | null, view: V): void;\n\n  viewWillAttachTool?(toolView: ToolView, targetView: View | null, view: V): void;\n\n  viewDidDetachTool?(toolView: ToolView, view: V): void;\n\n  viewDidDismissTool?(toolView: ToolView, toolLayout: ToolLayout, view: V): void;\n}\n\n/** @public */\nexport class BarView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initBar();\n  }\n\n  protected initBar(): void {\n    this.setIntrinsic<BarView>({\n      classList: [\"bar\"],\n      style: {\n        position: \"relative\",\n        overflow: \"hidden\",\n        userSelect: \"none\",\n      },\n    });\n    this.modifyMood(Feel.default, [[Feel.primary, 1]]);\n  }\n\n  declare readonly observerType?: Class<BarViewObserver>;\n\n  @Property({\n    valueType: String,\n    value: \"none\",\n    updateFlags: View.NeedsResize | View.NeedsLayout,\n    didSetValue(placement: BarPlacement): void {\n      this.owner.callObservers(\"viewDidSetPlacement\", placement, this.owner);\n      this.owner.barHeight.applyEdgeInsets(this.owner.edgeInsets.value);\n      this.owner.edgeInsets.decohereOutlets();\n    },\n  })\n  readonly placement!: Property<this, BarPlacement>;\n\n  @Animator({\n    valueType: BarLayout,\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newLayout: BarLayout | null, oldLayout: BarLayout | null): void {\n      if (newLayout !== null && newLayout.width === null) {\n        this.owner.requireUpdate(View.NeedsResize);\n      }\n      this.owner.callObservers(\"viewDidSetBarLayout\", newLayout, this.owner);\n    },\n    transformState(newLayout: BarLayout | null): BarLayout | null {\n      if (newLayout !== null && newLayout.width === null) {\n        newLayout = this.resized(newLayout);\n      }\n      return newLayout;\n    },\n    resized(newLayout: BarLayout): BarLayout {\n      const oldLayout = this.value;\n      if (oldLayout !== null && oldLayout.width !== null) {\n        newLayout = newLayout.resized(oldLayout.width, oldLayout.left, oldLayout.right, oldLayout.spacing);\n      }\n      return newLayout;\n    },\n  })\n  readonly layout!: Animator<this, BarLayout | null> & {\n    resized(layout: BarLayout): BarLayout,\n  };\n\n  @ThemeConstraintAnimator({\n    valueType: Length,\n    value: null,\n    updateFlags: View.NeedsResize,\n    didSetValue(barHeight: Length | null): void {\n      this.owner.callObservers(\"viewDidSetBarHeight\", barHeight, this.owner);\n      this.applyEdgeInsets(this.owner.edgeInsets.value);\n    },\n    applyEdgeInsets(edgeInsets: ViewInsets): void {\n      let height = this.value;\n      if (height !== null) {\n        const placement = this.owner.placement.value;\n        if (placement === \"top\") {\n          height = height.plus(edgeInsets.insetTop);\n        } else if (placement === \"bottom\") {\n          height = height.plus(edgeInsets.insetBottom);\n        }\n        this.owner.style.height.setIntrinsic(height);\n      }\n    },\n  })\n  readonly barHeight!: ThemeConstraintAnimator<this, Length | null> & {\n    /** @internal */\n    applyEdgeInsets(edgeInsets: ViewInsets): void,\n  };\n\n  @Property({valueType: Length, value: Length.zero(), updateFlags: View.NeedsResize})\n  readonly toolSpacing!: Property<this, Length | null>;\n\n  @Property({\n    extends: true,\n    didSetValue(edgeInsets: ViewInsets): void {\n      this.owner.barHeight.applyEdgeInsets(edgeInsets);\n    },\n    getOutletValue(outlet: Property<unknown, ViewInsets>): ViewInsets {\n      let edgeInsets = this.value;\n      let insetTop = edgeInsets.insetTop;\n      const insetRight = edgeInsets.insetRight;\n      let insetBottom = edgeInsets.insetBottom;\n      const insetLeft = edgeInsets.insetLeft;\n      const placement = this.owner.placement.value;\n      if (placement === \"top\" && insetBottom !== 0) {\n        insetBottom = 0;\n        edgeInsets = {insetTop, insetRight, insetBottom, insetLeft};\n      } else if (placement === \"bottom\" && insetTop !== 0) {\n        insetTop = 0;\n        edgeInsets = {insetTop, insetRight, insetBottom, insetLeft};\n      }\n      return edgeInsets;\n    },\n  })\n  override get edgeInsets(): Property<this, ViewInsets> & HtmlView[\"edgeInsets\"] {\n    return Property.getter();\n  }\n\n  getTool<F extends Class<ToolView>>(key: string, toolViewClass: F): InstanceType<F> | null;\n  getTool(key: string): ToolView | null;\n  getTool(key: string, toolViewClass?: Class<ToolView>): ToolView | null {\n    if (toolViewClass === void 0) {\n      toolViewClass = ToolView;\n    }\n    const toolView = this.getChild(key);\n    return toolView instanceof toolViewClass ? toolView : null;\n  }\n\n  getOrCreateTool<F extends Class<Instance<F, ToolView>> & Creatable<Instance<F, ToolView>>>(key: string, toolViewClass: F): InstanceType<F> {\n    let toolView = this.getChild(key, toolViewClass);\n    if (toolView === null) {\n      toolView = toolViewClass.create();\n      this.setChild(key, toolView);\n    }\n    return toolView!;\n  }\n\n  setTool(key: string, toolView: ToolView | null): void {\n    this.setChild(key, toolView);\n  }\n\n  @ViewSet({\n    viewType: ToolView,\n    binds: true,\n    initView(toolView: ToolView): void {\n      toolView.style.setIntrinsic({\n        display: \"none\",\n        position: \"absolute\",\n        left: 0,\n        width: 0,\n        height: this.owner.barHeight.value,\n      });\n    },\n    willAttachView(toolView: ToolView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachTool\", toolView, target, this.owner);\n    },\n    didDetachView(toolView: ToolView): void {\n      this.owner.callObservers(\"viewDidDetachTool\", toolView, this.owner);\n    },\n  })\n  readonly tools!: ViewSet<this, ToolView>;\n\n  protected override onResize(): void {\n    super.onResize();\n    this.resizeBar();\n  }\n\n  protected resizeBar(): void {\n    const placement = this.placement.value;\n    if (placement === \"top\") {\n      this.resizeBarTop();\n    } else if (placement === \"bottom\") {\n      this.resizeBarBottom();\n    } else if (placement === \"none\") {\n      this.resizeBarNone();\n    }\n  }\n\n  protected resizeBarTop(): void {\n    this.classList.remove(\"bar-bottom\");\n    this.classList.add(\"bar-top\");\n\n    const edgeInsets = this.edgeInsets.value;\n    let height = this.barHeight.value;\n    if (height !== null) {\n      height = height.plus(edgeInsets.insetTop);\n      this.style.height.setIntrinsic(height);\n    }\n\n    const oldLayout = !this.layout.derived ? this.layout.state : null;\n    if (oldLayout !== void 0 && oldLayout !== null) {\n      const barWidth = this.style.width.pxState();\n      const insetLeft = edgeInsets.insetLeft;\n      const insetRight = edgeInsets.insetRight;\n      const spacing = this.toolSpacing.getValue().pxValue(barWidth);\n      const newLayout = oldLayout.resized(barWidth, insetLeft, insetRight, spacing);\n      this.layout.set(newLayout);\n    }\n  }\n\n  protected resizeBarBottom(): void {\n    this.classList.remove(\"bar-top\");\n    this.classList.add(\"bar-bottom\");\n\n    const edgeInsets = this.edgeInsets.value;\n    let height = this.barHeight.value;\n    if (height !== null) {\n      height = height.plus(edgeInsets.insetBottom);\n      this.style.height.setIntrinsic(height);\n    }\n\n    const oldLayout = !this.layout.derived ? this.layout.state : null;\n    if (oldLayout !== void 0 && oldLayout !== null) {\n      const barWidth = this.style.width.pxState();\n      const insetLeft = edgeInsets.insetLeft;\n      const insetRight = edgeInsets.insetRight;\n      const spacing = this.toolSpacing.getValue().pxValue(barWidth);\n      const newLayout = oldLayout.resized(barWidth, insetLeft, insetRight, spacing);\n      this.layout.set(newLayout);\n    }\n  }\n\n  protected resizeBarNone(): void {\n    this.classList.remove(\"bar-top\");\n    this.classList.remove(\"bar-bottom\");\n\n    const oldLayout = !this.layout.derived ? this.layout.state : null;\n    if (oldLayout !== void 0 && oldLayout !== null) {\n      const barWidth = this.style.width.pxState();\n      const spacing = this.toolSpacing.getValue().pxValue(barWidth);\n      const newLayout = oldLayout.resized(barWidth, 0, 0, spacing);\n      this.layout.set(newLayout);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    if ((displayFlags & View.NeedsLayout) !== 0) {\n      this.layoutChildren(displayFlags, displayChild);\n    } else {\n      super.displayChildren(displayFlags, displayChild);\n    }\n  }\n\n  protected layoutChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    const placement = this.placement.value;\n    const edgeInsets = this.edgeInsets.value;\n    const toolTop = placement === \"top\" ? Length.px(edgeInsets.insetTop) : null;\n    const toolBottom = placement === \"bottom\" ? Length.px(edgeInsets.insetBottom) : null;\n    const toolHeight = this.barHeight.value;\n    const layout = this.layout.value;\n    type self = this;\n    function layoutChild(this: self, child: View, displayFlags: ViewFlags): void {\n      if (child instanceof ToolView) {\n        const key = child.key;\n        const tool = layout !== null && key !== void 0 ? layout.getTool(key) : null;\n        if (tool !== null) {\n          child.xAlign.setIntrinsic(tool.align);\n          child.style.setIntrinsic({\n            display: !tool.presence.dismissed ? \"flex\" : \"none\",\n            left: tool.left,\n            top: toolTop,\n            bottom: toolBottom,\n            width: tool.width !== null && tool.width.value !== 0 ? tool.width : null,\n            height: toolHeight,\n            opacity: tool.presence.phase !== 1 ? tool.presence.phase : void 0,\n          });\n          child.style.pointerEvents.setState(tool.presence.dismissing ? \"none\" : void 0, Affinity.Transient);\n          if (tool.presence.dismissed) {\n            this.callObservers(\"viewDidDismissTool\", child, tool, this);\n          }\n        } else {\n          child.style.setIntrinsic({\n            display: \"none\",\n            left: null,\n            top: null,\n            bottom: null,\n            width: null,\n            height: null,\n            opacity: void 0,\n          });\n          child.style.pointerEvents.setState(void 0, Affinity.Transient);\n        }\n      }\n      displayChild.call(this, child, displayFlags);\n    }\n    super.displayChildren(displayFlags, layoutChild);\n  }\n\n  protected override didLayout(): void {\n    this.layoutTools();\n    super.didLayout();\n  }\n\n  protected layoutTools(): void {\n    const layout = this.layout.value;\n    const tools = layout !== null ? layout.tools : null;\n    const toolCount = tools !== null ? tools.length : 0;\n    for (let i = 0; i < toolCount; i += 1) {\n      const tool = tools![i]!;\n      const toolView = this.getChild(tool.key);\n      if (toolView instanceof ToolView) {\n        if (tool.overlap !== void 0) {\n          const overlapView = this.getChild(tool.overlap);\n          if (overlapView instanceof ToolView) {\n            const toolX = toolView.node.offsetLeft;\n            const overlapX = toolView.node.offsetLeft;\n            let overlapWidth = overlapView.effectiveWidth.value;\n            if (overlapWidth !== null) {\n              overlapWidth = overlapWidth.plus(tool.overpad);\n            }\n            if (toolX <= overlapX) {\n              toolView.style.setIntrinsic({\n                paddingLeft: null,\n                paddingRight: overlapWidth,\n              });\n            } else {\n              toolView.style.setIntrinsic({\n                paddingLeft: overlapWidth,\n                paddingRight: null,\n              });\n            }\n          } else {\n            toolView.style.setIntrinsic({\n              paddingLeft: null,\n              paddingRight: null,\n            });\n          }\n        } else {\n          toolView.style.setIntrinsic({\n            paddingLeft: null,\n            paddingRight: null,\n          });\n        }\n      }\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {Graphics} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {ToolLayout} from \"./ToolLayout\";\nimport {BarLayout} from \"./BarLayout\";\nimport type {ToolView} from \"./ToolView\";\nimport {TitleToolView} from \"./TitleToolView\";\nimport {ToolController} from \"./ToolController\";\nimport type {TitleToolController} from \"./TitleToolController\";\nimport type {ButtonToolController} from \"./ButtonToolController\";\nimport type {SearchToolController} from \"./SearchToolController\";\nimport {BarView} from \"./BarView\";\n\n/** @public */\nexport interface BarControllerObserver<C extends BarController = BarController> extends ControllerObserver<C> {\n  controllerWillAttachBarView?(barView: BarView, controller: C): void;\n\n  controllerDidDetachBarView?(barView: BarView, controller: C): void;\n\n  controllerDidSetBarLayout?(barLayout: BarLayout | null, controller: C): void;\n\n  controllerWillAttachTool?(toolController: ToolController, controller: C): void;\n\n  controllerDidDetachTool?(toolController: ToolController, controller: C): void;\n\n  controllerWillAttachToolView?(toolView: ToolView, toolController: ToolController, controller: C): void;\n\n  controllerDidDetachToolView?(toolView: ToolView, toolController: ToolController, controller: C): void;\n\n  controllerDidSetToolLayout?(toolLayout: ToolLayout | null, toolController: ToolController, controller: C): void;\n\n  controllerWillAttachToolContentView?(toolContentView: HtmlView, toolController: ToolController, controller: C): void;\n\n  controllerDidDetachToolContentView?(toolContentView: HtmlView, toolController: ToolController, controller: C): void;\n\n  controllerDidSetToolIcon?(toolIcon: Graphics | null, toolController: ToolController, controller: C): void;\n\n  controllerDidUpdateSearchTool?(query: string, inputView: HtmlView, toolController: ToolController, controller: C): void;\n\n  controllerDidSubmitSearchTool?(query: string, inputView: HtmlView, toolController: ToolController, controller: C): void;\n\n  controllerDidCancelSearchTool?(inputView: HtmlView, toolController: ToolController, controller: C): void;\n\n  controllerDidPressToolView?(input: PositionGestureInput, event: Event | null, toolController: ToolController, controller: C): void;\n\n  controllerDidLongPressToolView?(input: PositionGestureInput, toolController: ToolController, controller: C): void;\n}\n\n/** @public */\nexport class BarController extends Controller {\n  declare readonly observerType?: Class<BarControllerObserver>;\n\n  @TraitViewRef({\n    viewType: BarView,\n    observesView: true,\n    initView(barView: BarView): void {\n      const toolControllers = this.owner.tools.controllers;\n      for (const controllerId in toolControllers) {\n        const toolController = toolControllers[controllerId]!;\n        const toolView = toolController.tool.view;\n        if (toolView !== null && toolView.parent === null) {\n          toolController.tool.insertView(barView);\n        }\n      }\n    },\n    willAttachView(barView: BarView): void {\n      this.owner.callObservers(\"controllerWillAttachBarView\", barView, this.owner);\n    },\n    didAttachView(barView: BarView): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    didDetachView(barView: BarView): void {\n      this.owner.callObservers(\"controllerDidDetachBarView\", barView, this.owner);\n    },\n    viewDidSetBarLayout(barLayout: BarLayout | null): void {\n      this.owner.callObservers(\"controllerDidSetBarLayout\", barLayout, this.owner);\n    },\n    viewDidDismissTool(toolView: ToolView, toolLayout: ToolLayout, barView: BarView): void {\n      toolView.remove();\n    },\n  })\n  readonly bar!: TraitViewRef<this, Trait, BarView> & Observes<BarView>;\n\n  protected createLayout(): BarLayout | null {\n    const tools = new Array<ToolLayout>();\n    const toolControllers = this.tools.controllers;\n    for (const controllerId in toolControllers) {\n      const toolController = toolControllers[controllerId]!;\n      const toolLayout = toolController.layout.value;\n      if (toolLayout !== null) {\n        tools.push(toolLayout);\n      }\n    }\n    return BarLayout.create(tools);\n  }\n\n  updateLayout(): void {\n    const barView = this.bar.view;\n    if (barView === null) {\n      return;\n    }\n    const barLayout = this.createLayout();\n    if (barLayout === null) {\n      return;\n    }\n    const timing = barView.getLookOr(Look.timing, Mood.navigating, false);\n    barView.layout.set(barLayout, timing);\n    // Immediately run resize pass to prevent layout flicker.\n    barView.requireUpdate(View.NeedsResize, true);\n  }\n\n  getTool<F extends Class<ToolController>>(key: string, toolControllerClass: F): InstanceType<F> | null;\n  getTool(key: string): ToolController | null;\n  getTool(key: string, toolControllerClass?: Class<ToolController>): ToolController | null {\n    if (toolControllerClass === void 0) {\n      toolControllerClass = ToolController;\n    }\n    const toolController = this.getChild(key);\n    return toolController instanceof toolControllerClass ? toolController : null;\n  }\n\n  getOrCreateTool<F extends Class<Instance<F, ToolController>> & Creatable<Instance<F, ToolController>>>(key: string, toolControllerClass: F): InstanceType<F> {\n    let toolController = this.getChild(key, toolControllerClass);\n    if (toolController === null) {\n      toolController = toolControllerClass.create();\n      this.setChild(key, toolController);\n    }\n    return toolController!;\n  }\n\n  setTool(key: string, toolController: ToolController | null): void {\n    this.setChild(key, toolController);\n  }\n\n  getToolView<F extends Class<ToolView>>(key: string, toolViewClass: F): InstanceType<F> | null;\n  getToolView(key: string): ToolView | null;\n  getToolView(key: string, toolViewClass?: Class<ToolView>): ToolView | null {\n    const barView = this.bar.view;\n    return barView !== null ? barView.getTool(key, toolViewClass!) : null;\n  }\n\n  getOrCreateToolView<F extends Class<Instance<F, ToolView>> & Creatable<Instance<F, ToolView>>>(key: string, toolViewClass: F): InstanceType<F> {\n    let barView = this.bar.view;\n    if (barView === null) {\n      barView = this.bar.createView();\n      if (barView === null) {\n        throw new Error(\"no bar view\");\n      }\n      this.bar.setView(barView);\n    }\n    return barView.getOrCreateTool(key, toolViewClass);\n  }\n\n  setToolView(key: string, toolView: ToolView | null): void {\n    let barView = this.bar.view;\n    if (barView === null) {\n      barView = this.bar.createView();\n      if (barView === null) {\n        throw new Error(\"no bar view\");\n      }\n      this.bar.setView(barView);\n    }\n    barView.setTool(key, toolView);\n  }\n\n  @TraitViewControllerSet({\n    controllerType: ToolController,\n    binds: true,\n    observes: true,\n    get parentView(): BarView | null {\n      return this.owner.bar.view;\n    },\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    willAttachController(toolController: ToolController): void {\n      this.owner.callObservers(\"controllerWillAttachTool\", toolController, this.owner);\n    },\n    didAttachController(toolController: ToolController): void {\n      const toolView = toolController.tool.view;\n      if (toolView !== null) {\n        this.attachToolView(toolView, toolController);\n      }\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    willDetachController(toolController: ToolController): void {\n      const toolView = toolController.tool.view;\n      if (toolView !== null) {\n        this.detachToolView(toolView, toolController);\n      }\n    },\n    didDetachController(toolController: ToolController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n      this.owner.callObservers(\"controllerDidDetachTool\", toolController, this.owner);\n    },\n    controllerWillAttachToolView(toolView: ToolView, toolController: ToolController): void {\n      this.owner.callObservers(\"controllerWillAttachToolView\", toolView, toolController, this.owner);\n      this.attachToolView(toolView, toolController);\n    },\n    controllerDidDetachToolView(toolView: ToolView, toolController: ToolController): void {\n      this.detachToolView(toolView, toolController);\n      this.owner.callObservers(\"controllerDidDetachToolView\", toolView, toolController, this.owner);\n    },\n    attachToolView(toolView: ToolView, toolController: ToolController): void {\n      if (toolView instanceof TitleToolView) {\n        const toolContentView = toolView.content.view;\n        if (toolContentView !== null) {\n          this.attachToolContentView(toolContentView, toolController);\n        }\n      }\n    },\n    detachToolView(toolView: ToolView, toolController: ToolController): void {\n      if (toolView instanceof TitleToolView) {\n        const toolContentView = toolView.content.view;\n        if (toolContentView !== null) {\n          this.detachToolContentView(toolContentView, toolController);\n        }\n      }\n      toolView.remove();\n    },\n    controllerDidSetToolLayout(toolLayout: ToolLayout | null, toolController: ToolController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n      this.owner.callObservers(\"controllerDidSetToolLayout\", toolLayout, toolController, this.owner);\n    },\n    controllerWillAttachToolContentView(contentView: HtmlView, toolController: ToolController): void {\n      this.attachToolContentView(contentView, toolController);\n      this.owner.callObservers(\"controllerWillAttachToolContentView\", contentView, toolController, this.owner);\n    },\n    controllerDidDetachToolContentView(contentView: HtmlView, toolController: ToolController): void {\n      this.owner.callObservers(\"controllerDidDetachToolContentView\", contentView, toolController, this.owner);\n      this.detachToolContentView(contentView, toolController);\n    },\n    attachToolContentView(toolContentView: HtmlView, toolController: ToolController): void {\n      // hook\n    },\n    detachToolContentView(toolContentView: HtmlView, toolController: ToolController): void {\n      // hook\n    },\n    controllerDidSetToolIcon(toolIcon: Graphics | null, toolController: ToolController): void {\n      this.owner.callObservers(\"controllerDidSetToolIcon\", toolIcon, toolController, this.owner);\n    },\n    controllerDidUpdateSearch(query: string, inputView: HtmlView, toolController: ToolController): void {\n      this.owner.callObservers(\"controllerDidUpdateSearchTool\", query, inputView, toolController, this.owner);\n    },\n    controllerDidSubmitSearch(query: string, inputView: HtmlView, toolController: ToolController): void {\n      this.owner.callObservers(\"controllerDidSubmitSearchTool\", query, inputView, toolController, this.owner);\n    },\n    controllerDidCancelSearch(inputView: HtmlView, toolController: ToolController): void {\n      this.owner.callObservers(\"controllerDidCancelSearchTool\", inputView, toolController, this.owner);\n    },\n    controllerDidPressToolView(input: PositionGestureInput, event: Event | null, toolController: ToolController): void {\n      this.owner.callObservers(\"controllerDidPressToolView\", input, event, toolController, this.owner);\n    },\n    controllerDidLongPressToolView(input: PositionGestureInput, toolController: ToolController): void {\n      this.owner.callObservers(\"controllerDidLongPressToolView\", input, toolController, this.owner);\n    },\n  })\n  readonly tools!: TraitViewControllerSet<this, Trait, ToolView, ToolController> & Observes<ToolController> & Observes<TitleToolController> & Observes<ButtonToolController> & Observes<SearchToolController> & {\n    attachToolView(toolView: ToolView, toolController: ToolController): void;\n    detachToolView(toolView: ToolView, toolController: ToolController): void;\n    attachToolContentView(toolContentView: HtmlView, toolController: ToolController): void;\n    detachToolContentView(toolContentView: HtmlView, toolController: ToolController): void;\n  };\n\n  protected override onAssemble(): void {\n    super.onAssemble();\n    this.updateLayout();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Feel} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {SvgView} from \"@swim/dom\";\nimport {Graphics} from \"@swim/graphics\";\nimport {PathContext} from \"@swim/graphics\";\nimport {PathRenderer} from \"@swim/graphics\";\n\n/** @public */\nexport type TokenViewState = \"collapsed\" | \"expanding\" | \"expanded\" | \"collapsing\";\n\n/** @public */\nexport interface TokenViewObserver<V extends TokenView = TokenView> extends HtmlViewObserver<V> {\n  tokenWillExpand?(view: V): void;\n\n  tokenDidExpand?(view: V): void;\n\n  tokenWillCollapse?(view: V): void;\n\n  tokenDidCollapse?(view: V): void;\n\n  tokenDidPressHead?(view: V): void;\n\n  tokenDidPressBody?(view: V): void;\n\n  tokenDidPressFoot?(view: V): void;\n}\n\n/** @public */\nexport class TokenView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.tokenState = \"expanded\";\n    this.onClickHead = this.onClickHead.bind(this);\n    this.onClickBody = this.onClickBody.bind(this);\n    this.onClickFoot = this.onClickFoot.bind(this);\n    this.initToken();\n  }\n\n  declare readonly observerType?: Class<TokenViewObserver>;\n\n  protected initToken(): void {\n    this.setIntrinsic<TokenView>({\n      classList: [\"token\"],\n      style: {\n        position: \"relative\",\n        height: 32,\n        boxSizing: \"content-box\",\n        userSelect: \"none\",\n      },\n    });\n    this.shape.insertView();\n  }\n\n  protected initShape(shapeView: SvgView): void {\n    shapeView.set({\n      classList: [\"shape\"],\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n      },\n    });\n\n    this.head.insertView(shapeView);\n    this.headIcon.attachView();\n    this.body.insertView(shapeView);\n    this.foot.insertView(shapeView);\n    this.footIcon.attachView();\n  }\n\n  protected initHead(headView: SvgView): void {\n    headView.setIntrinsic({\n      classList: [\"head\"],\n      attributes: {\n        fillRule: \"evenodd\",\n        cursor: \"pointer\",\n        pointerEvents: \"bounding-box\",\n      },\n    });\n  }\n\n  protected initHeadIcon(headIconView: SvgView): void {\n    headIconView.setIntrinsic({\n      classList: [\"head-icon\"],\n      attributes: {\n        pointerEvents: \"none\",\n      },\n    });\n  }\n\n  protected initBody(bodyView: SvgView): void {\n    bodyView.setIntrinsic({\n      classList: [\"body\"],\n      attributes: {\n        cursor: \"pointer\",\n        pointerEvents: \"fill\",\n      },\n    });\n  }\n\n  protected initFoot(footView: SvgView): void {\n    footView.setIntrinsic({\n      classList: [\"foot\"],\n      attributes: {\n        fillRule: \"evenodd\",\n        cursor: \"pointer\",\n        pointerEvents: \"bounding-box\",\n      },\n    });\n  }\n\n  protected initFootIcon(footIconView: SvgView): void {\n    footIconView.setIntrinsic({\n      classList: [\"foot-icon\"],\n      attributes: {\n        pointerEvents: \"none\",\n      },\n    });\n  }\n\n  protected initLabelContainer(labelContainer: HtmlView): void {\n    labelContainer.setIntrinsic({\n      classList: [\"label\"],\n      style: {\n        display: \"block\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        overflow: \"hidden\",\n        pointerEvents: \"none\",\n      },\n    });\n  }\n\n  protected initLabel(labelView: HtmlView): void {\n    labelView.style.setIntrinsic({\n      position: \"absolute\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n    });\n  }\n\n  readonly tokenState: TokenViewState;\n\n  get expanded(): boolean {\n    return this.tokenState === \"expanded\" || this.tokenState === \"expanding\";\n  }\n\n  get collapsed(): boolean {\n    return this.tokenState === \"collapsed\" || this.tokenState === \"collapsing\";\n  }\n\n  @Animator({\n    valueType: Number,\n    value: 1,\n    updateFlags: View.NeedsLayout,\n    didTransition(expandedPhase: number): void {\n      const tokenState = this.owner.tokenState;\n      if (tokenState === \"expanding\" && expandedPhase === 1) {\n        this.owner.didExpand();\n      } else if (tokenState === \"collapsing\" && expandedPhase === 0) {\n        this.owner.didCollapse();\n      }\n    },\n  })\n  readonly expandedPhase!: Animator<this, number>;\n\n  @ViewRef({\n    viewType: SvgView,\n    viewKey: true,\n    binds: true,\n    didAttachView(shapeView: SvgView): void {\n      this.owner.initShape(shapeView);\n    },\n  })\n  readonly shape!: ViewRef<this, SvgView>;\n\n  /** @internal */\n  get fillLook(): Look<Color> {\n    return Look.accentColor;\n  }\n\n  @ViewRef({\n    viewType: SvgView.forTag(\"path\"),\n    viewKey: true,\n    observes: true,\n    didAttachView(headView: SvgView): void {\n      this.owner.initHead(headView);\n      this.owner.headGesture.setView(headView);\n    },\n    willDetachView(headView: SvgView): void {\n      this.owner.headGesture.setView(null);\n    },\n    viewDidMount(headView: SvgView): void {\n      headView.addEventListener(\"click\", this.owner.onClickHead);\n    },\n    viewWillUnmount(headView: SvgView): void {\n      headView.removeEventListener(\"click\", this.owner.onClickHead);\n    },\n    viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, headView: SvgView): void {\n      headView.attributes.fill.setIntrinsic(theme.getOr(this.owner.fillLook, mood, null), timing);\n      const headIconView = this.owner.headIcon.view;\n      if (headIconView !== null && headIconView.attributes.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = theme.getOr(this.owner.fillLook, mood.updated(Feel.embossed, 1), null);\n        headIconView.attributes.fill.setIntrinsic(iconColor, timing);\n      }\n    },\n  })\n  readonly head!: ViewRef<this, SvgView> & Observes<SvgView>;\n\n  @PositionGesture({\n    didStartHovering(): void {\n      const headView = this.view!;\n      headView.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n      const timing = headView.getLook(Look.timing);\n      headView.attributes.fill.setIntrinsic(headView.getLookOr(this.owner.fillLook, null), timing);\n      const headIconView = this.owner.headIcon.view;\n      if (headIconView !== null && headIconView.attributes.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = headView.getLookOr(this.owner.fillLook, headView.mood.getValue().updated(Feel.embossed, 1), null);\n        headIconView.attributes.fill.setIntrinsic(iconColor, timing);\n      }\n    },\n    didStopHovering(): void {\n      const headView = this.view!;\n      headView.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      const timing = headView.getLook(Look.timing);\n      headView.attributes.fill.setIntrinsic(headView.getLookOr(this.owner.fillLook, null), timing);\n      const headIconView = this.owner.headIcon.view;\n      if (headIconView !== null && headIconView.attributes.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = headView.getLookOr(this.owner.fillLook, headView.mood.getValue().updated(Feel.embossed, 1), null);\n        headIconView.attributes.fill.setIntrinsic(iconColor, timing);\n      }\n    },\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\") {\n        this.beginHover(input, event);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n  })\n  readonly headGesture!: PositionGesture<this, SvgView>;\n\n  /** @internal */\n  @ViewRef({\n    viewType: SvgView.forTag(\"path\"),\n    viewKey: true,\n    didAttachView(headIconView: SvgView): void {\n      this.owner.initHeadIcon(headIconView);\n    },\n    insertChild(parent: View, child: SvgView, target: View | number | null, key: string | undefined): void {\n      const shapeView = this.owner.shape.view;\n      if (shapeView !== null) {\n        shapeView.insertChild(child, this.owner.body.view, key);\n      }\n    },\n  })\n  readonly headIcon!: ViewRef<this, SvgView>;\n\n  @Property({\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    init(): void {\n      this.embossed = true;\n    },\n  })\n  readonly icon!: Property<this, Graphics | null> & {\n    embossed: boolean,\n  };\n\n  @ViewRef({\n    viewType: SvgView.forTag(\"path\"),\n    viewKey: true,\n    observes: true,\n    didAttachView(bodyView: SvgView): void {\n      this.owner.initBody(bodyView);\n      this.owner.bodyGesture.setView(bodyView);\n    },\n    willDetachView(bodyView: SvgView): void {\n      this.owner.bodyGesture.setView(null);\n    },\n    viewDidMount(headView: SvgView): void {\n      headView.addEventListener(\"click\", this.owner.onClickBody);\n    },\n    viewWillUnmount(headView: SvgView): void {\n      headView.removeEventListener(\"click\", this.owner.onClickBody);\n    },\n    viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, bodyView: SvgView): void {\n      bodyView.attributes.fill.setIntrinsic(theme.getOr(this.owner.fillLook, mood, null), timing);\n      const labelView = this.owner.label.view;\n      if (labelView !== null && labelView.style.color.hasAffinity(Affinity.Intrinsic)) {\n        labelView.style.color.setIntrinsic(theme.getOr(Look.backgroundColor, mood, null), timing);\n      }\n    },\n  })\n  readonly body!: ViewRef<this, SvgView> & Observes<SvgView>;\n\n  @PositionGesture({\n    didStartHovering(): void {\n      const bodyView = this.view!;\n      bodyView.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n      const timing = bodyView.getLook(Look.timing);\n      bodyView.attributes.fill.setIntrinsic(bodyView.getLookOr(this.owner.fillLook, null), timing);\n      const labelView = this.owner.label.view;\n      if (labelView !== null && labelView.style.color.hasAffinity(Affinity.Intrinsic)) {\n        labelView.style.color.setIntrinsic(bodyView.getLookOr(Look.backgroundColor, null), timing);\n      }\n    },\n    didStopHovering(): void {\n      const bodyView = this.view!;\n      bodyView.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      const timing = bodyView.getLook(Look.timing);\n      bodyView.attributes.fill.setIntrinsic(bodyView.getLookOr(this.owner.fillLook, null), timing);\n      const labelView = this.owner.label.view;\n      if (labelView !== null && labelView.style.color.hasAffinity(Affinity.Intrinsic)) {\n        labelView.style.color.setIntrinsic(bodyView.getLookOr(Look.backgroundColor, null), timing);\n      }\n    },\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\") {\n        this.beginHover(input, event);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n  })\n  readonly bodyGesture!: PositionGesture<this, SvgView>;\n\n  @ViewRef({\n    viewType: SvgView.forTag(\"path\"),\n    viewKey: true,\n    observes: true,\n    didAttachView(footView: SvgView): void {\n      this.owner.initFoot(footView);\n      this.owner.footGesture.setView(footView);\n    },\n    willDetachView(footView: SvgView): void {\n      this.owner.footGesture.setView(null);\n    },\n    viewDidMount(footView: SvgView): void {\n      footView.addEventListener(\"click\", this.owner.onClickFoot);\n    },\n    viewWillUnmount(footView: SvgView): void {\n      footView.removeEventListener(\"click\", this.owner.onClickFoot);\n    },\n    viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, footView: SvgView): void {\n      footView.attributes.fill.setIntrinsic(theme.getOr(this.owner.fillLook, mood, null), timing);\n      const footIconView = this.owner.footIcon.view;\n      if (footIconView !== null && footIconView.attributes.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = theme.getOr(this.owner.fillLook, mood.updated(Feel.embossed, 1), null);\n        footIconView.attributes.fill.setIntrinsic(iconColor, timing);\n      }\n    },\n  })\n  readonly foot!: ViewRef<this, SvgView> & Observes<SvgView>;\n\n  @PositionGesture({\n    didStartHovering(): void {\n      const footView = this.view!;\n      footView.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n      const timing = footView.getLook(Look.timing);\n      footView.attributes.fill.setIntrinsic(footView.getLookOr(this.owner.fillLook, null), timing);\n      const footIconView = this.owner.footIcon.view;\n      if (footIconView !== null && footIconView.attributes.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = footView.getLookOr(this.owner.fillLook, footView.mood.getValue().updated(Feel.embossed, 1), null);\n        footIconView.attributes.fill.setIntrinsic(iconColor, timing);\n      }\n    },\n    didStopHovering(): void {\n      const footView = this.view!;\n      footView.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      const timing = footView.getLook(Look.timing);\n      footView.attributes.fill.setIntrinsic(footView.getLookOr(this.owner.fillLook, null), timing);\n      const footIconView = this.owner.footIcon.view;\n      if (footIconView !== null && footIconView.attributes.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = footView.getLookOr(this.owner.fillLook, footView.mood.getValue().updated(Feel.embossed, 1), null);\n        footIconView.attributes.fill.setIntrinsic(iconColor, timing);\n      }\n    },\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\") {\n        this.beginHover(input, event);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n  })\n  readonly footGesture!: PositionGesture<this, SvgView>;\n\n  /** @internal */\n  @ViewRef({\n    viewType: SvgView.forTag(\"path\"),\n    viewKey: true,\n    didAttachView(footIconView: SvgView): void {\n      this.owner.initFootIcon(footIconView);\n    },\n    insertChild(parent: View, child: SvgView, target: View | number | null, key: string | undefined): void {\n      const shapeView = this.owner.shape.view;\n      if (shapeView !== null) {\n        shapeView.appendChild(child, key);\n      }\n    },\n  })\n  readonly footIcon!: ViewRef<this, SvgView> & Observes<SvgView>;\n\n  @Property({\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    init(): void {\n      this.embossed = true;\n    },\n  })\n  readonly accessory!: Property<this, Graphics | null> & {\n    embossed: boolean,\n  };\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    binds: true,\n    didAttachView(labelContainer: HtmlView): void {\n      this.owner.initLabelContainer(labelContainer);\n    },\n  })\n  readonly labelContainer!: ViewRef<this, HtmlView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    didAttachView(labelView: HtmlView): void {\n      if (labelView.parent === null) {\n        this.owner.labelContainer.insertView();\n        const labelContainer = this.owner.labelContainer.view;\n        if (labelContainer !== null) {\n          labelContainer.appendChild(labelView);\n        }\n      }\n      this.owner.initLabel(labelView);\n    },\n  })\n  readonly label!: ViewRef<this, HtmlView>;\n\n  protected override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((processFlags & View.NeedsLayout) !== 0) {\n      processFlags |= View.NeedsAnimate;\n    }\n    return processFlags;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutToken();\n  }\n\n  protected layoutToken(): void {\n    const gap = 2;\n\n    const paddingTop = this.style.paddingTop.getStateOr(Length.zero()).pxValue();\n    const paddingRight = this.style.paddingRight.getStateOr(Length.zero()).pxValue();\n    const paddingBottom = this.style.paddingBottom.getStateOr(Length.zero()).pxValue();\n    const paddingLeft = this.style.paddingLeft.getStateOr(Length.zero()).pxValue();\n    const boxHeight = this.node.clientHeight;\n    const tokenHeight = boxHeight - paddingTop - paddingBottom;\n    const radius = tokenHeight / 2;\n    const pad = Math.sqrt(gap * gap + 2 * radius * gap);\n    const padAngle = Math.asin(pad / (radius + gap));\n    const labelPaddingLeft = radius / 2;\n    const labelPaddingRight = radius;\n    const accessoryPaddingRight = radius / 2;\n    const expandedPhase = this.expandedPhase.value;\n\n    const icon = this.icon.value;\n    const accessoryIcon = this.accessory.value;\n\n    let labelWidth = 0;\n    let bodyWidth = 0;\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      labelWidth = labelView.node.clientWidth;\n      bodyWidth += labelPaddingLeft + labelWidth + labelPaddingRight;\n    }\n\n    let accessoryWidth = 0;\n    let footWidth = 0;\n    if (accessoryIcon !== null) {\n      accessoryWidth = 2 * radius;\n      footWidth += accessoryWidth + accessoryPaddingRight;\n    }\n\n    let tokenWidth = tokenHeight;\n    if (expandedPhase !== 0 && bodyWidth !== 0) {\n      tokenWidth += gap + expandedPhase * bodyWidth;\n    }\n    const bodyRight = tokenWidth;\n    if (expandedPhase !== 0 && footWidth !== 0) {\n      tokenWidth += gap + expandedPhase * footWidth;\n    }\n\n    const width = tokenWidth + paddingLeft + paddingRight;\n    const height = boxHeight;\n\n    this.style.width.setIntrinsic(tokenWidth);\n\n    const labelContainer = this.labelContainer.view;\n    if (labelContainer !== null) {\n      labelContainer.style.setIntrinsic({\n        display: expandedPhase !== 0 ? \"block\" : \"none\",\n        left: paddingLeft + tokenHeight + gap + labelPaddingLeft,\n        top: paddingTop,\n        width: expandedPhase * labelWidth,\n        height: tokenHeight\n      });\n    }\n\n    const shapeView = this.shape.view;\n    if (shapeView !== null) {\n      shapeView.attributes.setIntrinsic({\n        width, height,\n        viewBox: \"0 0 \" + width + \" \" + height,\n      });\n    }\n\n    const headView = this.head.view;\n    if (headView !== null) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      context.arc(paddingLeft + radius, paddingTop + radius, radius, -(Math.PI / 2), 3 * (Math.PI / 2));\n      context.closePath();\n      if (icon !== null && !this.icon.embossed) {\n        const renderer = new PathRenderer(context);\n        const frame = new R2Box(paddingLeft, paddingTop, paddingLeft + tokenHeight, paddingTop + tokenHeight);\n        icon.render(renderer, frame);\n        this.headIcon.removeView();\n      }\n      headView.attributes.d.setIntrinsic(context.toString());\n    }\n    const headIconView = this.headIcon.view;\n    if (headIconView !== null) {\n      if (icon !== null && this.icon.embossed) {\n        const context = new PathContext();\n        context.setPrecision(3);\n        const renderer = new PathRenderer(context);\n        const frame = new R2Box(paddingLeft, paddingTop, paddingLeft + tokenHeight, paddingTop + tokenHeight);\n        icon.render(renderer, frame);\n        headIconView.attributes.d.setIntrinsic(context.toString());\n        this.headIcon.insertView();\n      } else {\n        this.headIcon.removeView();\n      }\n    }\n\n    const bodyView = this.body.view;\n    if (bodyView !== null) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      if (expandedPhase !== 0) {\n        const u = 1 - expandedPhase;\n        context.arc(paddingLeft + radius, paddingTop + radius, radius + gap, -(Math.PI / 2) + padAngle, Math.PI / 2 - padAngle);\n        context.arc(paddingLeft + bodyRight - radius - u * gap, paddingTop + radius, radius + u * gap, Math.PI / 2 - u * padAngle, -(Math.PI / 2) + u * padAngle, true);\n        context.closePath();\n      }\n      bodyView.attributes.d.setIntrinsic(context.toString());\n    }\n\n    const footView = this.foot.view;\n    if (footView !== null && accessoryIcon !== null) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      if (expandedPhase !== 0) {\n        const u = 1 - expandedPhase;\n        context.arc(paddingLeft + bodyRight - radius, paddingTop + radius, radius + gap, -(Math.PI / 2) + padAngle, Math.PI / 2 - padAngle);\n        context.arc(paddingLeft + tokenWidth - radius - u * gap, paddingTop + radius, radius + u * gap, Math.PI / 2 - u * padAngle, -(Math.PI / 2) + u * padAngle, true);\n        context.closePath();\n        if (accessoryIcon !== null && !this.accessory.embossed) {\n          const renderer = new PathRenderer(context);\n          const frame = new R2Box(paddingLeft + bodyRight + gap, paddingTop, paddingLeft + bodyRight + gap + 2 * radius, paddingTop + 2 * radius);\n          accessoryIcon.render(renderer, frame);\n          this.headIcon.removeView();\n        }\n      }\n      footView.attributes.d.setIntrinsic(context.toString());\n    }\n    const footIconView = this.footIcon.view;\n    if (footIconView !== null) {\n      if (accessoryIcon !== null && this.accessory.embossed) {\n        const context = new PathContext();\n        context.setPrecision(3);\n        if (expandedPhase !== 0) {\n          const renderer = new PathRenderer(context);\n          const frame = new R2Box(paddingLeft + bodyRight + gap, paddingTop, paddingLeft + bodyRight + gap + tokenHeight, paddingTop + tokenHeight);\n          accessoryIcon.render(renderer, frame);\n        }\n        footIconView.attributes.d.setIntrinsic(context.toString());\n        this.footIcon.insertView();\n      } else {\n        this.footIcon.removeView();\n      }\n    }\n  }\n\n  expand(timing?: TimingLike | boolean): void {\n    if (this.tokenState !== \"expanded\" || this.expandedPhase.value !== 1) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      if (this.tokenState !== \"expanding\") {\n        this.willExpand();\n        this.onExpand();\n      }\n      if (timing !== false) {\n        if (this.expandedPhase.value !== 1) {\n          this.expandedPhase.setIntrinsic(1, timing);\n        } else {\n          setTimeout(this.didExpand.bind(this));\n        }\n      } else {\n        this.expandedPhase.setIntrinsic(1);\n        this.didExpand();\n      }\n    }\n  }\n\n  protected willExpand(): void {\n    (this as Mutable<this>).tokenState = \"expanding\";\n    const labelContainer = this.labelContainer.view;\n    if (labelContainer !== null) {\n      labelContainer.style.display.setIntrinsic(\"block\");\n    }\n    this.callObservers(\"tokenWillExpand\", this);\n  }\n\n  protected onExpand(): void {\n    // hook\n  }\n\n  protected didExpand(): void {\n    (this as Mutable<this>).tokenState = \"expanded\";\n    this.requireUpdate(View.NeedsLayout);\n    this.callObservers(\"tokenDidExpand\", this);\n  }\n\n  collapse(timing?: TimingLike | boolean): void {\n    if (this.tokenState !== \"collapsed\" || this.expandedPhase.value !== 0) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      if (this.tokenState !== \"collapsing\") {\n        this.willCollapse();\n        this.onCollapse();\n      }\n      if (timing !== false) {\n        if (this.expandedPhase.value !== 0) {\n          this.expandedPhase.setIntrinsic(0, timing);\n        } else {\n          setTimeout(this.didCollapse.bind(this));\n        }\n      } else {\n        this.expandedPhase.setIntrinsic(0);\n        this.didCollapse();\n      }\n    }\n  }\n\n  protected willCollapse(): void {\n    (this as Mutable<this>).tokenState = \"collapsing\";\n    this.callObservers(\"tokenWillCollapse\", this);\n  }\n\n  protected onCollapse(): void {\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      labelView.node.blur();\n    }\n  }\n\n  protected didCollapse(): void {\n    (this as Mutable<this>).tokenState = \"collapsed\";\n    this.requireUpdate(View.NeedsLayout);\n    this.callObservers(\"tokenDidCollapse\", this);\n  }\n\n  toggle(timing?: TimingLike | boolean): void {\n    const tokenState = this.tokenState;\n    if (tokenState === \"collapsed\" || tokenState === \"collapsing\") {\n      this.expand(timing);\n    } else if (tokenState === \"expanded\" || tokenState === \"expanding\") {\n      this.collapse(timing);\n    }\n  }\n\n  protected onClickHead(event: MouseEvent): void {\n    this.toggle();\n    const labelView = this.label.view;\n    if (labelView !== null && this.expanded) {\n      labelView.node.focus();\n    }\n    this.didPressHead();\n  }\n\n  protected didPressHead(): void {\n    this.callObservers(\"tokenDidPressHead\", this);\n  }\n\n  protected onClickBody(event: MouseEvent): void {\n    this.didPressBody();\n  }\n\n  protected didPressBody(): void {\n    this.callObservers(\"tokenDidPressBody\", this);\n  }\n\n  protected onClickFoot(event: MouseEvent): void {\n    this.didPressFoot();\n  }\n\n  protected didPressFoot(): void {\n    this.callObservers(\"tokenDidPressFoot\", this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport type {StyleSheet} from \"@swim/dom\";\nimport {StyleRule} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {StyleView} from \"@swim/dom\";\nimport type {TokenViewObserver} from \"./TokenView\";\nimport {TokenView} from \"./TokenView\";\n\n/** @public */\nexport interface InputTokenViewObserver<V extends InputTokenView = InputTokenView> extends TokenViewObserver<V> {\n  tokenDidUpdateInput?(inputView: HtmlView, view: V): void;\n\n  tokenDidChangeInput?(inputView: HtmlView, view: V): void;\n\n  tokenDidAcceptInput?(inputView: HtmlView, view: V): void;\n}\n\n/** @public */\nexport class InputTokenView extends TokenView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.onInputUpdate = this.onInputUpdate.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onInputKey = this.onInputKey.bind(this);\n  }\n\n  declare readonly observerType?: Class<InputTokenViewObserver>;\n\n  protected override initToken(): void {\n    super.initToken();\n    this.classList.add(\"input-token\");\n    this.label.attachView();\n  }\n\n  protected override initLabel(labelView: HtmlView): void {\n    super.initLabel(labelView);\n    labelView.style.setIntrinsic({\n      padding: 0,\n      borderStyle: \"none\",\n      boxSizing: \"border-box\",\n      backgroundColor: Color.transparent(),\n      appearance: \"none\",\n      outlineStyle: \"none\",\n      pointerEvents: \"auto\",\n    });\n  }\n\n  @ViewRef({\n    viewType: StyleView,\n    viewKey: true,\n    binds: true,\n    init(): void {\n      this.insertView();\n    },\n  })\n  readonly stylesheet!: ViewRef<this, StyleView>;\n\n  @StyleRule({\n    inherits: true,\n    get parent(): StyleSheet | null {\n      const styleView = this.owner.stylesheet.view;\n      return styleView !== null ? styleView.sheet : null;\n    },\n    selector: \"::placeholder\",\n  })\n  readonly placeholderRule!: StyleRule<this>;\n\n  @ViewRef({\n    viewType: HtmlView.forTag(\"input\"),\n    observes: true,\n    didAttachView(labelView: HtmlView): void {\n      if (labelView.parent === null) {\n        this.owner.labelContainer.insertView();\n        const labelContainer = this.owner.labelContainer.view;\n        if (labelContainer !== null) {\n          labelContainer.appendChild(labelView);\n        }\n      }\n      this.owner.initLabel(labelView);\n    },\n    viewDidMount(labelView: HtmlView): void {\n      labelView.addEventListener(\"input\", this.owner.onInputUpdate as EventListener);\n      labelView.addEventListener(\"change\", this.owner.onInputChange);\n      labelView.addEventListener(\"keydown\", this.owner.onInputKey);\n    },\n    viewWillUnmount(labelView: HtmlView): void {\n      labelView.removeEventListener(\"input\", this.owner.onInputUpdate as EventListener);\n      labelView.removeEventListener(\"change\", this.owner.onInputChange);\n      labelView.removeEventListener(\"keydown\", this.owner.onInputKey);\n    },\n  })\n  override readonly label!: ViewRef<this, HtmlView> & Observes<HtmlView>;\n\n  /** @internal */\n  get placeholderLook(): Look<Color> {\n    return Look.placeholderColor;\n  }\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    this.placeholderRule.style.color.setIntrinsic(theme.getOr(this.placeholderLook, mood, null), timing);\n\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      labelView.style.font.setIntrinsic(theme.getOr(Look.font, mood, null), false);\n    }\n  }\n\n  protected onInputUpdate(event: InputEvent): void {\n    const inputView = this.label.view;\n    if (inputView !== null) {\n      this.didUpdateInput(inputView);\n    }\n  }\n\n  protected didUpdateInput(inputView: HtmlView): void {\n    this.callObservers(\"tokenDidUpdateInput\", inputView, this);\n  }\n\n  protected onInputChange(event: Event): void {\n    const inputView = this.label.view;\n    if (inputView !== null) {\n      this.didChangeInput(inputView);\n    }\n  }\n\n  protected didChangeInput(inputView: HtmlView): void {\n    this.callObservers(\"tokenDidChangeInput\", inputView, this);\n  }\n\n  protected onInputKey(event: KeyboardEvent): void {\n    const inputView = this.label.view;\n    if (inputView !== null && event.key === \"Enter\") {\n      this.didAcceptInput(inputView);\n    }\n  }\n\n  protected didAcceptInput(inputView: HtmlView): void {\n    this.callObservers(\"tokenDidAcceptInput\", inputView, this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals} from \"@swim/util\";\nimport {Equivalent} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport type {ColorOrLookLike} from \"@swim/theme\";\nimport type {ColorOrLook} from \"@swim/theme\";\nimport {ColorLook} from \"@swim/theme\";\n\n/** @public */\nexport type ColLayoutLike = ColLayout | ColLayoutInit;\n\n/** @public */\nexport interface ColLayoutInit {\n  key?: string;\n  grow?: number;\n  shrink?: number;\n  basis?: LengthLike;\n  optional?: boolean;\n  persistent?: boolean;\n  textColor?: ColorOrLookLike | null;\n  width?: LengthLike | null;\n  left?: LengthLike | null;\n  right?: LengthLike | null;\n  hidden?: boolean;\n}\n\n/** @public */\nexport class ColLayout implements Equals, Equivalent, Debug {\n  constructor(key: string, grow: number, shrink: number, basis: Length,\n              optional: boolean, persistent: boolean, textColor: ColorOrLook | null,\n              width: Length | null, left: Length | null, right: Length | null, hidden: boolean) {\n    this.key = key;\n    this.grow = grow;\n    this.shrink = shrink;\n    this.basis = basis;\n    this.optional = optional;\n    this.persistent = persistent;\n    this.textColor = textColor;\n    this.width = width;\n    this.left = left;\n    this.right = right;\n    this.hidden = hidden;\n  }\n\n  likeType?(like: ColLayoutInit): void;\n\n  readonly key: string;\n\n  withKey(key: string): ColLayout {\n    return this.copy(key, this.grow, this.shrink, this.basis, this.optional, this.persistent,\n                     this.textColor, this.width, this.left, this.right, this.hidden);\n  }\n\n  readonly grow: number;\n\n  readonly shrink: number;\n\n  readonly basis: Length;\n\n  withFlex(grow: number, shrink: number, basis?: LengthLike): ColLayout {\n    if (basis !== void 0) {\n      basis = Length.fromLike(basis);\n    } else {\n      basis = this.basis;\n    }\n    return this.copy(this.key, grow, shrink, basis, this.optional, this.persistent,\n                     this.textColor, this.width, this.left, this.right, this.hidden);\n  }\n\n  readonly optional: boolean;\n\n  asOptional(optional: boolean): ColLayout {\n    return this.copy(this.key, this.grow, this.shrink, this.basis, optional, this.persistent,\n                     this.textColor, this.width, this.left, this.right, this.hidden);\n  }\n\n  readonly persistent: boolean;\n\n  asPersistent(persistent: boolean): ColLayout {\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.optional, persistent,\n                     this.textColor, this.width, this.left, this.right, this.hidden);\n  }\n\n  readonly textColor: ColorOrLook | null;\n\n  withTextColor(textColor: ColorOrLookLike | null): ColLayout {\n    textColor = ColorLook.fromLike(textColor);\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.optional, this.persistent,\n                     textColor, this.width, this.left, this.right, this.hidden);\n  }\n\n  readonly width: Length | null;\n\n  readonly left: Length | null;\n\n  readonly right: Length | null;\n\n  readonly hidden: boolean;\n\n  asHidden(hidden: boolean): ColLayout {\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.optional, this.persistent,\n                     this.textColor, this.width, this.left, this.right, hidden);\n  }\n\n  resized(width: LengthLike | null, left: LengthLike | null,\n          right: LengthLike | null, hidden?: boolean): ColLayout {\n    if (width !== null) {\n      width = Length.fromLike(width);\n    }\n    if (left !== null) {\n      left = Length.fromLike(left);\n    }\n    if (right !== null) {\n      right = Length.fromLike(right);\n    }\n    if (hidden === void 0) {\n      hidden = this.hidden;\n    }\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.optional,\n                     this.persistent, this.textColor, width, left, right, hidden);\n  }\n\n  protected copy(key: string, grow: number, shrink: number, basis: Length, optional: boolean,\n                 persistent: boolean, textColor: ColorOrLook | null,\n                 width: Length | null, left: Length | null, right: Length | null,\n                 hidden: boolean): ColLayout {\n    return new ColLayout(key, grow, shrink, basis, optional, persistent,\n                         textColor, width, left, right, hidden);\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColLayout) {\n      return this.key === that.key && this.grow === that.grow && this.shrink === that.shrink\n          && this.basis.equivalentTo(that.basis, epsilon) && this.optional === that.optional\n          && this.persistent === that.persistent && Equivalent(this.textColor, that.textColor, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColLayout) {\n      return this.key === that.key && this.grow === that.grow && this.shrink === that.shrink\n          && this.basis.equals(that.basis) && this.optional === that.optional\n          && this.persistent === that.persistent && Equals(this.textColor, that.textColor)\n          && Equals(this.width, that.width) && Equals(this.left, that.left)\n          && Equals(this.right, that.right) && this.hidden === that.hidden;\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"ColLayout\").write(46/*'.'*/).write(\"create\").write(40/*'('*/)\n                   .debug(this.key).write(\", \").debug(this.grow).write(\", \")\n                   .debug(this.shrink).write(\", \").debug(this.basis).write(41/*')'*/);\n    if (this.optional) {\n      output = output.write(46/*'.'*/).write(\"asOptional\").write(40/*'('*/)\n                     .debug(this.optional).write(41/*')'*/);\n    }\n    if (this.persistent) {\n      output = output.write(46/*'.'*/).write(\"asPersistent\").write(40/*'('*/)\n                     .debug(this.persistent).write(41/*')'*/);\n    }\n    if (this.textColor) {\n      output = output.write(46/*'.'*/).write(\"withTextColor\").write(40/*'('*/)\n                     .debug(this.textColor).write(41/*')'*/);\n    }\n    if (this.width !== null || this.left !== null || this.right !== null || this.hidden) {\n      output = output.write(46/*'.'*/).write(\"resized\").write(40/*'('*/)\n                     .debug(this.width).write(\", \").debug(this.left).write(\", \")\n                     .debug(this.right).write(\", \").debug(this.hidden).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(key: string, grow?: number, shrink?: number, basis?: LengthLike,\n                optional?: boolean, persistent?: boolean, textColor?: ColorOrLookLike | null): ColLayout {\n    if (grow === void 0) {\n      grow = 0;\n    }\n    if (shrink === void 0) {\n      shrink = 1;\n    }\n    if (basis !== void 0) {\n      basis = Length.fromLike(basis);\n    } else {\n      basis = Length.zero();\n    }\n    if (optional === void 0) {\n      optional = false;\n    }\n    if (persistent === void 0) {\n      persistent = false;\n    }\n    if (textColor === void 0) {\n      textColor = null;\n    }\n    if (textColor === void 0) {\n      textColor = null;\n    }\n    if (textColor !== null) {\n      textColor = ColorLook.fromLike(textColor);\n    }\n    return new ColLayout(key, grow, shrink, basis, optional, persistent,\n                         textColor, null, null, null, false);\n  }\n\n  static fromLike(value: ColLayoutLike): ColLayout {\n    if (value === void 0 || value === null || value instanceof ColLayout) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return ColLayout.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: ColLayoutInit): ColLayout {\n    let key = init.key;\n    if (key === void 0) {\n      key = \"\";\n    }\n    let grow = init.grow;\n    if (grow === void 0) {\n      grow = 0;\n    }\n    let shrink = init.shrink;\n    if (shrink === void 0) {\n      shrink = 1;\n    }\n    let basis = init.basis;\n    if (basis !== void 0) {\n      basis = Length.fromLike(basis);\n    } else {\n      basis = Length.zero();\n    }\n    let optional = init.optional;\n    if (optional === void 0) {\n      optional = false;\n    }\n    let persistent = init.persistent;\n    if (persistent === void 0) {\n      persistent = false;\n    }\n    let textColor = init.textColor;\n    if (textColor === void 0) {\n      textColor = null;\n    }\n    if (textColor !== null) {\n      textColor = ColorLook.fromLike(textColor);\n    }\n    let width = init.width;\n    if (width !== void 0 && width !== null) {\n      width = Length.fromLike(width);\n    } else {\n      width = null;\n    }\n    let left = init.left;\n    if (left !== void 0 && left !== null) {\n      left = Length.fromLike(left);\n    } else {\n      left = null;\n    }\n    let right = init.right;\n    if (right !== void 0 && right !== null) {\n      right = Length.fromLike(right);\n    } else {\n      right = null;\n    }\n    let hidden = init.hidden;\n    if (hidden === void 0) {\n      hidden = false;\n    }\n    return new ColLayout(key, grow, shrink, basis, optional, persistent,\n                         textColor, width, left, right, hidden);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals} from \"@swim/util\";\nimport type {Equivalent} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport type {Debug} from \"@swim/codec\";\nimport {Format} from \"@swim/codec\";\nimport type {LengthLike} from \"@swim/math\";\nimport {Length} from \"@swim/math\";\nimport type {ColLayoutLike} from \"./ColLayout\";\nimport {ColLayout} from \"./ColLayout\";\n\n/** @public */\nexport type TableLayoutLike = TableLayout | TableLayoutInit;\n\n/** @public */\nexport interface TableLayoutInit {\n  width?: LengthLike | null;\n  left?: LengthLike | null;\n  right?: LengthLike | null;\n  colSpacing?: LengthLike | null;\n  cols: ColLayoutLike[];\n}\n\n/** @public */\nexport class TableLayout implements Equals, Equivalent, Debug {\n  constructor(width: Length | null, left: Length | null, right: Length | null,\n              colSpacing: Length | null, cols: readonly ColLayout[]) {\n    this.width = width;\n    this.left = left;\n    this.right = right;\n    this.colSpacing = colSpacing;\n    this.cols = cols;\n  }\n\n  likeType?(like: TableLayoutInit): void;\n\n  readonly width: Length | null;\n\n  readonly left: Length | null;\n\n  readonly right: Length | null;\n\n  readonly colSpacing: Length | null;\n\n  readonly cols: readonly ColLayout[];\n\n  getCol(key: string): ColLayout | null {\n    const cols = this.cols;\n    for (let i = 0; i < cols.length; i += 1) {\n      const col = cols[i]!;\n      if (key === col.key) {\n        return col;\n      }\n    }\n    return null;\n  }\n\n  resized(width: LengthLike, left?: LengthLike | null, right?: LengthLike | null,\n          colSpacing?: LengthLike | null): TableLayout {\n    width = Length.fromLike(width);\n    if (left === void 0) {\n      left = this.left;\n    } else if (left !== null) {\n      left = Length.fromLike(left);\n    }\n    if (right === void 0) {\n      right = this.right;\n    } else if (right !== null) {\n      right = Length.fromLike(right);\n    }\n    if (colSpacing === void 0) {\n      colSpacing = this.colSpacing;\n    } else if (colSpacing !== null) {\n      colSpacing = Length.fromLike(colSpacing);\n    }\n    if (Equals(this.width, width) && Equals(this.left, left) &&\n        Equals(this.right, right) && Equals(this.colSpacing, colSpacing)) {\n      return this;\n    } else {\n      const oldCols = this.cols;\n      const colCount = oldCols.length;\n      const newCols = new Array<ColLayout>(colCount);\n      const tableWidth = width.pxValue();\n      const tableLeft = left !== null ? left.pxValue(tableWidth) : 0;\n      const tableRight = right !== null ? right.pxValue(tableWidth) : 0;\n      const spacing = colSpacing !== null ? colSpacing.pxValue(tableWidth) : 0;\n\n      let grow = 0;\n      let shrink = 0;\n      let optional = 0;\n      let basis = tableLeft + tableRight;\n      let x = tableLeft;\n      for (let i = 0; i < colCount; i += 1) {\n        if (i !== 0) {\n          basis += spacing;\n          x += spacing;\n        }\n        const col = oldCols[i]!;\n        const colWidth = col.basis.pxValue(tableWidth);\n        newCols[i] = col.resized(colWidth, x, tableWidth - colWidth - x, false);\n        grow += col.grow;\n        shrink += col.shrink;\n        if (col.optional) {\n          optional += 1;\n        }\n        basis += colWidth;\n        x += colWidth;\n      }\n\n      if (basis > tableWidth && optional > 0) {\n        // Hide optional cols as needed to fit.\n        let i = colCount - 1;\n        while (i >= 0 && optional > 0) {\n          const col = newCols[i]!;\n          const colWidth = col.width!.pxValue();\n          if (col.optional) {\n            newCols[i] = col.resized(0, x, tableWidth - x, true);\n            grow -= col.grow;\n            shrink -= col.shrink;\n            optional -= 1;\n            basis -= colWidth;\n          }\n          x -= colWidth;\n          if (i !== 0) {\n            basis -= spacing;\n            x -= spacing;\n          }\n\n          if (basis <= tableWidth) {\n            // Remaining cols now fit.\n            break;\n          }\n          i -= 1;\n        }\n\n        // Resize trailing non-optional cols.\n        i += 1;\n        while (i < colCount) {\n          const col = newCols[i]!;\n          if (!col.optional) {\n            basis += spacing;\n            x += spacing;\n            const colWidth = col.basis.pxValue(tableWidth);\n            newCols[i] = col.resized(colWidth, x, tableWidth - colWidth - x);\n            x += colWidth;\n          }\n          i += 1;\n        }\n      }\n\n      if (basis < tableWidth && grow > 0) {\n        const delta = tableWidth - basis;\n        let x = tableLeft;\n        let j = 0;\n        for (let i = 0; i < colCount; i += 1) {\n          const col = newCols[i]!;\n          if (!col.hidden) {\n            if (j !== 0) {\n              x += spacing;\n            }\n            const colBasis = col.basis.pxValue(tableWidth);\n            const colWidth = colBasis + delta * (col.grow / grow);\n            newCols[i] = col.resized(colWidth, x, tableWidth - colWidth - x);\n            x += colWidth;\n            j += 1;\n          } else {\n            newCols[i] = col.resized(0, x + spacing, tableWidth - x - spacing);\n          }\n        }\n      } else if (basis > tableWidth && shrink > 0) {\n        const delta = basis - tableWidth;\n        let x = tableLeft;\n        let j = 0;\n        for (let i = 0; i < colCount; i += 1) {\n          const col = newCols[i]!;\n          if (!col.hidden) {\n            if (j !== 0) {\n              x += spacing;\n            }\n            const colBasis = col.basis.pxValue(tableWidth);\n            const colWidth = colBasis - delta * (col.shrink / shrink);\n            newCols[i] = col.resized(colWidth, x, tableWidth - colWidth - x);\n            x += colWidth;\n            j += 1;\n          } else {\n            newCols[i] = col.resized(0, x + spacing, tableWidth - x - spacing);\n          }\n        }\n      }\n\n      return new TableLayout(width, left, right, colSpacing, newCols);\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TableLayout) {\n      const theseCols = this.cols;\n      const thoseCols = that.cols;\n      const n = theseCols.length;\n      if (n === thoseCols.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!theseCols[i]!.equivalentTo(thoseCols[i]!, epsilon)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TableLayout) {\n      return Equals(this.width, that.width) && Equals(this.left, that.left)\n          && Equals(this.right, that.right) && Equals(this.colSpacing, that.colSpacing)\n          && Arrays.equal(this.cols, that.cols);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"TableLayout\").write(46/*'.'*/).write(\"of\").write(40/*'('*/);\n    for (let i = 0; i < this.cols.length; i += 1) {\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.debug(this.cols[i]!);\n    }\n    output = output.write(41/*')'*/);\n    if (this.width !== null || this.left !== null || this.right !== null || this.colSpacing !== null) {\n      output = output.write(46/*'.'*/).write(\"resized\").write(40/*'('*/)\n                     .debug(this.width).write(\", \").debug(this.left).write(\", \")\n                     .debug(this.right).write(\", \").debug(this.colSpacing).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static of(...tableCols: ColLayoutLike[]): TableLayout {\n    const n = tableCols.length;\n    const cols = new Array<ColLayout>(n);\n    for (let i = 0; i < n; i += 1) {\n      cols[i] = ColLayout.fromLike(tableCols[i]!);\n    }\n    return new TableLayout(null, null, null, null, cols);\n  }\n\n  static create(cols: readonly ColLayout[]): TableLayout {\n    return new TableLayout(null, null, null, null, cols);\n  }\n\n  static fromLike(value: TableLayoutLike): TableLayout {\n    if (value === void 0 || value === null || value instanceof TableLayout) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return TableLayout.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: TableLayoutInit): TableLayout {\n    let width = init.width;\n    if (width !== void 0 && width !== null) {\n      width = Length.fromLike(width);\n    } else {\n      width = null;\n    }\n    let left = init.left;\n    if (left !== void 0 && left !== null) {\n      left = Length.fromLike(left);\n    } else {\n      left = null;\n    }\n    let right = init.right;\n    if (right !== void 0 && right !== null) {\n      right = Length.fromLike(right);\n    } else {\n      right = null;\n    }\n    let colSpacing = init.colSpacing;\n    if (colSpacing !== void 0 && colSpacing !== null) {\n      colSpacing = Length.fromLike(colSpacing);\n    } else {\n      colSpacing = null;\n    }\n    const colCount = init.cols.length;\n    const cols = new Array<ColLayout>(colCount);\n    for (let i = 0; i < colCount; i += 1) {\n      cols[i] = ColLayout.fromLike(init.cols[i]!);\n    }\n    return new TableLayout(width, left, right, colSpacing, cols);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {Hyperlink} from \"@swim/controller\";\n\n/** @public */\nexport interface CellViewObserver<V extends CellView = CellView> extends HtmlViewObserver<V> {\n  viewDidPress?(input: PositionGestureInput, event: Event | null, view: V): void;\n\n  viewDidLongPress?(input: PositionGestureInput, view: V): void;\n}\n\n/** @public */\nexport class CellView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initCell();\n  }\n\n  protected initCell(): void {\n    this.setIntrinsic<CellView>({\n      classList: [\"cell\"],\n      style: {\n        overflow: \"hidden\",\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<CellViewObserver>;\n\n  @Property({\n    valueType: Hyperlink,\n    value: null,\n    didSetValue(hyperlink: Hyperlink | null): void {\n      if (hyperlink !== null) {\n        this.owner.setIntrinsic<CellView>({\n          attributes: {\n            href: hyperlink.href,\n            title: hyperlink.title,\n          },\n          style: {\n            textDecorationLine: \"underline\",\n            cursor: \"pointer\",\n          },\n        });\n      } else {\n        this.owner.setIntrinsic<CellView>({\n          attributes: {\n            href: void 0,\n            title: void 0,\n          },\n          style: {\n            textDecorationLine: void 0,\n            cursor: void 0,\n          },\n        });\n      }\n    },\n  })\n  get hyperlink(): Property<this, Hyperlink | null> {\n    return Property.getter();\n  }\n\n  didPress(input: PositionGestureInput, event: Event | null): void {\n    this.callObservers(\"viewDidPress\", input, event, this);\n    const hyperlink = Property.tryValue(this, \"hyperlink\");\n    if (hyperlink !== null && !input.defaultPrevented) {\n      input.preventDefault();\n      hyperlink.activate(event);\n    }\n  }\n\n  didLongPress(input: PositionGestureInput): void {\n    this.callObservers(\"viewDidLongPress\", input, this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CellViewObserver} from \"./CellView\";\nimport {CellView} from \"./CellView\";\n\n/** @public */\nexport interface TextCellViewObserver<V extends TextCellView = TextCellView> extends CellViewObserver<V> {\n  viewWillAttachContent?(contentView: HtmlView, view: V): void;\n\n  viewDidDetachContent?(contentView: HtmlView, view: V): void;\n}\n\n/** @public */\nexport class TextCellView extends CellView {\n  protected override initCell(): void {\n    super.initCell();\n    this.classList.add(\"cell-text\");\n  }\n\n  declare readonly observerType?: Class<TextCellViewObserver>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    binds: true,\n    willAttachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachContent\", contentView, this.owner);\n    },\n    didDetachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachContent\", contentView, this.owner);\n    },\n    fromLike(value: HtmlView | LikeType<HtmlView> | string | undefined): HtmlView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        view.text.setState(value);\n        return view;\n      }\n      return super.fromLike(value);\n    },\n    createView(): HtmlView {\n      return HtmlView.fromTag(\"span\").style.setIntrinsic({\n        alignSelf: \"center\",\n        whiteSpace: \"nowrap\",\n        textOverflow: \"ellipsis\",\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n      });\n    },\n  })\n  readonly content!: ViewRef<this, Like<HtmlView, string | undefined>>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Color} from \"@swim/style\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {Graphics} from \"@swim/graphics\";\nimport {IconLayout} from \"@swim/graphics\";\nimport {Icon} from \"@swim/graphics\";\nimport type {IconView} from \"@swim/graphics\";\nimport {IconGraphicsAnimator} from \"@swim/graphics\";\nimport {SvgIconView} from \"@swim/graphics\";\nimport type {CellViewObserver} from \"./CellView\";\nimport {CellView} from \"./CellView\";\n\n/** @public */\nexport interface IconCellViewObserver<V extends IconCellView = IconCellView> extends CellViewObserver<V> {\n  viewDidSetGraphics?(graphics: Graphics | null, view: V): void;\n}\n\n/** @public */\nexport class IconCellView extends CellView implements IconView {\n  protected override initCell(): void {\n    super.initCell();\n    this.classList.add(\"cell-icon\");\n  }\n\n  declare readonly observerType?: Class<IconCellViewObserver>;\n\n  /** @override */\n  @Animator({valueType: IconLayout, value: null, updateFlags: View.NeedsLayout})\n  readonly iconLayout!: Animator<this, IconLayout | null>;\n\n  /** @override */\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetState(iconColor: Color | null): void {\n      const timing = this.timing !== null ? this.timing : false;\n      this.owner.graphics.setState(this.owner.graphics.state, timing, Affinity.Reflexive);\n    },\n  })\n  get iconColor(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  /** @override */\n  @ThemeAnimator({\n    extends: IconGraphicsAnimator,\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"viewDidSetGraphics\", newGraphics, this.owner);\n    },\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  @ViewRef({\n    viewType: SvgIconView,\n    viewKey: true,\n    binds: true,\n    init(): void {\n      this.insertView();\n    },\n    initView(svgView: SvgIconView): void {\n      svgView.style.position.set(\"absolute\");\n      svgView.iconLayout.setInherits(true);\n      svgView.iconColor.setInherits(true);\n      svgView.graphics.setInherits(true);\n    },\n  })\n  readonly svg!: ViewRef<this, SvgIconView>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.derived) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutIcon();\n  }\n\n  protected layoutIcon(): void {\n    const svgView = this.svg.view;\n    if (svgView === null || !svgView.attributes.width.hasAffinity(Affinity.Intrinsic)\n                         && !svgView.attributes.height.hasAffinity(Affinity.Intrinsic)\n                         && !svgView.attributes.viewBox.hasAffinity(Affinity.Intrinsic)) {\n      return;\n    }\n    const width = this.style.width.pxValue();\n    const height = this.style.height.pxValue();\n    svgView.attributes.setIntrinsic({\n      width, height,\n      viewBox: \"0 0 \" + width + \" \" + height,\n    });\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Expansion} from \"@swim/style\";\nimport {ExpansionAnimator} from \"@swim/style\";\nimport {ViewRef} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {DisclosureButton} from \"@swim/button\";\nimport type {CellViewObserver} from \"./CellView\";\nimport {CellView} from \"./CellView\";\n\n/** @public */\nexport interface DisclosureCellViewObserver<V extends DisclosureCellView = DisclosureCellView> extends CellViewObserver<V> {\n}\n\n/** @public */\nexport class DisclosureCellView extends CellView {\n  protected override initCell(): void {\n    super.initCell();\n    this.classList.add(\"cell-disclosure\");\n  }\n\n  declare readonly observerType?: Class<DisclosureCellViewObserver>;\n\n  @ExpansionAnimator({value: null, inherits: true})\n  readonly disclosure!: ExpansionAnimator<this, Expansion | null>;\n\n  @ViewRef({\n    viewType: DisclosureButton,\n    viewKey: true,\n    binds: true,\n    init(): void {\n      this.insertView();\n    },\n  })\n  readonly button!: ViewRef<this, DisclosureButton>;\n\n  override didPress(input: PositionGestureInput, event: Event | null): void {\n    input.preventDefault();\n    const superDisclosure = this.disclosure.inlet;\n    if (superDisclosure instanceof ExpansionAnimator) {\n      superDisclosure.toggle();\n    }\n    super.didPress(input, event);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {Hyperlink} from \"@swim/controller\";\nimport {CellController} from \"./\"; // forward import\n\n/** @public */\nexport interface CellTraitObserver<T extends CellTrait = CellTrait> extends TraitObserver<T> {\n}\n\n/** @public */\nexport class CellTrait extends Trait {\n  declare readonly observerType?: Class<CellTraitObserver>;\n\n  @Property({valueType: Hyperlink, value: null})\n  get hyperlink(): Property<this, Hyperlink | null> {\n    return Property.getter();\n  }\n\n  createCellController(): CellController {\n    return new CellController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {CellTraitObserver} from \"./CellTrait\";\nimport {CellTrait} from \"./CellTrait\";\nimport type {CellController} from \"./CellController\";\nimport {TextCellController} from \"./\"; // forward import\n\n/** @public */\nexport interface TextCellTraitObserver<T extends TextCellTrait = TextCellTrait> extends CellTraitObserver<T> {\n  traitDidSetContent?(content: string | undefined, trait: T): void;\n}\n\n/** @public */\nexport class TextCellTrait extends CellTrait {\n  declare readonly observerType?: Class<TextCellTraitObserver>;\n\n  @Property({\n    valueType: String,\n    didSetValue(content: string | undefined): void {\n      this.owner.callObservers(\"traitDidSetContent\", content, this.owner);\n    },\n  })\n  readonly content!: Property<this, string | undefined>;\n\n  override createCellController(): CellController {\n    return new TextCellController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Graphics} from \"@swim/graphics\";\nimport type {CellTraitObserver} from \"./CellTrait\";\nimport {CellTrait} from \"./CellTrait\";\nimport type {CellController} from \"./CellController\";\nimport {IconCellController} from \"./\"; // forward import\n\n/** @public */\nexport interface IconCellTraitObserver<T extends IconCellTrait = IconCellTrait> extends CellTraitObserver<T> {\n  traitDidSetIcon?(icon: Graphics | null, trait: T): void;\n}\n\n/** @public */\nexport class IconCellTrait extends CellTrait {\n  declare readonly observerType?: Class<IconCellTraitObserver>;\n\n  @Property({\n    valueType: Graphics,\n    value: null,\n    didSetValue(icon: Graphics | null): void {\n      this.owner.callObservers(\"traitDidSetIcon\", icon, this.owner);\n    },\n  })\n  readonly icon!: Property<this, Graphics | null>;\n\n  override createCellController(): CellController {\n    return new IconCellController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {Hyperlink} from \"@swim/controller\";\nimport {CellView} from \"./CellView\";\nimport {CellTrait} from \"./CellTrait\";\n\n/** @public */\nexport interface CellControllerObserver<C extends CellController = CellController> extends ControllerObserver<C> {\n  controllerWillAttachCellTrait?(cellTrait: CellTrait, controller: C): void;\n\n  controllerDidDetachCellTrait?(cellTrait: CellTrait, controller: C): void;\n\n  controllerWillAttachCellView?(cellView: CellView, controller: C): void;\n\n  controllerDidDetachCellView?(cellView: CellView, controller: C): void;\n\n  controllerDidPressCellView?(input: PositionGestureInput, event: Event | null, cellView: CellView, controller: C): void;\n\n  controllerDidLongPressCellView?(input: PositionGestureInput, cellView: CellView, controller: C): void;\n}\n\n/** @public */\nexport class CellController extends Controller {\n  declare readonly observerType?: Class<CellControllerObserver>;\n\n  @Property({valueType: Hyperlink, value: null})\n  get hyperlink(): Property<this, Hyperlink | null> {\n    return Property.getter();\n  }\n\n  @TraitViewRef({\n    traitType: CellTrait,\n    willAttachTrait(cellTrait: CellTrait): void {\n      this.owner.callObservers(\"controllerWillAttachCellTrait\", cellTrait, this.owner);\n    },\n    initTrait(cellTrait: CellTrait): void {\n      this.owner.hyperlink.bindInlet(cellTrait.hyperlink);\n    },\n    deinitTrait(cellTrait: CellTrait): void {\n      this.owner.hyperlink.unbindInlet(cellTrait.hyperlink);\n    },\n    didDetachTrait(cellTrait: CellTrait): void {\n      this.owner.callObservers(\"controllerDidDetachCellTrait\", cellTrait, this.owner);\n    },\n    viewType: CellView,\n    observesView: true,\n    initView(cellView: CellView): void {\n      cellView.hyperlink.bindInlet(this.owner.hyperlink);\n    },\n    willAttachView(cellView: CellView): void {\n      this.owner.callObservers(\"controllerWillAttachCellView\", cellView, this.owner);\n    },\n    deinitView(cellView: CellView): void {\n      cellView.hyperlink.unbindInlet(this.owner.hyperlink);\n    },\n    didDetachView(cellView: CellView): void {\n      this.owner.callObservers(\"controllerDidDetachCellView\", cellView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null, cellView: CellView): void {\n      this.owner.callObservers(\"controllerDidPressCellView\", input, event, cellView, this.owner);\n      const hyperlink = Property.tryValue(this.owner, \"hyperlink\");\n      if (hyperlink !== null && !input.defaultPrevented) {\n        input.preventDefault();\n        hyperlink.activate(event);\n      }\n    },\n    viewDidLongPress(input: PositionGestureInput, cellView: CellView): void {\n      this.owner.callObservers(\"controllerDidLongPressCellView\", input, cellView, this.owner);\n    },\n  })\n  readonly cell!: TraitViewRef<this, CellTrait, CellView> & Observes<CellView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport type {CellControllerObserver} from \"./CellController\";\nimport {CellController} from \"./CellController\";\nimport {TextCellView} from \"./TextCellView\";\nimport {TextCellTrait} from \"./TextCellTrait\";\n\n/** @public */\nexport interface TextCellControllerObserver<C extends TextCellController = TextCellController> extends CellControllerObserver<C> {\n  controllerWillAttachCellTrait?(cellTrait: TextCellTrait, controller: C): void;\n\n  controllerDidDetachCellTrait?(cellTrait: TextCellTrait, controller: C): void;\n\n  controllerWillAttachCellView?(cellView: TextCellView, controller: C): void;\n\n  controllerDidDetachCellView?(cellView: TextCellView, controller: C): void;\n\n  controllerWillAttachCellContentView?(cellContentView: HtmlView, controller: C): void;\n\n  controllerDidDetachCellContentView?(cellContentView: HtmlView, controller: C): void;\n}\n\n/** @public */\nexport class TextCellController extends CellController {\n  declare readonly observerType?: Class<TextCellControllerObserver>;\n\n  @TraitViewRef({\n    extends: true,\n    traitType: TextCellTrait,\n    observesTrait: true,\n    initTrait(cellTrait: TextCellTrait): void {\n      this.owner.setContentView(cellTrait.content.value);\n    },\n    deinitTrait(cellTrait: TextCellTrait): void {\n      this.owner.setContentView(void 0);\n    },\n    traitDidSetContent(content: string | undefined): void {\n      this.owner.setContentView(content);\n    },\n    viewType: TextCellView,\n    observesView: true,\n    initView(cellView: TextCellView): void {\n      this.owner.content.setView(cellView.content.view);\n      const cellTrait = this.trait;\n      if (cellTrait !== null) {\n        this.owner.setContentView(cellTrait.content.value);\n      }\n    },\n    deinitView(cellView: TextCellView): void {\n      this.owner.content.setView(null);\n    },\n    viewWillAttachContent(contentView: HtmlView): void {\n      this.owner.content.setView(contentView);\n    },\n    viewDidDetachContent(contentView: HtmlView): void {\n      this.owner.content.setView(null);\n    },\n  })\n  override readonly cell!: TraitViewRef<this, TextCellTrait, TextCellView> & CellController[\"cell\"] & Observes<TextCellTrait> & Observes<TextCellView>;\n\n  protected setContentView(content: string | undefined): void {\n    const cellView = this.cell.view;\n    if (cellView !== null) {\n      cellView.content.set(content);\n    }\n  }\n\n  @ViewRef({\n    viewType: HtmlView,\n    willAttachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"controllerWillAttachCellContentView\", contentView, this.owner);\n    },\n    didDetachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidDetachCellContentView\", contentView, this.owner);\n    },\n  })\n  readonly content!: ViewRef<this, HtmlView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport type {CellControllerObserver} from \"./CellController\";\nimport {CellController} from \"./CellController\";\nimport {IconCellView} from \"./IconCellView\";\nimport {IconCellTrait} from \"./IconCellTrait\";\n\n/** @public */\nexport interface IconCellControllerObserver<C extends IconCellController = IconCellController> extends CellControllerObserver<C> {\n  controllerWillAttachCellTrait?(cellTrait: IconCellTrait, controller: C): void;\n\n  controllerDidDetachCellTrait?(cellTrait: IconCellTrait, controller: C): void;\n\n  controllerWillAttachCellView?(cellView: IconCellView, controller: C): void;\n\n  controllerDidDetachCellView?(cellView: IconCellView, controller: C): void;\n\n  controllerDidSetCellIcon?(cellIcon: Graphics | null, controller: C): void;\n}\n\n/** @public */\nexport class IconCellController extends CellController {\n  declare readonly observerType?: Class<IconCellControllerObserver>;\n\n  protected setIcon(icon: Graphics | null): void {\n    const cellView = this.cell.view;\n    if (cellView !== null) {\n      cellView.graphics.set(icon);\n    }\n  }\n\n  @TraitViewRef({\n    extends: true,\n    traitType: IconCellTrait,\n    observesTrait: true,\n    initTrait(cellTrait: IconCellTrait): void {\n      this.owner.setIcon(cellTrait.icon.value);\n    },\n    deinitTrait(cellTrait: IconCellTrait): void {\n      this.owner.setIcon(null);\n    },\n    traitDidSetIcon(icon: Graphics | null): void {\n      this.owner.setIcon(icon);\n    },\n    viewType: IconCellView,\n    observesView: true,\n    initView(cellView: IconCellView): void {\n      const cellTrait = this.trait;\n      if (cellTrait !== null) {\n        this.owner.setIcon(cellTrait.icon.value);\n      }\n    },\n    viewDidSetGraphics(cellIcon: Graphics | null): void {\n      this.owner.callObservers(\"controllerDidSetCellIcon\", cellIcon, this.owner);\n    },\n  })\n  override readonly cell!: TraitViewRef<this, IconCellTrait, IconCellView> & CellController[\"cell\"] & Observes<IconCellTrait> & Observes<IconCellView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Focus} from \"@swim/style\";\nimport {FocusAnimator} from \"@swim/style\";\nimport type {Expansion} from \"@swim/style\";\nimport {ExpansionAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Feel} from \"@swim/theme\";\nimport {ThemeConstraintAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport {NodeView} from \"@swim/dom\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {Hyperlink} from \"@swim/controller\";\nimport {ButtonGlow} from \"@swim/button\";\nimport {TableLayout} from \"./TableLayout\";\nimport {CellView} from \"./CellView\";\n\n/** @public */\nexport interface LeafViewObserver<V extends LeafView = LeafView> extends HtmlViewObserver<V> {\n  viewWillAttachCell?(cellView: CellView, targetView: View | null, view: V): void;\n\n  viewDidDetachCell?(cellView: CellView, view: V): void;\n\n  viewWillHighlight?(view: V): void;\n\n  viewDidHighlight?(view: V): void;\n\n  viewWillUnhighlight?(view: V): void;\n\n  viewDidUnhighlight?(view: V): void;\n\n  viewDidEnter?(view: V): void;\n\n  viewDidLeave?(view: V): void;\n\n  viewDidPress?(input: PositionGestureInput, event: Event | null, view: V): void;\n\n  viewDidLongPress?(input: PositionGestureInput, view: V): void;\n}\n\n/** @public */\nexport class LeafView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initLeaf();\n  }\n\n  protected initLeaf(): void {\n    this.setIntrinsic<LeafView>({\n      classList: [\"leaf\"],\n      style: {\n        position: \"relative\",\n        overflow: \"hidden\",\n        backgroundColor: Look.backgroundColor,\n      },\n    });\n    this.modifyMood(Feel.default, [[Feel.transparent, 1], [Feel.hovering, 0]], false);\n  }\n\n  declare readonly observerType?: Class<LeafViewObserver>;\n\n  @Property({valueType: TableLayout, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly layout!: Property<this, TableLayout | null>;\n\n  @Property({valueType: Number, value: 0, inherits: true, updateFlags: View.NeedsLayout})\n  readonly depth!: Property<this, number>;\n\n  @ThemeConstraintAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly rowSpacing!: ThemeConstraintAnimator<this, Length | null>;\n\n  @ThemeConstraintAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly rowHeight!: ThemeConstraintAnimator<this, Length | null>;\n\n  @ExpansionAnimator({value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly stretch!: ExpansionAnimator<this, Expansion | null>;\n\n  @Property({valueType: Boolean, value: false, inherits: true})\n  readonly hovers!: Property<this, boolean>;\n\n  @FocusAnimator({\n    value: Focus.unfocused(),\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, null);\n    },\n    willFocus(): void {\n      this.owner.modifyMood(Feel.default, [[Feel.transparent, 0],\n                                           [Feel.hovering, 1]], false);\n    },\n    willUnfocus(): void {\n      this.owner.modifyMood(Feel.default, [[Feel.transparent, 1 - this.owner.hover.state.phase],\n                                           [Feel.hovering, 0]], false);\n    },\n  })\n  readonly hover!: FocusAnimator<this, Focus>;\n\n  @FocusAnimator({\n    value: Focus.unfocused(),\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, null);\n    },\n    willFocus(): void {\n      this.owner.callObservers(\"viewWillHighlight\", this.owner);\n      const timing = this.owner.getLook(Look.timing);\n      this.owner.modifyMood(Feel.default, [[Feel.transparent, 0]], timing);\n      this.owner.style.backgroundColor.setIntrinsic(Look.selectionColor, timing);\n    },\n    didFocus(): void {\n      this.owner.callObservers(\"viewDidHighlight\", this.owner);\n    },\n    willUnfocus(): void {\n      this.owner.callObservers(\"viewWillUnhighlight\", this.owner);\n      const timing = this.owner.getLook(Look.timing);\n      this.owner.modifyMood(Feel.default, [[Feel.transparent, 1 - this.owner.hover.state.phase]], timing);\n      this.owner.style.backgroundColor.setIntrinsic(Look.backgroundColor, timing);\n    },\n    didUnfocus(): void {\n      this.owner.callObservers(\"viewDidUnhighlight\", this.owner);\n    },\n  })\n  readonly highlight!: FocusAnimator<this, Focus>;\n\n  getCell<F extends Class<CellView>>(key: string, cellViewClass: F): InstanceType<F> | null;\n  getCell(key: string): CellView | null;\n  getCell(key: string, cellViewClass?: Class<CellView>): CellView | null {\n    if (cellViewClass === void 0) {\n      cellViewClass = CellView;\n    }\n    const cellView = this.getChild(key);\n    return cellView instanceof cellViewClass ? cellView : null;\n  }\n\n  getOrCreateCell<F extends Class<Instance<F, CellView>> & Creatable<Instance<F, CellView>>>(key: string, cellViewClass: F): InstanceType<F> {\n    let cellView = this.getChild(key, cellViewClass);\n    if (cellView === null) {\n      cellView = cellViewClass.create();\n      this.setChild(key, cellView);\n    }\n    return cellView!;\n  }\n\n  setCell(key: string, cellView: CellView | null): void {\n    this.setChild(key, cellView);\n  }\n\n  @ViewSet({\n    viewType: CellView,\n    binds: true,\n    initView(cellView: CellView): void {\n      cellView.style.setIntrinsic({\n        display: \"none\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: 0,\n        height: this.owner.style.height.state,\n      });\n    },\n    willAttachView(cellView: CellView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachCell\", cellView, target, this.owner);\n    },\n    didDetachView(cellView: CellView): void {\n      this.owner.callObservers(\"viewDidDetachCell\", cellView, this.owner);\n    },\n  })\n  readonly cells!: ViewSet<this, CellView>;\n\n  protected override onLayout(): void {\n    this.rowHeight.recohere(this.updateTime);\n    super.onLayout();\n    this.layoutLeaf();\n  }\n\n  protected layoutLeaf(): void {\n    const rowHeight = this.rowHeight.value;\n    if (rowHeight !== null) {\n      this.style.height.setIntrinsic(rowHeight);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    if ((displayFlags & View.NeedsLayout) !== 0) {\n      this.layoutChildren(displayFlags, displayChild);\n    } else {\n      super.displayChildren(displayFlags, displayChild);\n    }\n  }\n\n  protected layoutChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    const layout = this.layout.value;\n    const height = this.style.height.state;\n    const stretch = this.stretch.getPhaseOr(1);\n    type self = this;\n    function layoutChild(this: self, child: View, displayFlags: ViewFlags): void {\n      if (child instanceof CellView) {\n        const key = child.key;\n        const col = layout !== null && key !== void 0 ? layout.getCol(key) : null;\n        if (col !== null) {\n          child.style.setIntrinsic({\n            display: !col.hidden && col.width !== null ? \"flex\" : \"none\",\n            left: col.left,\n            width: col.width,\n            height,\n            color: col.textColor,\n            opacity: col.persistent ? void 0 : stretch,\n          });\n        } else {\n          child.style.setIntrinsic({\n            display: \"none\",\n            left: null,\n            width: null,\n            height: null,\n            color: null,\n            opacity: void 0,\n          });\n        }\n      }\n      displayChild.call(this, child, displayFlags);\n    }\n    super.displayChildren(displayFlags, layoutChild);\n  }\n\n  @Property({valueType: Boolean, value: true, inherits: true})\n  readonly glows!: Property<this, boolean>;\n\n  protected glow(input: PositionGestureInput): void {\n    if (input.detail instanceof ButtonGlow) {\n      input.detail.fade(input.x, input.y);\n      input.detail = void 0;\n    }\n    if (input.detail === void 0) {\n      const delay = input.inputType === \"mouse\" ? 0 : 100;\n      input.detail = this.prependChild(ButtonGlow);\n      (input.detail as ButtonGlow).glow(input.x, input.y, void 0, delay);\n    }\n  }\n\n  @Property({\n    valueType: Hyperlink,\n    value: null,\n    didSetValue(hyperlink: Hyperlink | null): void {\n      if (hyperlink !== null) {\n        this.owner.setIntrinsic<LeafView>({\n          attributes: {\n            href: hyperlink.href,\n            title: hyperlink.title,\n          },\n          style: {\n            cursor: \"pointer\",\n          },\n        });\n      } else {\n        this.owner.setIntrinsic<LeafView>({\n          attributes: {\n            href: void 0,\n            title: void 0,\n          },\n          style: {\n            cursor: void 0,\n          },\n        });\n      }\n    },\n  })\n  get hyperlink(): Property<this, Hyperlink | null> {\n    return Property.getter();\n  }\n\n  @PositionGesture({\n    bindsOwner: true,\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (this.owner.glows.value) {\n        this.owner.glow(input);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      } else if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        input.clearHoldTimer();\n        this.beginHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      } else if (input.detail instanceof ButtonGlow) {\n        input.detail.pulse(input.x, input.y);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n      if (input.detail instanceof ButtonGlow) {\n        input.detail.fade(input.x, input.y);\n        input.detail = void 0;\n      }\n    },\n    didStartHovering(): void {\n      if (this.owner.hovers.value) {\n        this.owner.hover.focus(false);\n      }\n      this.owner.callObservers(\"viewDidEnter\", this.owner);\n    },\n    didStopHovering(): void {\n      if (this.owner.hovers.value) {\n        this.owner.hover.unfocus();\n      }\n      this.owner.callObservers(\"viewDidLeave\", this.owner);\n    },\n    didPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.defaultPrevented || !this.owner.clientBounds.contains(input.x, input.y)) {\n        return;\n      }\n      let target = input.target;\n      while (target instanceof Node && target !== this.owner.node) {\n        const targetView = NodeView.get(target);\n        if (targetView instanceof CellView) {\n          targetView.didPress(input, event);\n          break;\n        }\n        target = target.parentNode;\n      }\n      this.owner.didPress(input, event);\n    },\n    didLongPress(input: PositionGestureInput): void {\n      if (input.defaultPrevented) {\n        return;\n      }\n      let target = input.target;\n      while (target instanceof Node && target !== this.owner.node) {\n        const targetView = NodeView.get(target);\n        if (targetView instanceof CellView) {\n          targetView.didLongPress(input);\n          break;\n        }\n        target = target.parentNode;\n      }\n      this.owner.didLongPress(input);\n    },\n  })\n  readonly gesture!: PositionGesture<this, LeafView>;\n\n  didPress(input: PositionGestureInput, event: Event | null): void {\n    if (input.defaultPrevented) {\n      return;\n    }\n    this.callObservers(\"viewDidPress\", input, event, this);\n    const hyperlink = Property.tryValue(this, \"hyperlink\");\n    if (hyperlink !== null && !input.defaultPrevented) {\n      input.preventDefault();\n      hyperlink.activate(event);\n    }\n  }\n\n  didLongPress(input: PositionGestureInput): void {\n    if (input.defaultPrevented) {\n      return;\n    }\n    this.callObservers(\"viewDidLongPress\", input, this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitSet} from \"@swim/model\";\nimport {Hyperlink} from \"@swim/controller\";\nimport {CellTrait} from \"./CellTrait\";\n\n/** @public */\nexport interface LeafTraitObserver<T extends LeafTrait = LeafTrait> extends TraitObserver<T> {\n  traitWillAttachCell?(cellTrait: CellTrait, targetTrait: Trait | null, trait: T): void;\n\n  traitDidDetachCell?(cellTrait: CellTrait, trait: T): void;\n}\n\n/** @public */\nexport class LeafTrait extends Trait {\n  declare readonly observerType?: Class<LeafTraitObserver>;\n\n  @Property({valueType: Hyperlink, value: null})\n  get hyperlink(): Property<this, Hyperlink | null> {\n    return Property.getter();\n  }\n\n  getCell<F extends Class<CellTrait>>(key: string, cellTraitClass: F): InstanceType<F> | null;\n  getCell(key: string): CellTrait | null;\n  getCell(key: string, cellTraitClass?: Class<CellTrait>): CellTrait | null {\n    if (cellTraitClass === void 0) {\n      cellTraitClass = CellTrait;\n    }\n    const cellTrait = this.getTrait(key);\n    return cellTrait instanceof cellTraitClass ? cellTrait : null;\n  }\n\n  getOrCreateCell<F extends Class<Instance<F, CellTrait>> & Creatable<Instance<F, CellTrait>>>(key: string, cellTraitClass: F): InstanceType<F> {\n    let cellTrait = this.getTrait(key, cellTraitClass);\n    if (cellTrait === null) {\n      cellTrait = cellTraitClass.create();\n      this.setTrait(key, cellTrait);\n    }\n    return cellTrait!;\n  }\n\n  setCell(key: string, cellTrait: CellTrait | null): void {\n    this.setTrait(key, cellTrait);\n  }\n\n  @TraitSet({\n    traitType: CellTrait,\n    binds: true,\n    willAttachTrait(cellTrait: CellTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachCell\", cellTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(cellTrait: CellTrait, targetTrait: Trait | null): void {\n      if (this.owner.consuming) {\n        cellTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(cellTrait: CellTrait): void {\n      if (this.owner.consuming) {\n        cellTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(cellTrait: CellTrait): void {\n      this.owner.callObservers(\"traitDidDetachCell\", cellTrait, this.owner);\n    },\n    detectModel(model: Model): CellTrait | null {\n      return model.getTrait(CellTrait);\n    },\n  })\n  readonly cells!: TraitSet<this, CellTrait>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.cells.consumeTraits(this);\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.cells.unconsumeTraits(this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {Graphics} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport {Hyperlink} from \"@swim/controller\";\nimport type {CellView} from \"./CellView\";\nimport {TextCellView} from \"./TextCellView\";\nimport type {CellTrait} from \"./CellTrait\";\nimport {CellController} from \"./CellController\";\nimport type {TextCellController} from \"./TextCellController\";\nimport type {IconCellController} from \"./IconCellController\";\nimport {LeafView} from \"./LeafView\";\nimport {LeafTrait} from \"./LeafTrait\";\n\n/** @public */\nexport interface LeafControllerObserver<C extends LeafController = LeafController> extends ControllerObserver<C> {\n  controllerWillAttachLeafTrait?(leafTrait: LeafTrait, controller: C): void;\n\n  controllerDidDetachLeafTrait?(leafTrait: LeafTrait, controller: C): void;\n\n  controllerWillAttachLeafView?(leafView: LeafView, controller: C): void;\n\n  controllerDidDetachLeafView?(leafView: LeafView, controller: C): void;\n\n  controllerWillHighlightLeafView?(leafView: LeafView, controller: C): void;\n\n  controllerDidHighlightLeafView?(leafView: LeafView, controller: C): void;\n\n  controllerWillUnhighlightLeafView?(leafView: LeafView, controller: C): void;\n\n  controllerDidUnhighlightLeafView?(leafView: LeafView, controller: C): void;\n\n  controllerDidEnterLeafView?(leafView: LeafView, controller: C): void;\n\n  controllerDidLeaveLeafView?(leafView: LeafView, controller: C): void;\n\n  controllerDidPressLeafView?(input: PositionGestureInput, event: Event | null, leafView: LeafView, controller: C): void;\n\n  controllerDidLongPressLeafView?(input: PositionGestureInput, leafView: LeafView, controller: C): void;\n\n  controllerWillAttachCell?(cellController: CellController, controller: C): void;\n\n  controllerDidDetachCell?(cellController: CellController, controller: C): void;\n\n  controllerWillAttachCellTrait?(cellTrait: CellTrait, cellController: CellController, controller: C): void;\n\n  controllerDidDetachCellTrait?(cellTrait: CellTrait, cellController: CellController, controller: C): void;\n\n  controllerWillAttachCellView?(cellView: CellView, cellController: CellController, controller: C): void;\n\n  controllerDidDetachCellView?(cellView: CellView, cellController: CellController, controller: C): void;\n\n  controllerDidPressCellView?(input: PositionGestureInput, event: Event | null, cellView: CellView, cellController: CellController, controller: C): void;\n\n  controllerDidLongPressCellView?(input: PositionGestureInput, cellView: CellView, cellController: CellController, controller: C): void;\n\n  controllerWillAttachCellContentView?(cellContentView: HtmlView, cellController: CellController, controller: C): void;\n\n  controllerDidDetachCellContentView?(cellContentView: HtmlView, cellController: CellController, controller: C): void;\n\n  controllerDidSetCellIcon?(cellIcon: Graphics | null, cellController: CellController, controller: C): void;\n}\n\n/** @public */\nexport class LeafController extends Controller {\n  declare readonly observerType?: Class<LeafControllerObserver>;\n\n  @Property({valueType: Hyperlink, value: null})\n  get hyperlink(): Property<this, Hyperlink | null> {\n    return Property.getter();\n  }\n\n  @TraitViewRef({\n    traitType: LeafTrait,\n    observesTrait: true,\n    willAttachTrait(leafTrait: LeafTrait): void {\n      this.owner.callObservers(\"controllerWillAttachLeafTrait\", leafTrait, this.owner);\n    },\n    didAttachTrait(leafTrait: LeafTrait): void {\n      this.owner.cells.addTraits(leafTrait.cells.traits);\n    },\n    initTrait(leafTrait: LeafTrait): void {\n      this.owner.hyperlink.bindInlet(leafTrait.hyperlink);\n    },\n    deinitTrait(leafTrait: LeafTrait): void {\n      this.owner.hyperlink.unbindInlet(leafTrait.hyperlink);\n    },\n    willDetachTrait(leafTrait: LeafTrait): void {\n      this.owner.cells.deleteTraits(leafTrait.cells.traits);\n    },\n    didDetachTrait(leafTrait: LeafTrait): void {\n      this.owner.callObservers(\"controllerDidDetachLeafTrait\", leafTrait, this.owner);\n    },\n    traitWillAttachCell(cellTrait: CellTrait, targetTrait: Trait | null): void {\n      this.owner.cells.addTrait(cellTrait, targetTrait);\n    },\n    traitDidDetachCell(cellTrait: CellTrait): void {\n      this.owner.cells.deleteTrait(cellTrait);\n    },\n    viewType: LeafView,\n    observesView: true,\n    initView(leafView: LeafView): void {\n      const cellControllers = this.owner.cells.controllers;\n      for (const controllerId in cellControllers) {\n        const cellController = cellControllers[controllerId]!;\n        const cellView = cellController.cell.view;\n        if (cellView !== null && cellView.parent === null) {\n          const cellTrait = cellController.cell.trait;\n          if (cellTrait !== null) {\n            cellController.cell.insertView(leafView, void 0, void 0, cellTrait.key);\n          }\n        }\n      }\n    },\n    willAttachView(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerWillAttachLeafView\", leafView, this.owner);\n      leafView.hyperlink.bindInlet(this.owner.hyperlink);\n    },\n    didDetachView(leafView: LeafView): void {\n      leafView.hyperlink.unbindInlet(this.owner.hyperlink);\n      this.owner.callObservers(\"controllerDidDetachLeafView\", leafView, this.owner);\n    },\n    viewWillHighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerWillHighlightLeafView\", leafView, this.owner);\n    },\n    viewDidHighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidHighlightLeafView\", leafView, this.owner);\n    },\n    viewWillUnhighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerWillUnhighlightLeafView\", leafView, this.owner);\n    },\n    viewDidUnhighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidUnhighlightLeafView\", leafView, this.owner);\n    },\n    viewDidEnter(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidEnterLeafView\", leafView, this.owner);\n    },\n    viewDidLeave(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidLeaveLeafView\", leafView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null, leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidPressLeafView\", input, event, leafView, this.owner);\n    },\n    viewDidLongPress(input: PositionGestureInput, leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidLongPressLeafView\", input, leafView, this.owner);\n    },\n  })\n  readonly leaf!: TraitViewRef<this, LeafTrait, LeafView> & Observes<LeafTrait> & Observes<LeafView>;\n\n  getCell<F extends Class<CellController>>(key: string, cellControllerClass: F): InstanceType<F> | null;\n  getCell(key: string): CellController | null;\n  getCell(key: string, cellControllerClass?: Class<CellController>): CellController | null {\n    if (cellControllerClass === void 0) {\n      cellControllerClass = CellController;\n    }\n    const cellController = this.getChild(key);\n    return cellController instanceof cellControllerClass ? cellController : null;\n  }\n\n  getOrCreateCell<F extends Class<Instance<F, CellController>> & Creatable<Instance<F, CellController>>>(key: string, cellControllerClass: F): InstanceType<F> {\n    let cellController = this.getChild(key, cellControllerClass);\n    if (cellController === null) {\n      cellController = cellControllerClass.create();\n      this.setChild(key, cellController);\n    }\n    return cellController!;\n  }\n\n  setCell(key: string, cellController: CellController | null): void {\n    this.setChild(key, cellController);\n  }\n\n  getCellTrait<F extends Class<CellTrait>>(key: string, cellTraitClass: F): InstanceType<F> | null;\n  getCellTrait(key: string): CellTrait | null;\n  getCellTrait(key: string, cellTraitClass?: Class<CellTrait>): CellTrait | null {\n    const leafTrait = this.leaf.trait;\n    return leafTrait !== null ? leafTrait.getCell(key, cellTraitClass!) : null;\n  }\n\n  getOrCreateCellTrait<F extends Class<Instance<F, CellTrait>> & Creatable<Instance<F, CellTrait>>>(key: string, cellTraitClass: F): InstanceType<F> {\n    const leafTrait = this.leaf.trait;\n    if (leafTrait === null) {\n      throw new Error(\"no leaf trait\");\n    }\n    return leafTrait.getOrCreateCell(key, cellTraitClass);\n  }\n\n  setCellTrait(key: string, cellTrait: CellTrait | null): void {\n    const leafTrait = this.leaf.trait;\n    if (leafTrait === null) {\n      throw new Error(\"no leaf trait\");\n    }\n    leafTrait.setCell(key, cellTrait);\n  }\n\n  getCellView<F extends Class<CellView>>(key: string, cellViewClass: F): InstanceType<F> | null;\n  getCellView(key: string): CellView | null;\n  getCellView(key: string, cellViewClass?: Class<CellView>): CellView | null {\n    const leafView = this.leaf.view;\n    return leafView !== null ? leafView.getCell(key, cellViewClass!) : null;\n  }\n\n  getOrCreateCellView<F extends Class<Instance<F, CellView>> & Creatable<Instance<F, CellView>>>(key: string, cellViewClass: F): InstanceType<F> {\n    let leafView = this.leaf.view;\n    if (leafView === null) {\n      leafView = this.leaf.createView();\n      if (leafView === null) {\n        throw new Error(\"no leaf view\");\n      }\n      this.leaf.setView(leafView);\n    }\n    return leafView.getOrCreateCell(key, cellViewClass);\n  }\n\n  setCellView(key: string, cellView: CellView | null): void {\n    let leafView = this.leaf.view;\n    if (leafView === null) {\n      leafView = this.leaf.createView();\n      if (leafView === null) {\n        throw new Error(\"no leaf view\");\n      }\n      this.leaf.setView(leafView);\n    }\n    leafView.setCell(key, cellView);\n  }\n\n  @TraitViewControllerSet({\n    controllerType: CellController,\n    binds: true,\n    observes: true,\n    get parentView(): LeafView | null {\n      return this.owner.leaf.view;\n    },\n    getTraitViewRef(cellController: CellController): TraitViewRef<unknown, CellTrait, CellView> {\n      return cellController.cell;\n    },\n    willAttachController(cellController: CellController): void {\n      this.owner.callObservers(\"controllerWillAttachCell\", cellController, this.owner);\n    },\n    didAttachController(cellController: CellController): void {\n      const cellTrait = cellController.cell.trait;\n      if (cellTrait !== null) {\n        this.attachCellTrait(cellTrait, cellController);\n      }\n      const cellView = cellController.cell.view;\n      if (cellView !== null) {\n        this.attachCellView(cellView, cellController);\n      }\n    },\n    willDetachController(cellController: CellController): void {\n      const cellView = cellController.cell.view;\n      if (cellView !== null) {\n        this.detachCellView(cellView, cellController);\n      }\n      const cellTrait = cellController.cell.trait;\n      if (cellTrait !== null) {\n        this.detachCellTrait(cellTrait, cellController);\n      }\n    },\n    didDetachController(cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidDetachCell\", cellController, this.owner);\n    },\n    controllerWillAttachCellTrait(cellTrait: CellTrait, cellController: CellController): void {\n      this.owner.callObservers(\"controllerWillAttachCellTrait\", cellTrait, cellController, this.owner);\n      this.attachCellTrait(cellTrait, cellController);\n    },\n    controllerDidDetachCellTrait(cellTrait: CellTrait, cellController: CellController): void {\n      this.detachCellTrait(cellTrait, cellController);\n      this.owner.callObservers(\"controllerDidDetachCellTrait\", cellTrait, cellController, this.owner);\n    },\n    attachCellTrait(cellTrait: CellTrait, cellController: CellController): void {\n      // hook\n    },\n    detachCellTrait(cellTrait: CellTrait, cellController: CellController): void {\n      // hook\n    },\n    controllerWillAttachCellView(cellView: CellView, cellController: CellController): void {\n      this.owner.callObservers(\"controllerWillAttachCellView\", cellView, cellController, this.owner);\n      this.attachCellView(cellView, cellController);\n    },\n    controllerDidDetachCellView(cellView: CellView, cellController: CellController): void {\n      this.detachCellView(cellView, cellController);\n      this.owner.callObservers(\"controllerDidDetachCellView\", cellView, cellController, this.owner);\n    },\n    attachCellView(cellView: CellView, cellController: CellController): void {\n      if (cellView instanceof TextCellView) {\n        const cellContentView = cellView.content.view;\n        if (cellContentView !== null) {\n          this.attachCellContentView(cellContentView, cellController);\n        }\n      }\n    },\n    detachCellView(cellView: CellView, cellController: CellController): void {\n      if (cellView instanceof TextCellView) {\n        const cellContentView = cellView.content.view;\n        if (cellContentView !== null) {\n          this.detachCellContentView(cellContentView, cellController);\n        }\n      }\n      cellView.remove();\n    },\n    controllerDidPressCellView(input: PositionGestureInput, event: Event | null, cellView: CellView, cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidPressCellView\", input, event, cellView, cellController, this.owner);\n    },\n    controllerDidLongPressCellView(input: PositionGestureInput, cellView: CellView, cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidLongPressCellView\", input, cellView, cellController, this.owner);\n    },\n    controllerWillAttachCellContentView(contentView: HtmlView, cellController: CellController): void {\n      this.attachCellContentView(contentView, cellController);\n      this.owner.callObservers(\"controllerWillAttachCellContentView\", contentView, cellController, this.owner);\n    },\n    controllerDidDetachCellContentView(contentView: HtmlView, cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidDetachCellContentView\", contentView, cellController, this.owner);\n      this.detachCellContentView(contentView, cellController);\n    },\n    attachCellContentView(cellContentView: HtmlView, cellController: CellController): void {\n      // hook\n    },\n    detachCellContentView(cellContentView: HtmlView, cellController: CellController): void {\n      // hook\n    },\n    controllerDidSetCellIcon(cellIcon: Graphics | null, cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidSetCellIcon\", cellIcon, cellController, this.owner);\n    },\n    createController(cellTrait?: CellTrait): CellController {\n      if (cellTrait !== void 0) {\n        return cellTrait.createCellController();\n      } else {\n        return super.createController();\n      }\n    },\n  })\n  readonly cells!: TraitViewControllerSet<this, CellTrait, CellView, CellController> & Observes<CellController> & Observes<TextCellController> & Observes<IconCellController> & {\n    attachCellTrait(cellTrait: CellTrait, cellController: CellController): void;\n    detachCellTrait(cellTrait: CellTrait, cellController: CellController): void;\n    attachCellView(cellView: CellView, cellController: CellController): void;\n    detachCellView(cellView: CellView, cellController: CellController): void;\n    attachCellContentView(cellContentView: HtmlView, cellController: CellController): void;\n    detachCellContentView(cellContentView: HtmlView, cellController: CellController): void;\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {Expansion} from \"@swim/style\";\nimport {ExpansionAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeConstraintAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {TableLayout} from \"./TableLayout\";\nimport type {CellView} from \"./CellView\";\nimport {LeafView} from \"./LeafView\";\nimport {TableView} from \"./\"; // forward reference\n\n/** @public */\nexport interface RowViewObserver<V extends RowView = RowView> extends HtmlViewObserver<V> {\n  viewWillAttachLeaf?(leafView: LeafView, view: V): void;\n\n  viewDidDetachLeaf?(leafView: LeafView, view: V): void;\n\n  viewWillHighlightLeaf?(leafView: LeafView, view: V): void;\n\n  viewDidHighlightLeaf?(leafView: LeafView, view: V): void;\n\n  viewWillUnhighlightLeaf?(leafView: LeafView, view: V): void;\n\n  viewDidUnhighlightLeaf?(leafView: LeafView, view: V): void;\n\n  viewDidEnterLeaf?(leafView: LeafView, view: V): void;\n\n  viewDidLeaveLeaf?(leafView: LeafView, view: V): void;\n\n  viewDidPressLeaf?(input: PositionGestureInput, event: Event | null, leafView: LeafView, view: V): void;\n\n  viewDidLongPressLeaf?(input: PositionGestureInput, leafView: LeafView, view: V): void;\n\n  viewWillAttachTree?(treeView: TableView, view: V): void;\n\n  viewDidDetachTree?(treeView: TableView, view: V): void;\n\n  viewWillExpand?(view: V): void;\n\n  viewDidExpand?(view: V): void;\n\n  viewWillCollapse?(view: V): void;\n\n  viewDidCollapse?(view: V): void;\n}\n\n/** @public */\nexport class RowView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initRow();\n  }\n\n  protected initRow(): void {\n    this.setIntrinsic<RowView>({\n      classList: [\"row\"],\n      style: {\n        position: \"relative\",\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<RowViewObserver>;\n\n  @Property({valueType: TableLayout, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly layout!: Property<this, TableLayout | null>;\n\n  @Property({\n    valueType: Number,\n    value: 0,\n    inherits: true,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newDepth: number, oldDepth: number): void {\n      const treeView = this.owner.tree.view;\n      if (treeView !== null) {\n        treeView.depth.setIntrinsic(newDepth + 1);\n      }\n    },\n  })\n  readonly depth!: Property<this, number>;\n\n  @ThemeConstraintAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly rowSpacing!: ThemeConstraintAnimator<this, Length | null>;\n\n  @ThemeConstraintAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly rowHeight!: ThemeConstraintAnimator<this, Length | null>;\n\n  @Property({valueType: Boolean, value: false, inherits: true})\n  readonly hovers!: Property<this, boolean>;\n\n  @Property({valueType: Boolean, value: true, inherits: true})\n  readonly glows!: Property<this, boolean>;\n\n  getCell<F extends Class<CellView>>(key: string, cellViewClass: F): InstanceType<F> | null;\n  getCell(key: string): CellView | null;\n  getCell(key: string, cellViewClass?: Class<CellView>): CellView | null {\n    const leafView = this.leaf.view;\n    return leafView !== null ? leafView.getCell(key, cellViewClass!) : null;\n  }\n\n  getOrCreateCell<F extends Class<Instance<F, CellView>> & Creatable<Instance<F, CellView>>>(key: string, cellViewClass: F): InstanceType<F> {\n    const leafView = this.leaf.insertView();\n    if (leafView === null) {\n      throw new Error(\"no leaf view\");\n    }\n    return leafView.getOrCreateCell(key, cellViewClass);\n  }\n\n  setCell(key: string, cellView: CellView | null): void {\n    const leafView = this.leaf.insertView();\n    if (leafView === null) {\n      throw new Error(\"no leaf view\");\n    }\n    leafView.setCell(key, cellView);\n  }\n\n  @ViewRef({\n    viewType: LeafView,\n    viewKey: true,\n    binds: true,\n    observes: true,\n    initView(leafView: LeafView): void {\n      const layout = this.owner.layout.value;\n      leafView.style.setIntrinsic({\n        display: \"none\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: layout !== null ? layout.width : null,\n        zIndex: 1,\n      });\n    },\n    willAttachView(leafView: LeafView): void {\n      this.owner.callObservers(\"viewWillAttachLeaf\", leafView, this.owner);\n    },\n    didDetachView(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidDetachLeaf\", leafView, this.owner);\n    },\n    viewWillHighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"viewWillHighlightLeaf\", leafView, this.owner);\n    },\n    viewDidHighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidHighlightLeaf\", leafView, this.owner);\n    },\n    viewWillUnhighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"viewWillUnhighlightLeaf\", leafView, this.owner);\n    },\n    viewDidUnhighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidUnhighlightLeaf\", leafView, this.owner);\n    },\n    viewDidEnter(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidEnterLeaf\", leafView, this.owner);\n    },\n    viewDidLeave(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidLeaveLeaf\", leafView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null, leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidPressLeaf\", input, event, leafView, this.owner);\n    },\n    viewDidLongPress(input: PositionGestureInput, leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidLongPressLeaf\", input, leafView, this.owner);\n    },\n  })\n  readonly leaf!: ViewRef<this, LeafView> & Observes<LeafView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    binds: true,\n    initView(headView: HtmlView): void {\n      const layout = this.owner.layout.value;\n      headView.setIntrinsic({\n        classList: [\"head\"],\n        style: {\n          display: \"none\",\n          position: \"absolute\",\n          left: 0,\n          top: this.owner.rowHeight.state,\n          width: layout !== null ? layout.width : null,\n          height: this.owner.rowSpacing.state,\n          backgroundColor: Look.accentColor,\n          opacity: this.owner.disclosing.getPhaseOr(1) * this.owner.expanding.getPhaseOr(1),\n          zIndex: 1,\n        },\n      });\n    },\n  })\n  readonly head!: ViewRef<this, HtmlView>;\n\n  @ViewRef({\n    get viewType(): typeof TableView {\n      return TableView;\n    },\n    viewKey: true,\n    binds: true,\n    initView(treeView: TableView): void {\n      const layout = this.owner.layout.value;\n      treeView.setIntrinsic({\n        classList: [\"tree\"],\n        style: {\n          display: this.owner.disclosure.collapsed ? \"none\" : \"block\",\n          position: \"absolute\",\n          left: 0,\n          width: layout !== null ? layout.width : null,\n          zIndex: 0,\n        },\n      });\n      treeView.depth.setIntrinsic(this.owner.depth.value + 1);\n    },\n    willAttachView(treeView: TableView): void {\n      this.owner.callObservers(\"viewWillAttachTree\", treeView, this.owner);\n    },\n    didDetachView(treeView: TableView): void {\n      this.owner.callObservers(\"viewDidDetachTree\", treeView, this.owner);\n    },\n  })\n  readonly tree!: ViewRef<this, TableView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    binds: true,\n    initView(footView: HtmlView): void {\n      const layout = this.owner.layout.value;\n      footView.setIntrinsic({\n        classList: [\"foot\"],\n        style: {\n          display: \"none\",\n          position: \"absolute\",\n          left: 0,\n          top: this.owner.rowHeight.state,\n          width: layout !== null ? layout.width : null,\n          height: this.owner.rowSpacing.state,\n          backgroundColor: Look.borderColor,\n          opacity: this.owner.disclosing.getPhaseOr(1) * this.owner.expanding.getPhaseOr(1),\n          zIndex: 1,\n        },\n      });\n    },\n  })\n  readonly foot!: ViewRef<this, HtmlView>;\n\n  @ExpansionAnimator({value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly expansion!: ExpansionAnimator<this, Expansion | null>;\n\n  @ExpansionAnimator({value: Expansion.expanded(), inherits: true, updateFlags: View.NeedsLayout})\n  readonly expanding!: ExpansionAnimator<this, Expansion | null>;\n\n  @ExpansionAnimator({\n    value: Expansion.collapsed(),\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, null);\n    },\n    willExpand(): void {\n      this.owner.callObservers(\"viewWillExpand\", this.owner);\n      const treeView = this.owner.tree.view;\n      if (treeView !== null) {\n        treeView.style.display.setIntrinsic(\"block\");\n      }\n    },\n    didExpand(): void {\n      this.owner.callObservers(\"viewDidExpand\", this.owner);\n    },\n    willCollapse(): void {\n      this.owner.callObservers(\"viewWillCollapse\", this.owner);\n    },\n    didCollapse(): void {\n      const treeView = this.owner.tree.view;\n      if (treeView !== null) {\n        treeView.style.display.setIntrinsic(\"none\");\n      }\n      this.owner.callObservers(\"viewDidCollapse\", this.owner);\n    },\n    didSetValue(newDisclosure: Expansion, oldDisclosure: Expansion): void {\n      if (newDisclosure.direction !== 0) {\n        this.owner.disclosing.setIntrinsic(newDisclosure);\n      } else {\n        this.owner.disclosing.setAffinity(Affinity.Transient);\n      }\n      const tableView = this.owner.getRoot(TableView);\n      if (tableView !== null) {\n        tableView.requireUpdate(View.NeedsLayout);\n      }\n    },\n  })\n  readonly disclosure!: ExpansionAnimator<this, Expansion>;\n\n  @ExpansionAnimator({value: Expansion.collapsed(), inherits: true, updateFlags: View.NeedsLayout})\n  readonly disclosing!: ExpansionAnimator<this, Expansion | null>;\n\n  @Property({\n    valueType: R2Box,\n    value: null,\n    inherits: true,\n    init(): void {\n      this.outletValue = null;\n    },\n    getOutletValue(outlet: Property<unknown, R2Box | null>): R2Box | null {\n      return this.outletValue;\n    },\n    setOutletValue(newOutletValue: R2Box | null): void {\n      const oldOutletValue = this.outletValue;\n      if (!this.equalValues(newOutletValue, oldOutletValue)) {\n        this.outletValue = newOutletValue;\n        this.decohereOutlets();\n      }\n    },\n  })\n  readonly visibleFrame!: Property<this, R2Box | null> & {\n    /** @internal */\n    outletValue: R2Box | null,\n    /** @internal */\n    setOutletValue(newOutletValue: R2Box | null): void,\n  };\n\n  protected detectVisibleFrame(): R2Box {\n    const xBleed = 0;\n    const yBleed = this.rowHeight.getValueOr(Length.zero()).pxValue();\n    const parentVisibleFrame = this.visibleFrame.value;\n    if (parentVisibleFrame !== null) {\n      const left = this.style.left.pxState();\n      const top = this.style.top.pxState();\n      return new R2Box(parentVisibleFrame.xMin - left - xBleed, parentVisibleFrame.yMin - top - yBleed,\n                       parentVisibleFrame.xMax - left + xBleed, parentVisibleFrame.yMax - top + yBleed);\n    } else {\n      const bounds = this.node.getBoundingClientRect();\n      const xMin = -bounds.x - xBleed;\n      const yMin = -bounds.y - yBleed;\n      const xMax = window.innerWidth - bounds.x + xBleed;\n      const yMax = window.innerHeight - bounds.y + yBleed;\n      return new R2Box(xMin, yMin, xMax, yMax);\n    }\n  }\n\n  protected override onProcess(processFlags: ViewFlags): void {\n    super.onProcess(processFlags);\n    const visibleFrame = this.detectVisibleFrame();\n    this.visibleFrame.setOutletValue(visibleFrame);\n  }\n\n  protected override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((processFlags & View.NeedsResize) !== 0) {\n      processFlags |= View.NeedsScroll;\n    }\n    return processFlags;\n  }\n\n  protected override onDisplay(displayFlags: ViewFlags): void {\n    super.onDisplay(displayFlags);\n    const visibleFrame = this.detectVisibleFrame();\n    this.visibleFrame.setOutletValue(visibleFrame);\n  }\n\n  protected override onLayout(): void {\n    this.rowHeight.recohere(this.updateTime);\n    super.onLayout();\n    this.resizeRow();\n    const leafView = this.leaf.view;\n    if (leafView !== null) {\n      this.layoutLeaf(leafView);\n    }\n  }\n\n  protected resizeRow(): void {\n    const oldLayout = !this.layout.derived ? this.layout.value : null;\n    if (oldLayout === null) {\n      return;\n    }\n    const superLayout = this.layout.inletValue;\n    let width: number;\n    if (superLayout !== void 0 && superLayout !== null && superLayout.width !== null) {\n      width = superLayout.width.pxValue();\n    } else {\n      width = this.style.width.pxState();\n    }\n    const newLayout = oldLayout.resized(width, 0, 0);\n    this.layout.set(newLayout);\n  }\n\n  protected layoutLeaf(leafView: LeafView): void {\n    const layout = this.layout.value;\n    const width = layout !== null ? layout.width : null;\n    const timing = this.getLook(Look.timing);\n    leafView.style.top.setIntrinsic(0, timing);\n    leafView.style.width.setIntrinsic(width);\n  }\n\n  protected override didLayout(): void {\n    this.layoutRow();\n    super.didLayout();\n  }\n\n  protected layoutRow(): void {\n    const layout = this.layout.value;\n    const width = layout !== null ? layout.width : null;\n    const rowSpacing = this.rowSpacing.getValueOr(Length.zero()).pxValue();\n    const disclosure = this.disclosure.getValue();\n    const disclosingPhase = this.disclosing.getPhaseOr(1) * this.expanding.getPhaseOr(1);\n\n    let leafHeightValue = 0;\n    let leafHeightState = 0;\n    const leafView = this.leaf.view;\n    if (leafView !== null) {\n      leafView.style.width.setIntrinsic(width);\n      leafView.style.display.setIntrinsic(\"flex\");\n      leafHeightValue = leafView.style.height.pxValue();\n      leafHeightState = leafView.style.height.pxState();\n    }\n\n    const headView = this.head.view;\n    if (headView !== null) {\n      if (!disclosure.collapsed) {\n        headView.style.top.setIntrinsic(leafHeightValue);\n        headView.style.width.setIntrinsic(width);\n        headView.style.height.setIntrinsic(rowSpacing);\n        headView.style.opacity.setIntrinsic(disclosingPhase);\n        headView.style.display.setIntrinsic(\"block\");\n      } else {\n        headView.style.display.setIntrinsic(\"none\");\n      }\n    }\n\n    let treeHeightValue = 0;\n    let treeHeightState = 0;\n    const treeView = this.tree.view;\n    if (treeView !== null) {\n      if (!disclosure.collapsed) {\n        treeView.style.top.setIntrinsic(leafHeightValue + rowSpacing * disclosingPhase);\n        treeView.style.width.setIntrinsic(width);\n        treeView.style.display.setIntrinsic(\"block\");\n        treeHeightValue = treeView.style.height.pxValue();\n        treeHeightValue += rowSpacing * disclosingPhase;\n        treeHeightState = treeView.style.height.pxState();\n        treeHeightState += rowSpacing;\n      } else {\n        treeView.style.display.setIntrinsic(\"none\");\n      }\n    }\n\n    const footView = this.foot.view;\n    if (footView !== null) {\n      if (!disclosure.collapsed) {\n        footView.style.top.setIntrinsic(leafHeightValue + treeHeightValue);\n        footView.style.width.setIntrinsic(width);\n        footView.style.height.setIntrinsic(rowSpacing);\n        footView.style.opacity.setIntrinsic(disclosingPhase);\n        footView.style.display.setIntrinsic(\"block\");\n      } else {\n        footView.style.display.setIntrinsic(\"none\");\n      }\n    }\n\n    if (this.style.height.hasAffinity(Affinity.Intrinsic)) {\n      const heightValue = leafHeightValue + treeHeightValue;\n      const heightState = leafHeightState + treeHeightState;\n      this.style.height.setInterpolatedValue(Length.px(heightValue), Length.px(heightState));\n    }\n  }\n\n  protected override onCull(): void {\n    super.onCull();\n    this.style.display.setIntrinsic(\"none\");\n  }\n\n  protected override onUncull(): void {\n    super.onUncull();\n    this.style.display.setIntrinsic(\"block\");\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Model} from \"@swim/model\";\nimport type {Trait} from \"@swim/model\";\nimport {TraitRef} from \"@swim/model\";\nimport type {LeafTraitObserver} from \"./LeafTrait\";\nimport {LeafTrait} from \"./LeafTrait\";\nimport {TableTrait} from \"./\"; // forward import\n\n/** @public */\nexport interface RowTraitObserver<T extends RowTrait = RowTrait> extends LeafTraitObserver<T> {\n  traitWillAttachTree?(treeTrait: TableTrait, trait: T): void;\n\n  traitDidDetachTree?(treeTrait: TableTrait, trait: T): void;\n}\n\n/** @public */\nexport class RowTrait extends LeafTrait {\n  declare readonly observerType?: Class<RowTraitObserver>;\n\n  @TraitRef({\n    get traitType(): typeof TableTrait {\n      return TableTrait;\n    },\n    binds: true,\n    willAttachTrait(treeTrait: TableTrait): void {\n      this.owner.callObservers(\"traitWillAttachTree\", treeTrait, this.owner);\n    },\n    didDetachTrait(treeTrait: TableTrait): void {\n      this.owner.callObservers(\"traitDidDetachTree\", treeTrait, this.owner);\n    },\n    detectModel(model: Model): TableTrait | null {\n      return model.getTrait(TableTrait);\n    },\n    detectTrait(trait: Trait): TableTrait | null {\n      return trait instanceof TableTrait ? trait : null;\n    },\n  })\n  readonly tree!: TraitRef<this, TableTrait>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport type {LeafControllerObserver} from \"./LeafController\";\nimport {LeafController} from \"./LeafController\";\nimport {RowView} from \"./RowView\";\nimport {RowTrait} from \"./RowTrait\";\nimport type {TableView} from \"./TableView\";\nimport type {TableTrait} from \"./TableTrait\";\nimport {TableController} from \"./\"; // forward import\n\n/** @public */\nexport interface RowControllerObserver<C extends RowController = RowController> extends LeafControllerObserver<C> {\n  controllerWillAttachRowTrait?(rowTrait: RowTrait, controller: C): void;\n\n  controllerDidDetachRowTrait?(rowTrait: RowTrait, controller: C): void;\n\n  controllerWillAttachRowView?(rowView: RowView, controller: C): void;\n\n  controllerDidDetachRowView?(rowView: RowView, controller: C): void;\n\n  controllerWillAttachTree?(treeController: TableController, controller: C): void;\n\n  controllerDidDetachTree?(treeController: TableController, controller: C): void;\n\n  controllerWillAttachTreeTrait?(treeTrait: TableTrait, treeController: TableController, controller: C): void;\n\n  controllerDidDetachTreeTrait?(treeTrait: TableTrait, treeController: TableController, controller: C): void;\n\n  controllerWillAttachTreeView?(treeView: TableView, treeController: TableController, controller: C): void;\n\n  controllerDidDetachTreeView?(treeView: TableView, treeController: TableController, controller: C): void;\n\n  controllerWillExpandRowView?(rowView: RowView, controller: C): void;\n\n  controllerDidExpandRowView?(rowView: RowView, controller: C): void;\n\n  controllerWillCollapseRowView?(rowView: RowView, controller: C): void;\n\n  controllerDidCollapseRowView?(rowView: RowView, controller: C): void;\n}\n\n/** @public */\nexport class RowController extends LeafController {\n  declare readonly observerType?: Class<RowControllerObserver>;\n\n  @TraitViewRef({\n    traitType: RowTrait,\n    observesTrait: true,\n    initTrait(rowTrait: RowTrait): void {\n      if (this.owner.leaf.trait === null) {\n        this.owner.leaf.setTrait(rowTrait);\n      }\n      const treeTrait = rowTrait.tree.trait;\n      if (treeTrait !== null) {\n        this.owner.tree.setTrait(treeTrait);\n      }\n    },\n    deinitTrait(rowTrait: RowTrait): void {\n      const treeTrait = rowTrait.tree.trait;\n      if (treeTrait !== null) {\n        this.owner.tree.deleteTrait(treeTrait);\n      }\n      if (this.owner.leaf.trait === rowTrait) {\n        this.owner.leaf.setTrait(null);\n      }\n    },\n    willAttachTrait(rowTrait: RowTrait): void {\n      this.owner.callObservers(\"controllerWillAttachRowTrait\", rowTrait, this.owner);\n    },\n    didDetachTrait(rowTrait: RowTrait): void {\n      this.owner.callObservers(\"controllerDidDetachRowTrait\", rowTrait, this.owner);\n    },\n    traitWillAttachTree(treeTrait: TableTrait): void {\n      this.owner.tree.setTrait(treeTrait);\n    },\n    traitDidDetachTree(treeTrait: TableTrait): void {\n      this.owner.tree.deleteTrait(treeTrait);\n    },\n    viewType: RowView,\n    observesView: true,\n    initView(rowView: RowView): void {\n      if (this.owner.leaf.view === null) {\n        const leafView = rowView.leaf.insertView();\n        this.owner.leaf.setView(leafView);\n      }\n      const treeController = this.owner.tree.controller;\n      if (treeController !== null) {\n        treeController.table.insertView(rowView);\n      }\n    },\n    willAttachView(rowView: RowView): void {\n      this.owner.callObservers(\"controllerWillAttachRowView\", rowView, this.owner);\n    },\n    didDetachView(rowView: RowView): void {\n      this.owner.callObservers(\"controllerDidDetachRowView\", rowView, this.owner);\n    },\n    viewWillExpand(rowView: RowView): void {\n      this.owner.callObservers(\"controllerWillExpandRowView\", rowView, this.owner);\n    },\n    viewDidExpand(rowView: RowView): void {\n      this.owner.callObservers(\"controllerDidExpandRowView\", rowView, this.owner);\n    },\n    viewWillCollapse(rowView: RowView): void {\n      this.owner.callObservers(\"controllerWillCollapseRowView\", rowView, this.owner);\n    },\n    viewDidCollapse(rowView: RowView): void {\n      this.owner.callObservers(\"controllerDidCollapseRowView\", rowView, this.owner);\n    },\n    viewWillAttachTree(treeView: TableView): void {\n      const treeController = this.owner.tree.controller;\n      if (treeController !== null) {\n        treeController.table.setView(treeView);\n      }\n    },\n  })\n  readonly row!: TraitViewRef<this, RowTrait, RowView> & Observes<RowTrait> & Observes<RowView>;\n\n  @TraitViewControllerRef({\n    get controllerType(): typeof TableController {\n      return TableController;\n    },\n    binds: true,\n    observes: true,\n    get parentView(): RowView | null {\n      return this.owner.row.view;\n    },\n    getTraitViewRef(treeController: TableController): TraitViewRef<unknown, TableTrait, TableView> {\n      return treeController.table;\n    },\n    initController(treeController: TableController): void {\n      const treeTrait = treeController.table.trait;\n      if (treeTrait !== null) {\n        this.attachTreeTrait(treeTrait, treeController);\n      }\n      const treeView = treeController.table.view;\n      if (treeView !== null) {\n        this.attachTreeView(treeView, treeController);\n      }\n      const rowTrait = this.owner.row.trait;\n      if (rowTrait !== null) {\n        const treeTrait = rowTrait.tree.trait;\n        if (treeTrait !== null) {\n          treeController.table.setTrait(treeTrait);\n        }\n      }\n    },\n    deinitController(treeController: TableController): void {\n      const treeTrait = treeController.table.trait;\n      if (treeTrait !== null) {\n        this.detachTreeTrait(treeTrait, treeController);\n      }\n      const treeView = treeController.table.view;\n      if (treeView !== null) {\n        this.detachTreeView(treeView, treeController);\n      }\n    },\n    willAttachController(treeController: TableController): void {\n      this.owner.callObservers(\"controllerWillAttachTree\", treeController, this.owner);\n    },\n    didDetachController(treeController: TableController): void {\n      this.owner.callObservers(\"controllerDidDetachTree\", treeController, this.owner);\n    },\n    controllerWillAttachTreeTrait(treeTrait: TableTrait, treeController: TableController): void {\n      this.owner.callObservers(\"controllerWillAttachTreeTrait\", treeTrait, treeController, this.owner);\n      this.attachTreeTrait(treeTrait, treeController);\n    },\n    controllerDidDetachTreeTrait(treeTrait: TableTrait, treeController: TableController): void {\n      this.detachTreeTrait(treeTrait, treeController);\n      this.owner.callObservers(\"controllerDidDetachTreeTrait\", treeTrait, treeController, this.owner);\n    },\n    attachTreeTrait(treeTrait: TableTrait, treeController: TableController): void {\n      // hook\n    },\n    detachTreeTrait(treeTrait: TableTrait, treeController: TableController): void {\n      // hook\n    },\n    controllerWillAttachTableView(treeView: TableView, treeController: TableController): void {\n      this.owner.callObservers(\"controllerWillAttachTreeView\", treeView, treeController, this.owner);\n      this.attachTreeView(treeView, treeController);\n    },\n    controllerDidDetachTableView(treeView: TableView, treeController: TableController): void {\n      this.detachTreeView(treeView, treeController);\n      this.owner.callObservers(\"controllerDidDetachTreeView\", treeView, treeController, this.owner);\n    },\n    attachTreeView(treeView: TableView, treeController: TableController): void {\n      // hook\n    },\n    detachTreeView(treeView: TableView, treeController: TableController): void {\n      treeView.remove();\n    },\n    detectController(controller: Controller): TableController | null {\n      return controller instanceof TableController ? controller : null;\n    },\n  })\n  readonly tree!: TraitViewControllerRef<this, TableTrait, TableView, TableController> & Observes<TableController> & {\n    attachTreeTrait(treeTrait: TableTrait, treeController: TableController): void;\n    detachTreeTrait(treeTrait: TableTrait, treeController: TableController): void;\n    attachTreeView(treeView: TableView, treeController: TableController): void;\n    detachTreeView(treeView: TableView, treeController: TableController): void;\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\n\n/** @public */\nexport interface ColViewObserver<V extends ColView = ColView> extends HtmlViewObserver<V> {\n  viewDidPress?(input: PositionGestureInput, event: Event | null, view: V): void;\n\n  viewDidLongPress?(input: PositionGestureInput, view: V): void;\n}\n\n/** @public */\nexport class ColView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initCol();\n  }\n\n  protected initCol(): void {\n    this.setIntrinsic<ColView>({\n      classList: [\"col\"],\n      style: {\n        overflow: \"hidden\",\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<ColViewObserver>;\n\n  didPress(input: PositionGestureInput, event: Event | null): void {\n    this.callObservers(\"viewDidPress\", input, event, this);\n  }\n\n  didLongPress(input: PositionGestureInput): void {\n    this.callObservers(\"viewDidLongPress\", input, this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Look} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {ColViewObserver} from \"./ColView\";\nimport {ColView} from \"./ColView\";\n\n/** @public */\nexport interface TextColViewObserver<V extends TextColView = TextColView> extends ColViewObserver<V> {\n  viewWillAttachLabel?(labelView: HtmlView, view: V): void;\n\n  viewDidDetachLabel?(labelView: HtmlView, view: V): void;\n}\n\n/** @public */\nexport class TextColView extends ColView {\n  protected override initCol(): void {\n    super.initCol();\n    this.classList.add(\"col-text\");\n  }\n\n  declare readonly observerType?: Class<TextColViewObserver>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    binds: true,\n    willAttachView(labelView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachLabel\", labelView, this.owner);\n    },\n    fromLike(value: HtmlView | LikeType<HtmlView> | string | undefined): HtmlView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        view.text.setState(value);\n        return view;\n      }\n      return super.fromLike(value);\n    },\n    createView(): HtmlView {\n      return HtmlView.fromTag(\"span\").style.setIntrinsic({\n        alignSelf: \"center\",\n        whiteSpace: \"nowrap\",\n        textOverflow: \"ellipsis\",\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        color: Look.legendColor,\n      });\n    },\n  })\n  readonly label!: ViewRef<this, Like<HtmlView, string | undefined>>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {Color} from \"@swim/style\";\nimport type {MoodVector} from \"@swim/theme\";\nimport type {ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {Graphics} from \"@swim/graphics\";\nimport {IconLayout} from \"@swim/graphics\";\nimport {Icon} from \"@swim/graphics\";\nimport type {IconView} from \"@swim/graphics\";\nimport {IconGraphicsAnimator} from \"@swim/graphics\";\nimport {SvgIconView} from \"@swim/graphics\";\nimport type {ColViewObserver} from \"./ColView\";\nimport {ColView} from \"./ColView\";\n\n/** @public */\nexport interface IconColViewObserver<V extends IconColView = IconColView> extends ColViewObserver<V> {\n  viewDidSetGraphics?(graphics: Graphics | null, view: V): void;\n}\n\n/** @public */\nexport class IconColView extends ColView implements IconView {\n  protected override initCol(): void {\n    super.initCol();\n    this.classList.add(\"col-icon\");\n  }\n\n  declare readonly observerType?: Class<IconColViewObserver>;\n\n  /** @override */\n  @Animator({valueType: IconLayout, value: null, updateFlags: View.NeedsLayout})\n  readonly iconLayout!: Animator<this, IconLayout | null>;\n\n  @ThemeAnimator({\n    valueType: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetState(iconColor: Color | null): void {\n      const timing = this.timing !== null ? this.timing : false;\n      this.owner.graphics.setState(this.owner.graphics.state, timing, Affinity.Reflexive);\n    },\n  })\n  get iconColor(): ThemeAnimator<this, Color | null> {\n    return ThemeAnimator.getter();\n  }\n\n  @ThemeAnimator({\n    extends: IconGraphicsAnimator,\n    valueType: Graphics,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"viewDidSetGraphics\", newGraphics, this.owner);\n    },\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  @ViewRef({\n    viewType: SvgIconView,\n    viewKey: true,\n    binds: true,\n    init(): void {\n      this.insertView();\n    },\n    initView(svgView: SvgIconView): void {\n      svgView.style.position.set(\"absolute\");\n      svgView.iconLayout.setInherits(true);\n      svgView.iconColor.setInherits(true);\n      svgView.graphics.setInherits(true);\n    },\n  })\n  readonly svg!: ViewRef<this, SvgIconView>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.derived) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutIcon();\n  }\n\n  protected layoutIcon(): void {\n    const svgView = this.svg.view;\n    if (svgView === null || !svgView.attributes.width.hasAffinity(Affinity.Intrinsic)\n                         && !svgView.attributes.height.hasAffinity(Affinity.Intrinsic)\n                         && !svgView.attributes.viewBox.hasAffinity(Affinity.Intrinsic)) {\n      return;\n    }\n    const width = this.style.width.pxValue();\n    const height = this.style.height.pxValue();\n    svgView.attributes.setIntrinsic({\n      width, height,\n      viewBox: \"0 0 \" + width + \" \" + height,\n    });\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Expansion} from \"@swim/style\";\nimport {ExpansionAnimator} from \"@swim/style\";\nimport {ViewRef} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {DisclosureButton} from \"@swim/button\";\nimport type {ColViewObserver} from \"./ColView\";\nimport {ColView} from \"./ColView\";\n\n/** @public */\nexport interface DisclosureColViewObserver<V extends DisclosureColView = DisclosureColView> extends ColViewObserver<V> {\n}\n\n/** @public */\nexport class DisclosureColView extends ColView {\n  protected override initCol(): void {\n    super.initCol();\n    this.classList.add(\"col-disclosure\");\n  }\n\n  declare readonly observerType?: Class<DisclosureColViewObserver>;\n\n  @ExpansionAnimator({value: null, inherits: true, inheritName: \"expansion\"})\n  readonly disclosure!: ExpansionAnimator<this, Expansion | null>;\n\n  @ViewRef({\n    viewType: DisclosureButton,\n    viewKey: true,\n    binds: true,\n    init(): void {\n      this.insertView();\n    },\n  })\n  readonly button!: ViewRef<this, DisclosureButton>;\n\n  override didPress(input: PositionGestureInput, event: Event | null): void {\n    input.preventDefault();\n    const superDisclosure = this.disclosure.inlet;\n    if (superDisclosure instanceof ExpansionAnimator) {\n      superDisclosure.toggle();\n    }\n    super.didPress(input, event);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {ColLayout} from \"./ColLayout\";\nimport {ColController} from \"./\"; // forward import\n\n/** @public */\nexport interface ColTraitObserver<T extends ColTrait = ColTrait> extends TraitObserver<T> {\n  traitDidSetLayout?(layout: ColLayout | null, trait: T): void;\n}\n\n/** @public */\nexport class ColTrait extends Trait {\n  declare readonly observerType?: Class<ColTraitObserver>;\n\n  @Property({\n    valueType: ColLayout,\n    value: null,\n    didSetValue(layout: ColLayout | null): void {\n      this.owner.callObservers(\"traitDidSetLayout\", layout, this.owner);\n    },\n  })\n  readonly layout!: Property<this, ColLayout | null>;\n\n  createColController(): ColController {\n    return new ColController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {ColTraitObserver} from \"./ColTrait\";\nimport {ColTrait} from \"./ColTrait\";\nimport type {ColController} from \"./ColController\";\nimport {TextColController} from \"./\"; // forward import\n\n/** @public */\nexport interface TextColTraitObserver<T extends TextColTrait = TextColTrait> extends ColTraitObserver<T> {\n  traitDidSetLabel?(label: string | undefined, trait: T): void;\n}\n\n/** @public */\nexport class TextColTrait extends ColTrait {\n  declare readonly observerType?: Class<TextColTraitObserver>;\n\n  @Property({\n    valueType: String,\n    didSetValue(label: string | undefined): void {\n      this.owner.callObservers(\"traitDidSetLabel\", label, this.owner);\n    },\n  })\n  readonly label!: Property<this, string | undefined>;\n\n  override createColController(): ColController {\n    return new TextColController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Graphics} from \"@swim/graphics\";\nimport type {ColTraitObserver} from \"./ColTrait\";\nimport {ColTrait} from \"./ColTrait\";\nimport type {ColController} from \"./ColController\";\nimport {IconColController} from \"./\"; // forward import\n\n/** @public */\nexport interface IconColTraitObserver<T extends IconColTrait = IconColTrait> extends ColTraitObserver<T> {\n  traitDidSetIcon?(icon: Graphics | null, trait: T): void;\n}\n\n/** @public */\nexport class IconColTrait extends ColTrait {\n  declare readonly observerType?: Class<IconColTraitObserver>;\n\n  @Property({\n    valueType: Graphics,\n    value: null,\n    didSetValue(icon: Graphics | null): void {\n      this.owner.callObservers(\"traitDidSetIcon\", icon, this.owner);\n    },\n  })\n  readonly icon!: Property<this, Graphics | null>;\n\n  override createColController(): ColController {\n    return new IconColController();\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport type {ColLayout} from \"./ColLayout\";\nimport {ColView} from \"./ColView\";\nimport {ColTrait} from \"./ColTrait\";\nimport type {TextColTrait} from \"./TextColTrait\";\n\n/** @public */\nexport interface ColControllerObserver<C extends ColController = ColController> extends ControllerObserver<C> {\n  controllerWillAttachColTrait?(colTrait: ColTrait, controller: C): void;\n\n  controllerDidDetachColTrait?(colTrait: ColTrait, controller: C): void;\n\n  controllerWillAttachColView?(colView: ColView, controller: C): void;\n\n  controllerDidDetachColView?(colView: ColView, controller: C): void;\n\n  controllerDidSetColLayout?(colLayout: ColLayout | null, controller: C): void;\n\n  controllerDidPressColView?(input: PositionGestureInput, event: Event | null, colView: ColView, controller: C): void;\n\n  controllerDidLongPressColView?(input: PositionGestureInput, colView: ColView, controller: C): void;\n}\n\n/** @public */\nexport class ColController extends Controller {\n  declare readonly observerType?: Class<ColControllerObserver>;\n\n  @TraitViewRef({\n    traitType: ColTrait,\n    observesTrait: true,\n    willAttachTrait(colTrait: ColTrait): void {\n      this.owner.callObservers(\"controllerWillAttachColTrait\", colTrait, this.owner);\n    },\n    didDetachTrait(colTrait: ColTrait): void {\n      this.owner.callObservers(\"controllerDidDetachColTrait\", colTrait, this.owner);\n    },\n    traitDidSetLayout(colLayout: ColLayout | null): void {\n      this.owner.callObservers(\"controllerDidSetColLayout\", colLayout, this.owner);\n    },\n    viewType: ColView,\n    observesView: true,\n    willAttachView(colView: ColView): void {\n      this.owner.callObservers(\"controllerWillAttachColView\", colView, this.owner);\n    },\n    didDetachView(colView: ColView): void {\n      this.owner.callObservers(\"controllerDidDetachColView\", colView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null, colView: ColView): void {\n      this.owner.callObservers(\"controllerDidPressColView\", input, event, colView, this.owner);\n    },\n    viewDidLongPress(input: PositionGestureInput, colView: ColView): void {\n      this.owner.callObservers(\"controllerDidLongPressColView\", input, colView, this.owner);\n    },\n  })\n  readonly col!: TraitViewRef<this, ColTrait, ColView> & Observes<ColTrait> & Observes<TextColTrait> & Observes<ColView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport type {ColControllerObserver} from \"./ColController\";\nimport {ColController} from \"./ColController\";\nimport {TextColView} from \"./TextColView\";\nimport {TextColTrait} from \"./TextColTrait\";\n\n/** @public */\nexport interface TextColControllerObserver<C extends TextColController = TextColController> extends ColControllerObserver<C> {\n  controllerWillAttachColTrait?(colTrait: TextColTrait, controller: C): void;\n\n  controllerDidDetachColTrait?(colTrait: TextColTrait, controller: C): void;\n\n  controllerWillAttachColView?(colView: TextColView, controller: C): void;\n\n  controllerDidDetachColView?(colView: TextColView, controller: C): void;\n\n  controllerWillAttachColLabelView?(colLabelView: HtmlView, controller: C): void;\n\n  controllerDidDetachColLabelView?(colLabelView: HtmlView, controller: C): void;\n}\n\n/** @public */\nexport class TextColController extends ColController {\n  declare readonly observerType?: Class<TextColControllerObserver>;\n\n  @TraitViewRef({\n    extends: true,\n    traitType: TextColTrait,\n    observesTrait: true,\n    initTrait(cellTrait: TextColTrait): void {\n      this.owner.setLabelView(cellTrait.label.value);\n    },\n    deinitTrait(cellTrait: TextColTrait): void {\n      this.owner.setLabelView(void 0);\n    },\n    traitDidSetLabel(label: string | undefined): void {\n      this.owner.setLabelView(label);\n    },\n    viewType: TextColView,\n    observesView: true,\n    initView(colView: TextColView): void {\n      this.owner.label.setView(colView.label.view);\n      const cellTrait = this.trait;\n      if (cellTrait !== null) {\n        this.owner.setLabelView(cellTrait.label.value);\n      }\n    },\n    deinitView(colView: TextColView): void {\n      this.owner.label.setView(null);\n    },\n    viewWillAttachLabel(labelView: HtmlView): void {\n      this.owner.label.setView(labelView);\n    },\n    viewDidDetachLabel(labelView: HtmlView): void {\n      this.owner.label.setView(null);\n    },\n  })\n  override readonly col!: TraitViewRef<this, TextColTrait, TextColView> & ColController[\"col\"] & Observes<TextColTrait> & Observes<TextColView>;\n\n  protected setLabelView(label: string | undefined): void {\n    const colView = this.col.view;\n    if (colView !== null) {\n      colView.label.set(label);\n    }\n  }\n\n  @ViewRef({\n    viewType: HtmlView,\n    willAttachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"controllerWillAttachColLabelView\", contentView, this.owner);\n    },\n    didDetachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidDetachColLabelView\", contentView, this.owner);\n    },\n  })\n  readonly label!: ViewRef<this, HtmlView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport type {ColControllerObserver} from \"./ColController\";\nimport {ColController} from \"./ColController\";\nimport {IconColView} from \"./IconColView\";\nimport {IconColTrait} from \"./IconColTrait\";\n\n/** @public */\nexport interface IconColControllerObserver<C extends IconColController = IconColController> extends ColControllerObserver<C> {\n  controllerWillAttachColTrait?(colTrait: IconColTrait, controller: C): void;\n\n  controllerDidDetachColTrait?(colTrait: IconColTrait, controller: C): void;\n\n  controllerWillAttachColView?(colView: IconColView, controller: C): void;\n\n  controllerDidDetachColView?(colView: IconColView, controller: C): void;\n\n  controllerDidSetColIcon?(colIcon: Graphics | null, controller: C): void;\n}\n\n/** @public */\nexport class IconColController extends ColController {\n  declare readonly observerType?: Class<IconColControllerObserver>;\n\n  protected setIcon(icon: Graphics | null): void {\n    const colView = this.col.view;\n    if (colView !== null) {\n      colView.graphics.set(icon);\n    }\n  }\n\n  @TraitViewRef({\n    extends: true,\n    traitType: IconColTrait,\n    observesTrait: true,\n    initTrait(colTrait: IconColTrait): void {\n      this.owner.setIcon(colTrait.icon.value);\n    },\n    deinitTrait(colTrait: IconColTrait): void {\n      this.owner.setIcon(null);\n    },\n    traitDidSetIcon(icon: Graphics | null): void {\n      this.owner.setIcon(icon);\n    },\n    viewType: IconColView,\n    observesView: true,\n    initView(colView: IconColView): void {\n      const colTrait = this.trait;\n      if (colTrait !== null) {\n        this.owner.setIcon(colTrait.icon.value);\n      }\n    },\n    viewDidSetGraphics(colIcon: Graphics | null): void {\n      this.owner.callObservers(\"controllerDidSetColIcon\", colIcon, this.owner);\n    },\n  })\n  override readonly col!: TraitViewRef<this, IconColTrait, IconColView> & ColController[\"col\"] & Observes<IconColTrait> & Observes<IconColView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport type {Expansion} from \"@swim/style\";\nimport {ExpansionAnimator} from \"@swim/style\";\nimport {ThemeConstraintAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {PositionGesture} from \"@swim/view\";\nimport {NodeView} from \"@swim/dom\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {TableLayout} from \"./TableLayout\";\nimport {ColView} from \"./ColView\";\n\n/** @public */\nexport interface HeaderViewObserver<V extends HeaderView = HeaderView> extends HtmlViewObserver<V> {\n  viewWillAttachCol?(colView: ColView, targetView: View | null, view: V): void;\n\n  viewDidDetachCol?(colView: ColView, view: V): void;\n\n  viewDidPress?(input: PositionGestureInput, event: Event | null, view: V): void;\n\n  viewDidLongPress?(input: PositionGestureInput, view: V): void;\n}\n\n/** @public */\nexport class HeaderView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initHeader();\n  }\n\n  protected initHeader(): void {\n    this.setIntrinsic<HeaderView>({\n      classList: [\"header\"],\n      style: {\n        position: \"relative\",\n        overflow: \"hidden\",\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<HeaderViewObserver>;\n\n  @Property({valueType: TableLayout, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly layout!: Property<this, TableLayout | null>;\n\n  @Property({valueType: Number, value: 0, inherits: true, updateFlags: View.NeedsLayout})\n  readonly depth!: Property<this, number>;\n\n  @ThemeConstraintAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly rowSpacing!: ThemeConstraintAnimator<this, Length | null>;\n\n  @ThemeConstraintAnimator({valueType: Length, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly rowHeight!: ThemeConstraintAnimator<this, Length | null>;\n\n  @ExpansionAnimator({value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly stretch!: ExpansionAnimator<this, Expansion | null>;\n\n  getCol<F extends Class<ColView>>(key: string, colViewClass: F): InstanceType<F> | null;\n  getCol(key: string): ColView | null;\n  getCol(key: string, colViewClass?: Class<ColView>): ColView | null {\n    if (colViewClass === void 0) {\n      colViewClass = ColView;\n    }\n    const colView = this.getChild(key);\n    return colView instanceof colViewClass ? colView : null;\n  }\n\n  getOrCreateCol<F extends Class<Instance<F, ColView>> & Creatable<Instance<F, ColView>>>(key: string, colViewClass: F): InstanceType<F> {\n    let colView = this.getChild(key, colViewClass);\n    if (colView === null) {\n      colView = colViewClass.create();\n      this.setChild(key, colView);\n    }\n    return colView!;\n  }\n\n  setCol(key: string, colView: ColView | null): void {\n    this.setChild(key, colView);\n  }\n\n  @ViewSet({\n    viewType: ColView,\n    binds: true,\n    initView(colView: ColView): void {\n      colView.style.setIntrinsic({\n        display: \"none\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: 0,\n        height: this.owner.style.height.state,\n      });\n    },\n    willAttachView(colView: ColView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachCol\", colView, target, this.owner);\n    },\n    didDetachView(colView: ColView): void {\n      this.owner.callObservers(\"viewDidDetachCol\", colView, this.owner);\n    },\n  })\n  readonly cols!: ViewSet<this, ColView>;\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.layoutHeader();\n  }\n\n  protected layoutHeader(): void {\n    this.rowHeight.recohere(this.updateTime);\n    const rowHeight = this.rowHeight.value;\n    if (rowHeight !== null) {\n      this.style.height.setIntrinsic(rowHeight);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    if ((displayFlags & View.NeedsLayout) !== 0) {\n      this.layoutChildren(displayFlags, displayChild);\n    } else {\n      super.displayChildren(displayFlags, displayChild);\n    }\n  }\n\n  protected layoutChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    const layout = this.layout.value;\n    const height = this.style.height.state;\n    const stretch = this.stretch.getPhaseOr(1);\n    type self = this;\n    function layoutChild(this: self, child: View, displayFlags: ViewFlags): void {\n      if (child instanceof ColView) {\n        const key = child.key;\n        const col = layout !== null && key !== void 0 ? layout.getCol(key) : null;\n        if (col !== null) {\n          child.style.setIntrinsic({\n            display: !col.hidden && col.width !== null ? \"flex\" : \"none\",\n            left: col.left,\n            width: col.width,\n            height,\n            color: col.textColor,\n            opacity: col.persistent ? void 0 : stretch,\n          });\n        } else {\n          child.style.setIntrinsic({\n            display: \"none\",\n            left: null,\n            width: null,\n            height: null,\n            color: null,\n            opacity: void 0,\n          });\n        }\n      }\n      displayChild.call(this, child, displayFlags);\n    }\n    super.displayChildren(displayFlags, layoutChild);\n  }\n\n  @PositionGesture({\n    bindsOwner: true,\n    didPress(input: PositionGestureInput, event: Event | null): void {\n      if (this.owner.clientBounds.contains(input.x, input.y)) {\n        if (!input.defaultPrevented) {\n          let target = input.target;\n          while (target instanceof Node && target !== this.owner.node) {\n            const targetView = NodeView.get(target);\n            if (targetView instanceof ColView) {\n              targetView.didPress(input, event);\n              break;\n            }\n            target = target.parentNode;\n          }\n        }\n        if (!input.defaultPrevented) {\n          this.owner.callObservers(\"viewDidPress\", input, event, this.owner);\n        }\n      }\n    },\n    didLongPress(input: PositionGestureInput): void {\n      if (!input.defaultPrevented) {\n        let target = input.target;\n        while (target instanceof Node && target !== this.owner.node) {\n          const targetView = NodeView.get(target);\n          if (targetView instanceof ColView) {\n            targetView.didLongPress(input);\n            break;\n          }\n          target = target.parentNode;\n        }\n      }\n      if (!input.defaultPrevented) {\n        this.owner.callObservers(\"viewDidLongPress\", input, this.owner);\n      }\n    },\n  })\n  readonly gesture!: PositionGesture<this, HeaderView>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitSet} from \"@swim/model\";\nimport {ColTrait} from \"./ColTrait\";\n\n/** @public */\nexport interface HeaderTraitObserver<T extends HeaderTrait = HeaderTrait> extends TraitObserver<T> {\n  traitWillAttachCol?(colTrait: ColTrait, targetTrait: Trait | null, trait: T): void;\n\n  traitDidDetachCol?(colTrait: ColTrait, trait: T): void;\n}\n\n/** @public */\nexport class HeaderTrait extends Trait {\n  declare readonly observerType?: Class<HeaderTraitObserver>;\n\n  getCol<F extends Class<ColTrait>>(key: string, colTraitClass: F): InstanceType<F> | null;\n  getCol(key: string): ColTrait | null;\n  getCol(key: string, colTraitClass?: Class<ColTrait>): ColTrait | null {\n    if (colTraitClass === void 0) {\n      colTraitClass = ColTrait;\n    }\n    const colTrait = this.getTrait(key);\n    return colTrait instanceof colTraitClass ? colTrait : null;\n  }\n\n  getOrCreateCol<F extends Class<Instance<F, ColTrait>> & Creatable<Instance<F, ColTrait>>>(key: string, colTraitClass: F): InstanceType<F> {\n    let colTrait = this.getTrait(key, colTraitClass);\n    if (colTrait === null) {\n      colTrait = colTraitClass.create();\n      this.setTrait(key, colTrait);\n    }\n    return colTrait!;\n  }\n\n  setCol(key: string, colTrait: ColTrait | null): void {\n    this.setTrait(key, colTrait);\n  }\n\n  @TraitSet({\n    traitType: ColTrait,\n    binds: true,\n    willAttachTrait(colTrait: ColTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachCol\", colTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(colTrait: ColTrait): void {\n      if (this.owner.consuming) {\n        colTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(colTrait: ColTrait): void {\n      if (this.owner.consuming) {\n        colTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(colTrait: ColTrait): void {\n      this.owner.callObservers(\"traitDidDetachCol\", colTrait, this.owner);\n    },\n    detectModel(model: Model): ColTrait | null {\n      return model.getTrait(ColTrait);\n    },\n  })\n  readonly cols!: TraitSet<this, ColTrait>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.cols.consumeTraits(this);\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.cols.unconsumeTraits(this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {Controller} from \"@swim/controller\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {ColLayout} from \"./ColLayout\";\nimport type {ColView} from \"./ColView\";\nimport {TextColView} from \"./TextColView\";\nimport type {ColTrait} from \"./ColTrait\";\nimport {ColController} from \"./ColController\";\nimport type {TextColController} from \"./TextColController\";\nimport type {IconColController} from \"./IconColController\";\nimport {HeaderView} from \"./HeaderView\";\nimport {HeaderTrait} from \"./HeaderTrait\";\n\n/** @public */\nexport interface HeaderControllerObserver<C extends HeaderController = HeaderController> extends ControllerObserver<C> {\n  controllerWillAttachHeaderTrait?(headerTrait: HeaderTrait, controller: C): void;\n\n  controllerDidDetachHeaderTrait?(headerTrait: HeaderTrait, controller: C): void;\n\n  controllerWillAttachHeaderView?(headerView: HeaderView, controller: C): void;\n\n  controllerDidDetachHeaderView?(headerView: HeaderView, controller: C): void;\n\n  controllerDidPressHeaderView?(input: PositionGestureInput, event: Event | null, headerView: HeaderView, controller: C): void;\n\n  controllerDidLongPressHeaderView?(input: PositionGestureInput, headerView: HeaderView, controller: C): void;\n\n  controllerWillAttachCol?(colController: ColController, controller: C): void;\n\n  controllerDidDetachCol?(colController: ColController, controller: C): void;\n\n  controllerWillAttachColTrait?(colTrait: ColTrait, colController: ColController, controller: C): void;\n\n  controllerDidDetachColTrait?(colTrait: ColTrait, colController: ColController, controller: C): void;\n\n  controllerDidSetColLayout?(colLayout: ColLayout | null, colController: ColController, controller: C): void;\n\n  controllerWillAttachColView?(colView: ColView, colController: ColController, controller: C): void;\n\n  controllerDidDetachColView?(colView: ColView, colController: ColController, controller: C): void;\n\n  controllerDidPressColView?(input: PositionGestureInput, event: Event | null, colView: ColView, colController: ColController, controller: C): void;\n\n  controllerDidLongPressColView?(input: PositionGestureInput, colView: ColView, colController: ColController, controller: C): void;\n\n  controllerWillAttachColLabelView?(colLabelView: HtmlView, colController: ColController, controller: C): void;\n\n  controllerDidDetachColLabelView?(colLabelView: HtmlView, colController: ColController, controller: C): void;\n\n  controllerDidSetColIcon?(colIcon: Graphics | null, colController: ColController, controller: C): void;\n}\n\n/** @public */\nexport class HeaderController extends Controller {\n  declare readonly observerType?: Class<HeaderControllerObserver>;\n\n  @TraitViewRef({\n    traitType: HeaderTrait,\n    observesTrait: true,\n    willAttachTrait(headerTrait: HeaderTrait): void {\n      this.owner.callObservers(\"controllerWillAttachHeaderTrait\", headerTrait, this.owner);\n    },\n    didAttachTrait(headerTrait: HeaderTrait): void {\n      this.owner.cols.addTraits(headerTrait.cols.traits);\n    },\n    willDetachTrait(headerTrait: HeaderTrait): void {\n      this.owner.cols.deleteTraits(headerTrait.cols.traits);\n    },\n    didDetachTrait(headerTrait: HeaderTrait): void {\n      this.owner.callObservers(\"controllerDidDetachHeaderTrait\", headerTrait, this.owner);\n    },\n    traitWillAttachCol(colTrait: ColTrait, targetTrait: Trait): void {\n      this.owner.cols.addTrait(colTrait, targetTrait);\n    },\n    traitDidDetachCol(colTrait: ColTrait): void {\n      this.owner.cols.deleteTrait(colTrait);\n    },\n    viewType: HeaderView,\n    observesView: true,\n    initView(headerView: HeaderView): void {\n      const colControllers = this.owner.cols.controllers;\n      for (const controllerId in colControllers) {\n        const colController = colControllers[controllerId]!;\n        const colView = colController.col.view;\n        if (colView !== null && colView.parent === null) {\n          const colTrait = colController.col.trait;\n          if (colTrait !== null) {\n            colController.col.insertView(headerView, void 0, void 0, colTrait.key);\n          }\n        }\n      }\n    },\n    insertChildView(parent: View, childView: HeaderView, targetView: View | null, key: string | undefined): void {\n      parent.prependChild(childView, key);\n    },\n    willAttachView(headerView: HeaderView): void {\n      this.owner.callObservers(\"controllerWillAttachHeaderView\", headerView, this.owner);\n    },\n    didDetachView(headerView: HeaderView): void {\n      this.owner.callObservers(\"controllerDidDetachHeaderView\", headerView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null, headerView: HeaderView): void {\n      this.owner.callObservers(\"controllerDidPressHeaderView\", input, event, headerView, this.owner);\n    },\n    viewDidLongPress(input: PositionGestureInput, headerView: HeaderView): void {\n      this.owner.callObservers(\"controllerDidLongPressHeaderView\", input, headerView, this.owner);\n    },\n  })\n  readonly header!: TraitViewRef<this, HeaderTrait, HeaderView> & Observes<HeaderTrait> & Observes<HeaderView>;\n\n  getCol<F extends Class<ColController>>(key: string, colControllerClass: F): InstanceType<F> | null;\n  getCol(key: string): ColController | null;\n  getCol(key: string, colControllerClass?: Class<ColController>): ColController | null {\n    if (colControllerClass === void 0) {\n      colControllerClass = ColController;\n    }\n    const colController = this.getChild(key);\n    return colController instanceof colControllerClass ? colController : null;\n  }\n\n  getOrCreateCol<F extends Class<Instance<F, ColController>> & Creatable<Instance<F, ColController>>>(key: string, colControllerClass: F): InstanceType<F> {\n    let colController = this.getChild(key, colControllerClass);\n    if (colController === null) {\n      colController = colControllerClass.create();\n      this.setChild(key, colController);\n    }\n    return colController!;\n  }\n\n  setCol(key: string, colController: ColController | null): void {\n    this.setChild(key, colController);\n  }\n\n  getColTrait<F extends Class<ColTrait>>(key: string, colTraitClass: F): InstanceType<F> | null;\n  getColTrait(key: string): ColTrait | null;\n  getColTrait(key: string, colTraitClass?: Class<ColTrait>): ColTrait | null {\n    const headerTrait = this.header.trait;\n    return headerTrait !== null ? headerTrait.getCol(key, colTraitClass!) : null;\n  }\n\n  getOrCreateColTrait<F extends Class<Instance<F, ColTrait>> & Creatable<Instance<F, ColTrait>>>(key: string, colTraitClass: F): InstanceType<F> {\n    const headerTrait = this.header.trait;\n    if (headerTrait === null) {\n      throw new Error(\"no header trait\");\n    }\n    return headerTrait.getOrCreateCol(key, colTraitClass);\n  }\n\n  setColTrait(key: string, colTrait: ColTrait | null): void {\n    const headerTrait = this.header.trait;\n    if (headerTrait === null) {\n      throw new Error(\"no header trait\");\n    }\n    headerTrait.setCol(key, colTrait);\n  }\n\n  getColView<F extends Class<ColView>>(key: string, colViewClass: F): InstanceType<F> | null;\n  getColView(key: string): ColView | null;\n  getColView(key: string, colViewClass?: Class<ColView>): ColView | null {\n    const headerView = this.header.view;\n    return headerView !== null ? headerView.getCol(key, colViewClass!) : null;\n  }\n\n  getOrCreateColView<F extends Class<Instance<F, ColView>> & Creatable<Instance<F, ColView>>>(key: string, colViewClass: F): InstanceType<F> {\n    let headerView = this.header.view;\n    if (headerView === null) {\n      headerView = this.header.createView();\n      if (headerView === null) {\n        throw new Error(\"no header view\");\n      }\n      this.header.setView(headerView);\n    }\n    return headerView.getOrCreateCol(key, colViewClass);\n  }\n\n  setColView(key: string, colView: ColView | null): void {\n    let headerView = this.header.view;\n    if (headerView === null) {\n      headerView = this.header.createView();\n      if (headerView === null) {\n        throw new Error(\"no header view\");\n      }\n      this.header.setView(headerView);\n    }\n    headerView.setCol(key, colView);\n  }\n\n  @TraitViewControllerSet({\n    controllerType: ColController,\n    binds: true,\n    observes: true,\n    get parentView(): HeaderView | null {\n      return this.owner.header.view;\n    },\n    getTraitViewRef(colController: ColController): TraitViewRef<unknown, ColTrait, ColView> {\n      return colController.col;\n    },\n    willAttachController(colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachCol\", colController, this.owner);\n    },\n    didAttachController(colController: ColController): void {\n      const colTrait = colController.col.trait;\n      if (colTrait !== null) {\n        this.attachColTrait(colTrait, colController);\n      }\n      const colView = colController.col.view;\n      if (colView !== null) {\n        this.attachColView(colView, colController);\n      }\n    },\n    willDetachController(colController: ColController): void {\n      const colView = colController.col.view;\n      if (colView !== null) {\n        this.detachColView(colView, colController);\n      }\n      const colTrait = colController.col.trait;\n      if (colTrait !== null) {\n        this.detachColTrait(colTrait, colController);\n      }\n    },\n    didDetachController(colController: ColController): void {\n      this.owner.callObservers(\"controllerDidDetachCol\", colController, this.owner);\n    },\n    controllerWillAttachColTrait(colTrait: ColTrait, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColTrait\", colTrait, colController, this.owner);\n      this.attachColTrait(colTrait, colController);\n    },\n    controllerDidDetachColTrait(colTrait: ColTrait, colController: ColController): void {\n      this.detachColTrait(colTrait, colController);\n      this.owner.callObservers(\"controllerDidDetachColTrait\", colTrait, colController, this.owner);\n    },\n    attachColTrait(colTrait: ColTrait, colController: ColController): void {\n      // hook\n    },\n    detachColTrait(colTrait: ColTrait, colController: ColController): void {\n      // hook\n    },\n    controllerWillAttachColView(colView: ColView, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColView\", colView, colController, this.owner);\n      this.attachColView(colView, colController);\n    },\n    controllerDidDetachColView(colView: ColView, colController: ColController): void {\n      this.detachColView(colView, colController);\n      this.owner.callObservers(\"controllerDidDetachColView\", colView, colController, this.owner);\n    },\n    controllerDidSetColLayout(colLayout: ColLayout | null, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidSetColLayout\", colLayout, colController, this.owner);\n    },\n    attachColView(colView: ColView, colController: ColController): void {\n      if (colView instanceof TextColView) {\n        const colLabelView = colView.label.view;\n        if (colLabelView !== null) {\n          this.attachColLabelView(colLabelView, colController);\n        }\n      }\n    },\n    detachColView(colView: ColView, colController: ColController): void {\n      if (colView instanceof TextColView) {\n        const colLabelView = colView.label.view;\n        if (colLabelView !== null) {\n          this.detachColLabelView(colLabelView, colController);\n        }\n      }\n      colView.remove();\n    },\n    controllerDidPressColView(input: PositionGestureInput, event: Event | null, colView: ColView, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidPressColView\", input, event, colView, colController, this.owner);\n    },\n    controllerDidLongPressColView(input: PositionGestureInput, colView: ColView, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidLongPressColView\", input, colView, colController, this.owner);\n    },\n    controllerWillAttachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColLabelView\", colLabelView, colController, this.owner);\n      this.attachColLabelView(colLabelView, colController);\n    },\n    controllerDidDetachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      this.detachColLabelView(colLabelView, colController);\n      this.owner.callObservers(\"controllerDidDetachColLabelView\", colLabelView, colController, this.owner);\n    },\n    attachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      // hook\n    },\n    detachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      // hook\n    },\n    controllerDidSetColIcon(colIcon: Graphics | null, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidSetColIcon\", colIcon, colController, this.owner);\n    },\n    createController(colTrait?: ColTrait): ColController {\n      if (colTrait !== void 0) {\n        return colTrait.createColController();\n      } else {\n        return super.createController();\n      }\n    },\n  })\n  readonly cols!: TraitViewControllerSet<this, ColTrait, ColView, ColController> & Observes<ColController> & Observes<TextColController> & Observes<IconColController> & {\n    attachColTrait(colTrait: ColTrait, colController: ColController): void;\n    detachColTrait(colTrait: ColTrait, colController: ColController): void;\n    attachColView(colView: ColView, colController: ColController): void;\n    detachColView(colView: ColView, colController: ColController): void;\n    attachColLabelView(colLabelView: HtmlView, colController: ColController): void;\n    detachColLabelView(colLabelView: HtmlView, colController: ColController): void;\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {Expansion} from \"@swim/style\";\nimport {ExpansionAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Feel} from \"@swim/theme\";\nimport {ThemeConstraintAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {TableLayout} from \"./TableLayout\";\nimport type {LeafView} from \"./LeafView\";\nimport {RowView} from \"./RowView\";\nimport {HeaderView} from \"./HeaderView\";\n\n/** @public */\nexport interface TableViewObserver<V extends TableView = TableView> extends HtmlViewObserver<V> {\n  viewWillAttachHeader?(headerView: HeaderView, view: V): void;\n\n  viewDidDetachHeader?(headerView: HeaderView, view: V): void;\n\n  viewWillAttachRow?(rowView: RowView, targetView: View | null, view: V): void;\n\n  viewDidDetachRow?(rowView: RowView, view: V): void;\n\n  viewWillAttachLeaf?(leafView: LeafView, rowView: RowView): void;\n\n  viewDidDetachLeaf?(leafView: LeafView, rowView: RowView): void;\n\n  viewWillHighlightLeaf?(leafView: LeafView, rowView: RowView): void;\n\n  viewDidHighlightLeaf?(leafView: LeafView, rowView: RowView): void;\n\n  viewWillUnhighlightLeaf?(leafView: LeafView, rowView: RowView): void;\n\n  viewDidUnhighlightLeaf?(leafView: LeafView, rowView: RowView): void;\n\n  viewDidEnterLeaf?(leafView: LeafView, rowView: RowView): void;\n\n  viewDidLeaveLeaf?(leafView: LeafView, rowView: RowView): void;\n\n  viewDidPressLeaf?(input: PositionGestureInput, event: Event | null, leafView: LeafView, rowView: RowView): void;\n\n  viewDidLongPressLeaf?(input: PositionGestureInput, leafView: LeafView, rowView: RowView): void;\n\n  viewWillAttachTree?(treeView: TableView, rowView: RowView): void;\n\n  viewDidDetachTree?(treeView: TableView, rowView: RowView): void;\n\n  viewWillExpandRow?(rowView: RowView): void;\n\n  viewDidExpandRow?(rowView: RowView): void;\n\n  viewWillCollapseRow?(rowView: RowView): void;\n\n  viewDidCollapseRow?(rowView: RowView): void;\n\n  viewWillExpand?(view: V): void;\n\n  viewDidExpand?(view: V): void;\n\n  viewWillCollapse?(view: V): void;\n\n  viewDidCollapse?(view: V): void;\n}\n\n/** @public */\nexport class TableView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.visibleViews = [];\n    this.initTable();\n  }\n\n  protected initTable(): void {\n    this.setIntrinsic<TableView>({\n      classList: [\"table\"],\n      style: {\n        position: \"relative\",\n        backgroundColor: Look.backgroundColor,\n        boxSizing: \"border-box\",\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<TableViewObserver>;\n\n  @Property({valueType: TableLayout, value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly layout!: Property<this, TableLayout | null>;\n\n  @Property({\n    valueType: Number,\n    value: 0,\n    inherits: true,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newDepth: number, oldDepth: number): void {\n      this.owner.modifyTheme(Feel.default, [[Feel.nested, newDepth !== 0 ? 1 : void 0]], false);\n    },\n  })\n  readonly depth!: Property<this, number>;\n\n  @ThemeConstraintAnimator({valueType: Length, value: Length.zero(), inherits: true, updateFlags: View.NeedsLayout})\n  readonly rowSpacing!: ThemeConstraintAnimator<this, Length>;\n\n  @ThemeConstraintAnimator({valueType: Length, value: Length.px(24), inherits: true, updateFlags: View.NeedsLayout})\n  readonly rowHeight!: ThemeConstraintAnimator<this, Length>;\n\n  @Property({valueType: Boolean, value: false, inherits: true})\n  readonly hovers!: Property<this, boolean>;\n\n  @Property({valueType: Boolean, value: true, inherits: true})\n  readonly glows!: Property<this, boolean>;\n\n  @ExpansionAnimator({\n    value: Expansion.expanded(),\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, null);\n    },\n    willExpand(): void {\n      this.owner.callObservers(\"viewWillExpand\", this.owner);\n    },\n    didExpand(): void {\n      this.owner.callObservers(\"viewDidExpand\", this.owner);\n    },\n    willCollapse(): void {\n      this.owner.callObservers(\"viewWillCollapse\", this.owner);\n    },\n    didCollapse(): void {\n      this.owner.callObservers(\"viewDidCollapse\", this.owner);\n    },\n    didSetValue(newExpansion: Expansion, oldExpansion: Expansion): void {\n      if (newExpansion.phase !== 1) {\n        this.owner.expanding.setIntrinsic(newExpansion);\n      } else {\n        this.owner.expanding.setAffinity(Affinity.Transient);\n      }\n      const tableView = this.owner.getRoot(TableView);\n      if (tableView !== null) {\n        tableView.requireUpdate(View.NeedsLayout);\n      } else {\n        this.owner.requireUpdate(View.NeedsLayout);\n      }\n    },\n  })\n  readonly expansion!: ExpansionAnimator<this, Expansion>;\n\n  @ExpansionAnimator({value: Expansion.expanded(), inherits: true})\n  readonly expanding!: ExpansionAnimator<this, Expansion | null>;\n\n  @ExpansionAnimator({value: null, inherits: true})\n  readonly disclosure!: ExpansionAnimator<this, Expansion | null>;\n\n  @ExpansionAnimator({value: Expansion.expanded(), inherits: true})\n  readonly disclosing!: ExpansionAnimator<this, Expansion | null>;\n\n  @ExpansionAnimator({value: null, inherits: true, updateFlags: View.NeedsLayout})\n  readonly stretch!: ExpansionAnimator<this, Expansion | null>;\n\n  @ViewRef({\n    viewType: HeaderView,\n    viewKey: true,\n    binds: true,\n    initView(headerView: HeaderView): void {\n      const layout = this.owner.layout.value;\n      headerView.style.setIntrinsic({\n        display: \"none\",\n        position: \"absolute\",\n        left: 0,\n        top: null,\n        width: layout !== null ? layout.width : null,\n      });\n      headerView.setCulled(true);\n    },\n    willAttachView(headerView: HeaderView): void {\n      this.owner.callObservers(\"viewWillAttachHeader\", headerView, this.owner);\n    },\n    didDetachView(headerView: HeaderView): void {\n      this.owner.callObservers(\"viewDidDetachHeader\", headerView, this.owner);\n    },\n    insertChild(parent: View, child: HeaderView, target: View | number | null, key: string | undefined): void {\n      parent.prependChild(child, key);\n    }\n  })\n  readonly header!: ViewRef<this, HeaderView>;\n\n  getRow<F extends Class<RowView>>(key: string, rowViewClass: F): InstanceType<F> | null;\n  getRow(key: string): RowView | null;\n  getRow(key: string, rowViewClass?: Class<RowView>): RowView | null {\n    if (rowViewClass === void 0) {\n      rowViewClass = RowView;\n    }\n    const rowView = this.getChild(key);\n    return rowView instanceof rowViewClass ? rowView : null;\n  }\n\n  getOrCreateRow<F extends Class<Instance<F, RowView>> & Creatable<Instance<F, RowView>>>(key: string, rowViewClass: F): InstanceType<F>;\n  getOrCreateRow(key: string): RowView;\n  getOrCreateRow(key: string, rowViewClass?: Class<RowView> & Creatable<RowView>): RowView {\n    if (rowViewClass === void 0) {\n      rowViewClass = RowView;\n    }\n    let rowView = this.getChild(key, rowViewClass);\n    if (rowView === null) {\n      rowView = rowViewClass.create();\n      this.setChild(key, rowView);\n    }\n    return rowView!;\n  }\n\n  setRow(key: string, rowView: RowView | null): void {\n    this.setChild(key, rowView);\n  }\n\n  @ViewSet({\n    viewType: RowView,\n    binds: true,\n    observes: true,\n    initView(rowView: RowView): void {\n      const layout = this.owner.layout.value;\n      rowView.style.setIntrinsic({\n        display: \"none\",\n        position: \"absolute\",\n        left: 0,\n        top: null,\n        width: layout !== null ? layout.width : null,\n      });\n      rowView.setCulled(true);\n    },\n    willAttachView(rowView: RowView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachRow\", rowView, target, this.owner);\n    },\n    didDetachView(rowView: RowView): void {\n      this.owner.callObservers(\"viewDidDetachRow\", rowView, this.owner);\n    },\n    viewWillAttachLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewWillAttachLeaf\", leafView, rowView);\n    },\n    viewDidDetachLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidDetachLeaf\", leafView, rowView);\n    },\n    viewDidEnterLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidEnterLeaf\", leafView, rowView);\n    },\n    viewDidLeaveLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidLeaveLeaf\", leafView, rowView);\n    },\n    viewDidPressLeaf(input: PositionGestureInput, event: Event | null, leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidPressLeaf\", input, event, leafView, rowView);\n    },\n    viewDidLongPressLeaf(input: PositionGestureInput, leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidLongPressLeaf\", input, leafView, rowView);\n    },\n    viewWillAttachTree(treeView: TableView, rowView: RowView): void {\n      this.owner.callObservers(\"viewWillAttachTree\", treeView, rowView);\n    },\n    viewDidDetachTree(treeView: TableView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidDetachTree\", treeView, rowView);\n    },\n    viewWillHighlightLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewWillHighlightLeaf\", leafView, rowView);\n    },\n    viewDidHighlightLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidHighlightLeaf\", leafView, rowView);\n    },\n    viewWillUnhighlightLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewWillUnhighlightLeaf\", leafView, rowView);\n    },\n    viewDidUnhighlightLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidUnhighlightLeaf\", leafView, rowView);\n    },\n    viewWillExpand(rowView: RowView): void {\n      this.owner.callObservers(\"viewWillExpandRow\", rowView);\n    },\n    viewDidExpand(rowView: RowView): void {\n      this.owner.callObservers(\"viewDidExpandRow\", rowView);\n    },\n    viewWillCollapse(rowView: RowView): void {\n      this.owner.callObservers(\"viewWillCollapseRow\", rowView);\n    },\n    viewDidCollapse(rowView: RowView): void {\n      this.owner.callObservers(\"viewDidCollapseRow\", rowView);\n    },\n  })\n  readonly rows!: ViewSet<this, RowView> & Observes<RowView>;\n\n  /** @internal */\n  readonly visibleViews: readonly View[];\n\n  @Property({\n    valueType: R2Box,\n    value: null,\n    inherits: true,\n    init(): void {\n      this.outletValue = null;\n    },\n    getOutletValue(outlet: Property<unknown, R2Box | null>): R2Box | null {\n      return this.outletValue;\n    },\n    setOutletValue(newOutletValue: R2Box | null): void {\n      const oldOutletValue = this.outletValue;\n      if (!this.equalValues(newOutletValue, oldOutletValue)) {\n        this.outletValue = newOutletValue;\n        this.decohereOutlets();\n      }\n    },\n  })\n  readonly visibleFrame!: Property<this, R2Box | null> & {\n    /** @internal */\n    outletValue: R2Box | null,\n    /** @internal */\n    setOutletValue(newOutletValue: R2Box | null): void,\n  };\n\n  protected detectVisibleFrame(): R2Box {\n    const xBleed = 0;\n    const yBleed = this.rowHeight.getValueOr(Length.zero()).pxValue();\n    const parentVisibleFrame = this.visibleFrame.value;\n    if (parentVisibleFrame !== null) {\n      const left = this.style.left.pxState();\n      const top = this.style.top.pxState();\n      return new R2Box(parentVisibleFrame.xMin - left - xBleed, parentVisibleFrame.yMin - top - yBleed,\n                       parentVisibleFrame.xMax - left + xBleed, parentVisibleFrame.yMax - top + yBleed);\n    } else {\n      const bounds = this.node.getBoundingClientRect();\n      const xMin = -bounds.x - xBleed;\n      const yMin = -bounds.y - yBleed;\n      const xMax = window.innerWidth - bounds.x + xBleed;\n      const yMax = window.innerHeight - bounds.y + yBleed;\n      return new R2Box(xMin, yMin, xMax, yMax);\n    }\n  }\n\n  override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((processFlags & View.NeedsResize) !== 0) {\n      processFlags |= View.NeedsScroll;\n    }\n    return processFlags;\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.resizeTable();\n  }\n\n  protected resizeTable(): void {\n    const oldLayout = !this.layout.derived ? this.layout.value : null;\n    if (oldLayout !== null) {\n      const superLayout = this.layout.inletValue;\n      let width: Length | number | null = null;\n      if (superLayout !== void 0 && superLayout !== null && superLayout.width !== null) {\n        width = superLayout.width.pxValue();\n      }\n      if (width === null) {\n        width = this.style.width.pxState();\n      }\n      const edgeInsets = this.edgeInsets.value;\n      const paddingLeft = this.style.paddingLeft.pxState();\n      const paddingRight = this.style.paddingRight.pxState();\n      let left = edgeInsets !== null ? edgeInsets.insetLeft : 0;\n      left += paddingLeft;\n      let right = edgeInsets !== null ? edgeInsets.insetRight : 0;\n      right += paddingRight;\n      const newLayout = oldLayout.resized(width, left, right);\n      this.layout.set(newLayout);\n    }\n  }\n\n  protected processVisibleViews(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    const visibleViews = this.visibleViews;\n    let i = 0;\n    while (i < visibleViews.length) {\n      const child = visibleViews[i]!;\n      processChild.call(this, child, processFlags);\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        child.setFlags(child.flags & ~View.RemovingFlag);\n        this.removeChild(child);\n        continue;\n      }\n      i += 1;\n    }\n  }\n\n  protected override processChildren(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    if (!this.culled) {\n      if ((processFlags & View.NeedsScroll) !== 0) {\n        this.scrollChildren(processFlags, processChild);\n      } else {\n        this.processVisibleViews(processFlags, processChild);\n      }\n    }\n  }\n\n  protected scrollChildren(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    const rowHeight = this.rowHeight.getValue().pxValue();\n    const rowSpacing = this.rowSpacing.getValue().pxValue(rowHeight);\n    const expandingPhase = this.expanding.getPhaseOr(1);\n    const disclosingPhase = this.disclosing.getPhaseOr(1);\n\n    const visibleViews = this.visibleViews as View[];\n    visibleViews.length = 0;\n\n    const visibleFrame = this.detectVisibleFrame();\n    this.visibleFrame.setOutletValue(visibleFrame);\n\n    let yValue = 0;\n    let yState = 0;\n    let rowIndex = 0;\n\n    type self = this;\n    function scrollChild(this: self, child: View, processFlags: ViewFlags): void {\n      if (child instanceof RowView || child instanceof HeaderView) {\n        if (rowIndex !== 0) {\n          if (child instanceof RowView) {\n            yValue += rowSpacing * disclosingPhase * expandingPhase;\n          } else {\n            yValue += rowSpacing * disclosingPhase;\n          }\n          yState += rowSpacing;\n        }\n        if (child.style.top.hasAffinity(Affinity.Intrinsic)) {\n          child.style.top.setInterpolatedValue(Length.px(yValue), Length.px(yState));\n        }\n      }\n      let isVisible: boolean;\n      if (child instanceof HtmlView) {\n        const top = child.style.top.state;\n        const height = child.style.height.state;\n        if (top !== null && height !== null) {\n          const yMin0 = visibleFrame.yMin;\n          const yMax0 = visibleFrame.yMax;\n          const yMin1 = top.pxValue();\n          const yMax1 = yMin1 + height.pxValue();\n          isVisible = disclosingPhase !== 0 && (child instanceof HeaderView || expandingPhase !== 0)\n                   && yMin0 <= yMax1 && yMin1 <= yMax0 && yMin1 !== yMax1;\n          child.style.display.setIntrinsic(isVisible ? \"flex\" : \"none\");\n          child.setCulled(!isVisible);\n        } else {\n          isVisible = true;\n        }\n      } else {\n        isVisible = true;\n      }\n      if (isVisible) {\n        visibleViews.push(child);\n        processChild.call(this, child, processFlags);\n      }\n      if (child instanceof RowView || child instanceof HeaderView) {\n        if (child instanceof RowView) {\n          yValue += child.style.height.pxValue() * disclosingPhase * expandingPhase;\n        } else {\n          yValue += child.style.height.pxValue() * disclosingPhase;\n        }\n        yState += child.style.height.pxState();\n        rowIndex += 1;\n      }\n    }\n    super.processChildren(processFlags, scrollChild);\n  }\n\n  protected displayVisibleViews(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    const visibleViews = this.visibleViews;\n    let i = 0;\n    while (i < visibleViews.length) {\n      const child = visibleViews[i]!;\n      displayChild.call(this, child, displayFlags);\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        child.setFlags(child.flags & ~View.RemovingFlag);\n        this.removeChild(child);\n        continue;\n      }\n      i += 1;\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    if ((displayFlags & View.NeedsLayout) !== 0) {\n      this.layoutChildren(displayFlags, displayChild);\n    } else {\n      this.displayVisibleViews(displayFlags, displayChild);\n    }\n  }\n\n  protected layoutChildren(displayFlags: ViewFlags, displayChild: (this: this, child: View, displayFlags: ViewFlags) => void): void {\n    this.rowHeight.recohere(this.updateTime);\n    this.resizeTable();\n    const layout = this.layout.value;\n    const width = layout !== null ? layout.width : null;\n    const rowHeight = this.rowHeight.getValue().pxValue();\n    const rowSpacing = this.rowSpacing.getValue().pxValue(rowHeight);\n    const expandingPhase = this.expanding.getPhaseOr(1);\n    const disclosurePhase = this.disclosure.getPhaseOr(1);\n    const disclosingPhase = this.disclosing.getPhaseOr(1);\n    const timing = !this.disclosing.tweening ? this.getLook(Look.timing) : null;\n\n    const visibleViews = this.visibleViews as View[];\n    visibleViews.length = 0;\n\n    const visibleFrame = this.detectVisibleFrame();\n    this.visibleFrame.setOutletValue(visibleFrame);\n\n    let yValue = 0;\n    let yState = 0;\n    let rowIndex = 0;\n\n    type self = this;\n    function layoutChild(this: self, child: View, displayFlags: ViewFlags): void {\n      if (child instanceof RowView || child instanceof HeaderView) {\n        if (rowIndex !== 0) {\n          if (child instanceof RowView) {\n            yValue += rowSpacing * disclosingPhase * expandingPhase;\n          } else {\n            yValue += rowSpacing * disclosingPhase;\n          }\n          yState += rowSpacing;\n        }\n        if (child.style.top.hasAffinity(Affinity.Intrinsic)) {\n          if (yValue !== yState || child.style.display.value === \"none\") {\n            child.style.top.setInterpolatedValue(Length.px(yValue), Length.px(yState));\n          } else {\n            child.style.top.setIntrinsic(yState, timing);\n          }\n        }\n        child.style.width.setIntrinsic(width);\n      }\n      let isVisible: boolean;\n      if (child instanceof HtmlView) {\n        const top = child.style.top.state;\n        const height = child.style.height.state;\n        if (top !== null && height !== null) {\n          const yMin0 = visibleFrame.yMin;\n          const yMax0 = visibleFrame.yMax;\n          const yMin1 = top.pxValue();\n          const yMax1 = yMin1 + height.pxValue();\n          isVisible = disclosingPhase !== 0 && (child instanceof HeaderView || expandingPhase !== 0)\n                   && yMin0 <= yMax1 && yMin1 <= yMax0 && yMin1 !== yMax1;\n        } else {\n          isVisible = true;\n        }\n        if (child instanceof RowView) {\n          child.style.opacity.setIntrinsic(disclosurePhase * expandingPhase);\n        } else {\n          child.style.opacity.setIntrinsic(disclosurePhase);\n        }\n        child.style.display.setIntrinsic(isVisible ? \"flex\" : \"none\");\n        child.setCulled(!isVisible);\n      } else {\n        isVisible = true;\n      }\n      if (isVisible) {\n        visibleViews.push(child);\n      }\n      displayChild.call(this, child, displayFlags);\n      if (child instanceof RowView || child instanceof HeaderView) {\n        if (child instanceof RowView) {\n          yValue += child.style.height.pxValue() * disclosingPhase * expandingPhase;\n        } else {\n          yValue += child.style.height.pxValue() * disclosingPhase;\n        }\n        yState += child.style.height.pxState();\n        rowIndex += 1;\n      }\n    }\n    super.displayChildren(displayFlags, layoutChild);\n\n    if (this.style.height.hasAffinity(Affinity.Intrinsic)) {\n      this.style.height.setInterpolatedValue(Length.px(yValue), Length.px(yState));\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport type {Model} from \"@swim/model\";\nimport type {TraitObserver} from \"@swim/model\";\nimport {Trait} from \"@swim/model\";\nimport {TraitRef} from \"@swim/model\";\nimport {TraitSet} from \"@swim/model\";\nimport type {ColLayout} from \"./ColLayout\";\nimport {TableLayout} from \"./TableLayout\";\nimport {RowTrait} from \"./RowTrait\";\nimport {ColTrait} from \"./ColTrait\";\nimport {HeaderTrait} from \"./HeaderTrait\";\n\n/** @public */\nexport interface TableTraitObserver<T extends TableTrait = TableTrait> extends TraitObserver<T> {\n  traitDidSetTableLayout?(tableLayout: TableLayout | null, trait: T): void;\n\n  traitWillAttachHeader?(headerTrait: HeaderTrait, trait: T): void;\n\n  traitDidDetachHeader?(headerTrait: HeaderTrait, trait: T): void;\n\n  traitWillAttachCol?(colTrait: ColTrait, targetTrait: Trait | null, trait: T): void;\n\n  traitDidDetachCol?(colTrait: ColTrait, trait: T): void;\n\n  traitWillAttachRow?(rowTrait: RowTrait, targetTrait: Trait | null, trait: T): void;\n\n  traitDidDetachRow?(rowTrait: RowTrait, trait: T): void;\n}\n\n/** @public */\nexport class TableTrait extends Trait {\n  declare readonly observerType?: Class<TableTraitObserver>;\n\n  protected createLayout(): TableLayout | null {\n    const colLayouts: ColLayout[] = [];\n    const colTraits = this.cols.traits;\n    for (const traitId in colTraits) {\n      const colTrait = colTraits[traitId]!;\n      const colLayout = colTrait.layout.value;\n      if (colLayout !== null) {\n        colLayouts.push(colLayout);\n      }\n    }\n    const colSpacing = this.colSpacing.value;\n    return new TableLayout(null, null, null, colSpacing, colLayouts);\n  }\n\n  protected updateLayout(): void {\n    const layout = this.createLayout();\n    this.layout.setIntrinsic(layout);\n  }\n\n  @Property({\n    valueType: TableLayout,\n    value: null,\n    didSetValue(layout: TableLayout | null): void {\n      this.owner.callObservers(\"traitDidSetTableLayout\", layout, this.owner);\n    },\n  })\n  readonly layout!: Property<this, TableLayout | null>;\n\n  @Property({\n    valueType: Length,\n    value: null,\n    didSetValue(newColSpacing: Length | null, oldColSpacing: Length | null): void {\n      this.owner.updateLayout();\n    },\n  })\n  readonly colSpacing!: Property<this, Length | null>;\n\n  @TraitRef({\n    traitType: HeaderTrait,\n    binds: true,\n    willAttachTrait(headerTrait: HeaderTrait): void {\n      this.owner.callObservers(\"traitWillAttachHeader\", headerTrait, this.owner);\n    },\n    didDetachTrait(headerTrait: HeaderTrait): void {\n      this.owner.callObservers(\"traitDidDetachHeader\", headerTrait, this.owner);\n    },\n    detectTrait(trait: Trait): HeaderTrait | null {\n      return trait instanceof HeaderTrait ? trait : null;\n    },\n  })\n  readonly header!: TraitRef<this, HeaderTrait>;\n\n  @TraitSet({\n    traitType: ColTrait,\n    binds: true,\n    observes: true,\n    willAttachTrait(colTrait: ColTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachCol\", colTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(colTrait: ColTrait): void {\n      this.owner.updateLayout();\n      if (this.owner.consuming) {\n        colTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(colTrait: ColTrait): void {\n      if (this.owner.consuming) {\n        colTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(colTrait: ColTrait): void {\n      this.owner.updateLayout();\n      this.owner.callObservers(\"traitDidDetachCol\", colTrait, this.owner);\n    },\n    traitDidSetLayout(colLayout: ColLayout | null): void {\n      this.owner.updateLayout();\n    },\n    detectModel(model: Model): ColTrait | null {\n      return model.getTrait(ColTrait);\n    },\n  })\n  readonly cols!: TraitSet<this, ColTrait> & Observes<ColTrait>;\n\n  @TraitSet({\n    traitType: RowTrait,\n    binds: true,\n    willAttachTrait(rowTrait: RowTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachRow\", rowTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(rowTrait: RowTrait): void {\n      if (this.owner.consuming) {\n        rowTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(rowTrait: RowTrait): void {\n      if (this.owner.consuming) {\n        rowTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(rowTrait: RowTrait): void {\n      this.owner.callObservers(\"traitDidDetachRow\", rowTrait, this.owner);\n    },\n    detectModel(model: Model): RowTrait | null {\n      return model.getTrait(RowTrait);\n    },\n    detectTrait(trait: Trait): RowTrait | null {\n      return null;\n    },\n  })\n  readonly rows!: TraitSet<this, RowTrait>;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.cols.consumeTraits(this);\n    this.rows.consumeTraits(this);\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.rows.unconsumeTraits(this);\n    this.cols.unconsumeTraits(this);\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {Graphics} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {TableLayout} from \"./TableLayout\";\nimport type {ColLayout} from \"./ColLayout\";\nimport type {CellView} from \"./CellView\";\nimport {TextCellView} from \"./TextCellView\";\nimport type {CellTrait} from \"./CellTrait\";\nimport type {CellController} from \"./CellController\";\nimport type {LeafView} from \"./LeafView\";\nimport type {LeafTrait} from \"./LeafTrait\";\nimport type {RowView} from \"./RowView\";\nimport type {RowTrait} from \"./RowTrait\";\nimport {RowController} from \"./RowController\";\nimport type {ColView} from \"./ColView\";\nimport {TextColView} from \"./TextColView\";\nimport type {ColTrait} from \"./ColTrait\";\nimport {ColController} from \"./ColController\";\nimport type {TextColController} from \"./TextColController\";\nimport type {IconColController} from \"./IconColController\";\nimport type {HeaderView} from \"./HeaderView\";\nimport type {HeaderTrait} from \"./HeaderTrait\";\nimport {HeaderController} from \"./HeaderController\";\nimport {TableView} from \"./TableView\";\nimport {TableTrait} from \"./TableTrait\";\n\n/** @public */\nexport interface TableControllerObserver<C extends TableController = TableController> extends ControllerObserver<C> {\n  controllerWillAttachTableTrait?(tableTrait: TableTrait, controller: C): void;\n\n  controllerDidDetachTableTrait?(tableTrait: TableTrait, controller: C): void;\n\n  controllerDidSetTableLayout?(tableLayout: TableLayout | null, controller: C): void;\n\n  controllerWillAttachTableView?(tableView: TableView, controller: C): void;\n\n  controllerDidDetachTableView?(tableView: TableView, controller: C): void;\n\n  controllerWillExpandTableView?(tableView: TableView, controller: C): void;\n\n  controllerDidExpandTableView?(tableView: TableView, controller: C): void;\n\n  controllerWillCollapseTableView?(tableView: TableView, controller: C): void;\n\n  controllerDidCollapseTableView?(tableView: TableView, controller: C): void;\n\n  controllerWillAttachHeader?(headerController: HeaderController, controller: C): void;\n\n  controllerDidDetachHeader?(headerController: HeaderController, controller: C): void;\n\n  controllerWillAttachHeaderTrait?(headerTrait: HeaderTrait, controller: C): void;\n\n  controllerDidDetachHeaderTrait?(headerTrait: HeaderTrait, controller: C): void;\n\n  controllerWillAttachHeaderView?(headerView: HeaderView, controller: C): void;\n\n  controllerDidDetachHeaderView?(headerView: HeaderView, controller: C): void;\n\n  controllerDidPressHeaderView?(input: PositionGestureInput, event: Event | null, headerView: HeaderView, controller: C): void;\n\n  controllerDidLongPressHeaderView?(input: PositionGestureInput, headerView: HeaderView, controller: C): void;\n\n  controllerWillAttachCol?(colController: ColController, controller: C): void;\n\n  controllerDidDetachCol?(colController: ColController, controller: C): void;\n\n  controllerWillAttachColTrait?(colTrait: ColTrait, colController: ColController, controller: C): void;\n\n  controllerDidDetachColTrait?(colTrait: ColTrait, colController: ColController, controller: C): void;\n\n  controllerDidSetColLayout?(colLayout: ColLayout | null, colController: ColController, controller: C): void;\n\n  controllerWillAttachColView?(colView: ColView, colController: ColController, controller: C): void;\n\n  controllerDidDetachColView?(colView: ColView, colController: ColController, controller: C): void;\n\n  controllerDidPressColView?(input: PositionGestureInput, event: Event | null, colView: ColView, colController: ColController, controller: C): void;\n\n  controllerDidLongPressColView?(input: PositionGestureInput, colView: ColView, colController: ColController, controller: C): void;\n\n  controllerWillAttachColLabelView?(colLabelView: HtmlView, colController: ColController, controller: C): void;\n\n  controllerDidDetachColLabelView?(colLabelView: HtmlView, colController: ColController, controller: C): void;\n\n  controllerDidSetColIcon?(colIcon: Graphics | null, colController: ColController, controller: C): void;\n\n  controllerWillAttachRow?(rowController: RowController, controller: C): void;\n\n  controllerDidDetachRow?(rowController: RowController, controller: C): void;\n\n  controllerWillAttachRowTrait?(rowTrait: RowTrait, rowController: RowController, controller: C): void;\n\n  controllerDidDetachRowTrait?(rowTrait: RowTrait, rowController: RowController, controller: C): void;\n\n  controllerWillAttachRowView?(rowView: RowView, rowController: RowController, controller: C): void;\n\n  controllerDidDetachRowView?(rowView: RowView, rowController: RowController, controller: C): void;\n\n  controllerWillAttachLeafTrait?(leafTrait: LeafTrait, rowController: RowController, controller: C): void;\n\n  controllerDidDetachLeafTrait?(leafTrait: LeafTrait, rowController: RowController, controller: C): void;\n\n  controllerWillAttachLeafView?(leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerDidDetachLeafView?(leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerWillHighlightLeafView?(leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerDidHighlightLeafView?(leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerWillUnhighlightLeafView?(leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerDidUnhighlightLeafView?(leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerDidEnterLeafView?(leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerDidLeaveLeafView?(leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerDidPressLeafView?(input: PositionGestureInput, event: Event | null, leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerDidLongPressLeafView?(input: PositionGestureInput, leafView: LeafView, rowController: RowController, controller: C): void;\n\n  controllerWillAttachCell?(cellController: CellController, rowController: RowController, controller: C): void;\n\n  controllerDidDetachCell?(cellController: CellController, rowController: RowController, controller: C): void;\n\n  controllerWillAttachCellTrait?(cellTrait: CellTrait, cellController: CellController, rowController: RowController, controller: C): void;\n\n  controllerDidDetachCellTrait?(cellTrait: CellTrait, cellController: CellController, rowController: RowController, controller: C): void;\n\n  controllerWillAttachCellView?(cellView: CellView, cellController: CellController, rowController: RowController, controller: C): void;\n\n  controllerDidDetachCellView?(cellView: CellView, cellController: CellController, rowController: RowController, controller: C): void;\n\n  controllerWillAttachCellContentView?(cellContentView: HtmlView, cellController: CellController, rowController: RowController, controller: C): void;\n\n  controllerDidDetachCellContentView?(cellContentView: HtmlView, cellController: CellController, rowController: RowController, controller: C): void;\n\n  controllerDidSetCellIcon?(cellIcon: Graphics | null, cellController: CellController, rowController: RowController, controller: C): void;\n\n  controllerWillAttachTree?(treeController: TableController, rowController: RowController, controller: C): void;\n\n  controllerDidDetachTree?(treeController: TableController, rowController: RowController, controller: C): void;\n\n  controllerWillAttachTreeTrait?(treeTrait: TableTrait, treeController: TableController, rowController: RowController, controller: C): void;\n\n  controllerDidDetachTreeTrait?(treeTrait: TableTrait, treeController: TableController, rowController: RowController, controller: C): void;\n\n  controllerWillAttachTreeView?(treeView: TableView, treeController: TableController, rowController: RowController, controller: C): void;\n\n  controllerDidDetachTreeView?(treeView: TableView, treeController: TableController, rowController: RowController, controller: C): void;\n\n  controllerWillExpandRowView?(rowView: RowView, rowController: RowController, controller: C): void;\n\n  controllerDidExpandRowView?(rowView: RowView, rowController: RowController, controller: C): void;\n\n  controllerWillCollapseRowView?(rowView: RowView, rowController: RowController, controller: C): void;\n\n  controllerDidCollapseRowView?(rowView: RowView, rowController: RowController, controller: C): void;\n}\n\n/** @public */\nexport class TableController extends Controller {\n  declare readonly observerType?: Class<TableControllerObserver>;\n\n  protected layoutTable(tableLayout: TableLayout, tableView: TableView): void {\n    tableView.layout.setIntrinsic(tableLayout);\n  }\n\n  @TraitViewRef({\n    traitType: TableTrait,\n    observesTrait: true,\n    willAttachTrait(tableTrait: TableTrait): void {\n      this.owner.callObservers(\"controllerWillAttachTableTrait\", tableTrait, this.owner);\n    },\n    didAttachTrait(tableTrait: TableTrait): void {\n      const headerTrait = tableTrait.header.trait;\n      if (headerTrait !== null) {\n        this.owner.header.setTrait(headerTrait);\n      }\n      const colTraits = tableTrait.cols.traits;\n      for (const traitId in colTraits) {\n        const colTrait = colTraits[traitId]!;\n        this.owner.cols.addTrait(colTrait, null, colTrait.key);\n      }\n      this.owner.rows.addTraits(tableTrait.rows.traits);\n      const tableView = this.view;\n      if (tableView !== null) {\n        const tableLayout = tableTrait.layout.value;\n        if (tableLayout !== null) {\n          this.owner.layoutTable(tableLayout, tableView);\n        }\n      }\n    },\n    willDetachTrait(tableTrait: TableTrait): void {\n      this.owner.rows.deleteTraits(tableTrait.rows.traits);\n      this.owner.cols.deleteTraits(tableTrait.cols.traits);\n      const headerTrait = tableTrait.header.trait;\n      if (headerTrait !== null) {\n        this.owner.header.deleteTrait(headerTrait);\n      }\n    },\n    didDetachTrait(tableTrait: TableTrait): void {\n      this.owner.callObservers(\"controllerDidDetachTableTrait\", tableTrait, this.owner);\n    },\n    traitDidSetTableLayout(tableLayout: TableLayout | null): void {\n      this.owner.callObservers(\"controllerDidSetTableLayout\", tableLayout, this.owner);\n    },\n    traitWillAttachHeader(headerTrait: HeaderTrait): void {\n      this.owner.header.setTrait(headerTrait);\n    },\n    traitDidDetachHeader(headerTrait: HeaderTrait): void {\n      this.owner.header.deleteTrait(headerTrait);\n    },\n    traitWillAttachCol(colTrait: ColTrait, targetTrait: Trait): void {\n      this.owner.cols.addTrait(colTrait, targetTrait, colTrait.key);\n    },\n    traitDidDetachCol(colTrait: ColTrait): void {\n      this.owner.cols.deleteTrait(colTrait);\n    },\n    traitWillAttachRow(rowTrait: RowTrait, targetTrait: Trait): void {\n      this.owner.rows.addTrait(rowTrait, targetTrait);\n    },\n    traitDidDetachRow(rowTrait: RowTrait): void {\n      this.owner.rows.deleteTrait(rowTrait);\n    },\n    viewType: TableView,\n    observesView: true,\n    initView(tableView: TableView): void {\n      const headerController = this.owner.header.controller;\n      if (headerController !== null) {\n        headerController.header.insertView(tableView);\n        if (tableView.header.view === null) {\n          tableView.header.setView(headerController.header.view);\n        }\n      }\n      const rowControllers = this.owner.rows.controllers;\n      for (const controllerId in rowControllers) {\n        const rowController = rowControllers[controllerId]!;\n        const rowView = rowController.row.view;\n        if (rowView !== null && rowView.parent === null) {\n          const targetView = this.owner.rows.getTargetView(rowController);\n          rowController.row.insertView(tableView, void 0, targetView);\n        }\n      }\n      const tableTrait = this.trait;\n      if (tableTrait !== null) {\n        const tableLayout = tableTrait.layout.value;\n        if (tableLayout !== null) {\n          this.owner.layoutTable(tableLayout, tableView);\n        }\n      }\n    },\n    willAttachView(tableView: TableView): void {\n      this.owner.callObservers(\"controllerWillAttachTableView\", tableView, this.owner);\n    },\n    didDetachView(tableView: TableView): void {\n      this.owner.callObservers(\"controllerDidDetachTableView\", tableView, this.owner);\n    },\n    viewWillAttachHeader(headerView: HeaderView): void {\n      const headerController = this.owner.header.controller;\n      if (headerController !== null) {\n        headerController.header.setView(headerView);\n      }\n    },\n    viewDidDetachHeader(headerView: HeaderView): void {\n      const headerController = this.owner.header.controller;\n      if (headerController !== null) {\n        headerController.header.setView(null);\n      }\n    },\n    viewWillExpand(tableView: TableView): void {\n      this.owner.callObservers(\"controllerWillExpandTableView\", tableView, this.owner);\n    },\n    viewDidExpand(tableView: TableView): void {\n      this.owner.callObservers(\"controllerDidExpandTableView\", tableView, this.owner);\n    },\n    viewWillCollapse(tableView: TableView): void {\n      this.owner.callObservers(\"controllerWillCollapseTableView\", tableView, this.owner);\n    },\n    viewDidCollapse(tableView: TableView): void {\n      this.owner.callObservers(\"controllerDidCollapseTableView\", tableView, this.owner);\n    },\n  })\n  readonly table!: TraitViewRef<this, TableTrait, TableView> & Observes<TableTrait> & Observes<TableView>;\n\n  @TraitViewControllerRef({\n    controllerType: HeaderController,\n    binds: true,\n    observes: true,\n    get parentView(): TableView | null {\n      return this.owner.table.view;\n    },\n    getTraitViewRef(headerController: HeaderController): TraitViewRef<unknown, HeaderTrait, HeaderView> {\n      return headerController.header;\n    },\n    initController(headerController: HeaderController): void {\n      const tableTrait = this.owner.table.trait;\n      if (tableTrait !== null) {\n        const headerTrait = tableTrait.header.trait;\n        if (headerTrait !== null) {\n          headerController.header.setTrait(headerTrait);\n        }\n      }\n    },\n    willAttachController(headerController: HeaderController): void {\n      this.owner.callObservers(\"controllerWillAttachHeader\", headerController, this.owner);\n    },\n    didAttachController(headerController: HeaderController): void {\n      const headerTrait = headerController.header.trait;\n      if (headerTrait !== null) {\n        this.attachHeaderTrait(headerTrait, headerController);\n      }\n      const headerView = headerController.header.view;\n      if (headerView !== null) {\n        this.attachHeaderView(headerView, headerController);\n      }\n    },\n    willDetachController(headerController: HeaderController): void {\n      const headerView = headerController.header.view;\n      if (headerView !== null) {\n        this.detachHeaderView(headerView, headerController);\n      }\n      const headerTrait = headerController.header.trait;\n      if (headerTrait !== null) {\n        this.detachHeaderTrait(headerTrait, headerController);\n      }\n    },\n    didDetachController(headerController: HeaderController): void {\n      this.owner.callObservers(\"controllerDidDetachHeader\", headerController, this.owner);\n    },\n    controllerWillAttachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void {\n      this.owner.callObservers(\"controllerWillAttachHeaderTrait\", headerTrait, this.owner);\n      this.attachHeaderTrait(headerTrait, headerController);\n    },\n    controllerDidDetachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void {\n      this.detachHeaderTrait(headerTrait, headerController);\n      this.owner.callObservers(\"controllerDidDetachHeaderTrait\", headerTrait, this.owner);\n    },\n    attachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void {\n      // hook\n    },\n    detachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void {\n      // hook\n    },\n    controllerWillAttachHeaderView(headerView: HeaderView, headerController: HeaderController): void {\n      this.owner.callObservers(\"controllerWillAttachHeaderView\", headerView, this.owner);\n      this.attachHeaderView(headerView, headerController);\n    },\n    controllerDidDetachHeaderView(headerView: HeaderView, headerController: HeaderController): void {\n      this.detachHeaderView(headerView, headerController);\n      this.owner.callObservers(\"controllerDidDetachHeaderView\", headerView, this.owner);\n    },\n    attachHeaderView(headerView: HeaderView, headerController: HeaderController): void {\n      const tableView = this.owner.table.view;\n      if (tableView !== null && tableView.header.view === null) {\n        tableView.header.setView(headerView);\n      }\n    },\n    detachHeaderView(headerView: HeaderView, headerController: HeaderController): void {\n      headerView.remove();\n    },\n    controllerDidPressHeaderView(input: PositionGestureInput, event: Event | null, headerView: HeaderView): void {\n      this.owner.callObservers(\"controllerDidPressHeaderView\", input, event, headerView, this.owner);\n    },\n    controllerDidLongPressHeaderView(input: PositionGestureInput, headerView: HeaderView): void {\n      this.owner.callObservers(\"controllerDidLongPressHeaderView\", input, headerView, this.owner);\n    },\n    detectController(controller: Controller): HeaderController | null {\n      return controller instanceof HeaderController ? controller : null;\n    },\n  })\n  readonly header!: TraitViewControllerRef<this, HeaderTrait, HeaderView, HeaderController> & Observes<HeaderController> & {\n    attachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void;\n    detachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void;\n    attachHeaderView(headerView: HeaderView, headerController: HeaderController): void;\n    detachHeaderView(headerView: HeaderView, headerController: HeaderController): void;\n  };\n\n  @TraitViewControllerSet({\n    controllerType: ColController,\n    binds: true,\n    observes: true,\n    getTraitViewRef(colController: ColController): TraitViewRef<unknown, ColTrait, ColView> {\n      return colController.col;\n    },\n    willAttachController(colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachCol\", colController, this.owner);\n    },\n    didAttachController(colController: ColController): void {\n      const colTrait = colController.col.trait;\n      if (colTrait !== null) {\n        this.attachColTrait(colTrait, colController);\n      }\n      const colView = colController.col.view;\n      if (colView !== null) {\n        this.attachColView(colView, colController);\n      }\n    },\n    willDetachController(colController: ColController): void {\n      const colTrait = colController.col.trait;\n      if (colTrait !== null) {\n        this.detachColTrait(colTrait, colController);\n      }\n      const colView = colController.col.view;\n      if (colView !== null) {\n        this.detachColView(colView, colController);\n      }\n    },\n    didDetachController(colController: ColController): void {\n      this.owner.callObservers(\"controllerDidDetachCol\", colController, this.owner);\n    },\n    controllerWillAttachColTrait(colTrait: ColTrait, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColTrait\", colTrait, colController, this.owner);\n      this.attachColTrait(colTrait, colController);\n    },\n    controllerDidDetachColTrait(colTrait: ColTrait, colController: ColController): void {\n      this.detachColTrait(colTrait, colController);\n      this.owner.callObservers(\"controllerDidDetachColTrait\", colTrait, colController, this.owner);\n    },\n    attachColTrait(colTrait: ColTrait, colController: ColController): void {\n      // hook\n    },\n    detachColTrait(colTrait: ColTrait, colController: ColController): void {\n      // hook\n    },\n    controllerDidSetColLayout(colLayout: ColLayout | null, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidSetColLayout\", colLayout, colController, this.owner);\n    },\n    controllerWillAttachColView(colView: ColView, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColView\", colView, colController, this.owner);\n      this.attachColView(colView, colController);\n    },\n    controllerDidDetachColView(colView: ColView, colController: ColController): void {\n      this.detachColView(colView, colController);\n      this.owner.callObservers(\"controllerDidDetachColView\", colView, colController, this.owner);\n    },\n    attachColView(colView: ColView, colController: ColController): void {\n      if (colView instanceof TextColView) {\n        const colLabelView = colView.label.view;\n        if (colLabelView !== null) {\n          this.attachColLabelView(colLabelView, colController);\n        }\n      }\n    },\n    detachColView(colView: ColView, colController: ColController): void {\n      if (colView instanceof TextColView) {\n        const colLabelView = colView.label.view;\n        if (colLabelView !== null) {\n          this.detachColLabelView(colLabelView, colController);\n        }\n      }\n      colView.remove();\n    },\n    controllerDidPressColView(input: PositionGestureInput, event: Event | null, colView: ColView, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidPressColView\", input, event, colView, colController, this.owner);\n    },\n    controllerDidLongPressColView(input: PositionGestureInput, colView: ColView, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidLongPressColView\", input, colView, colController, this.owner);\n    },\n    controllerWillAttachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColLabelView\", colLabelView, colController, this.owner);\n      this.attachColLabelView(colLabelView, colController);\n    },\n    controllerDidDetachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      this.detachColLabelView(colLabelView, colController);\n      this.owner.callObservers(\"controllerDidDetachColLabelView\", colLabelView, colController, this.owner);\n    },\n    attachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      // hook\n    },\n    detachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      // hook\n    },\n    controllerDidSetColIcon(colIcon: Graphics | null, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidSetColIcon\", colIcon, colController, this.owner);\n    },\n  })\n  readonly cols!: TraitViewControllerSet<this, ColTrait, ColView, ColController> & Observes<ColController> & Observes<TextColController> & Observes<IconColController> & {\n    attachColTrait(colTrait: ColTrait, colController: ColController): void;\n    detachColTrait(colTrait: ColTrait, colController: ColController): void;\n    attachColView(colView: ColView, colController: ColController): void;\n    detachColView(colView: ColView, colController: ColController): void;\n    attachColLabelView(colLabelView: HtmlView, colController: ColController): void;\n    detachColLabelView(colLabelView: HtmlView, colController: ColController): void;\n  };\n\n  @TraitViewControllerSet({\n    controllerType: RowController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.table.view;\n    },\n    getTraitViewRef(rowController: RowController): TraitViewRef<unknown, RowTrait, RowView> {\n      return rowController.row;\n    },\n    willAttachController(rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachRow\", rowController, this.owner);\n    },\n    didAttachController(rowController: RowController): void {\n      const rowTrait = rowController.row.trait;\n      if (rowTrait !== null) {\n        this.attachRowTrait(rowTrait, rowController);\n      }\n      const rowView = rowController.row.view;\n      if (rowView !== null) {\n        this.attachRowView(rowView, rowController);\n      }\n    },\n    willDetachController(rowController: RowController): void {\n      const rowView = rowController.row.view;\n      if (rowView !== null) {\n        this.detachRowView(rowView, rowController);\n      }\n      const rowTrait = rowController.row.trait;\n      if (rowTrait !== null) {\n        this.detachRowTrait(rowTrait, rowController);\n      }\n    },\n    didDetachController(rowController: RowController): void {\n      this.owner.callObservers(\"controllerDidDetachRow\", rowController, this.owner);\n    },\n    controllerDidAttachParent(parent: Controller, rowController: RowController): void {\n      const tableView = this.owner.table.view;\n      const rowView = rowController.row.view;\n      if (tableView !== null && rowView !== null) {\n        const targetController = rowController.getNextSibling(RowController);\n        const targetView = targetController !== null ? targetController.row.view : null;\n        tableView.reinsertChild(rowView, targetView);\n        //tableView.requireUpdate(View.NeedsScroll | View.NeedsLayout);\n      }\n    },\n    controllerWillAttachRowTrait(rowTrait: RowTrait, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachRowTrait\", rowTrait, rowController, this.owner);\n      this.attachRowTrait(rowTrait, rowController);\n    },\n    controllerDidDetachRowTrait(rowTrait: RowTrait, rowController: RowController): void {\n      this.detachRowTrait(rowTrait, rowController);\n      this.owner.callObservers(\"controllerDidDetachRowTrait\", rowTrait, rowController, this.owner);\n    },\n    attachRowTrait(rowTrait: RowTrait, rowController: RowController): void {\n      // hook\n    },\n    detachRowTrait(rowTrait: RowTrait, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachRowView\", rowView, rowController, this.owner);\n      this.attachRowView(rowView, rowController);\n    },\n    controllerDidDetachRowView(rowView: RowView, rowController: RowController): void {\n      this.detachRowView(rowView, rowController);\n      this.owner.callObservers(\"controllerDidDetachRowView\", rowView, rowController, this.owner);\n    },\n    attachRowView(rowView: RowView, rowController: RowController): void {\n      // hook\n    },\n    detachRowView(rowView: RowView, rowController: RowController): void {\n      rowView.remove();\n    },\n    controllerWillAttachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachLeafTrait\", leafTrait, rowController, this.owner);\n      this.attachLeafTrait(leafTrait, rowController);\n    },\n    controllerDidDetachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void {\n      this.detachLeafTrait(leafTrait, rowController);\n      this.owner.callObservers(\"controllerDidDetachLeafTrait\", leafTrait, rowController, this.owner);\n    },\n    attachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void {\n      // hook\n    },\n    detachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachLeafView(leafView: LeafView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachLeafView\", leafView, rowController, this.owner);\n      this.attachLeafView(leafView, rowController);\n    },\n    controllerDidDetachLeafView(leafView: LeafView, rowController: RowController): void {\n      this.detachLeafView(leafView, rowController);\n      this.owner.callObservers(\"controllerDidDetachLeafView\", leafView, rowController, this.owner);\n    },\n    attachLeafView(leafView: LeafView, rowController: RowController): void {\n      // hook\n    },\n    detachLeafView(leafView: LeafView, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachCell(cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachCell\", cellController, rowController, this.owner);\n      this.attachCell(cellController, rowController);\n    },\n    controllerDidDetachCell(cellController: CellController, rowController: RowController): void {\n      this.detachCell(cellController, rowController);\n      this.owner.callObservers(\"controllerDidDetachCell\", cellController, rowController, this.owner);\n    },\n    attachCell(cellController: CellController, rowController: RowController): void {\n      const cellTrait = cellController.cell.trait;\n      if (cellTrait !== null) {\n        this.attachCellTrait(cellTrait, cellController, rowController);\n      }\n      const cellView = cellController.cell.view;\n      if (cellView !== null) {\n        this.attachCellView(cellView, cellController, rowController);\n      }\n    },\n    detachCell(cellController: CellController, rowController: RowController): void {\n      const cellTrait = cellController.cell.trait;\n      if (cellTrait !== null) {\n        this.detachCellTrait(cellTrait, cellController, rowController);\n      }\n      const cellView = cellController.cell.view;\n      if (cellView !== null) {\n        this.detachCellView(cellView, cellController, rowController);\n      }\n    },\n    controllerWillAttachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachCellTrait\", cellTrait, cellController, rowController, this.owner);\n      this.attachCellTrait(cellTrait, cellController, rowController);\n    },\n    controllerDidDetachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void {\n      this.detachCellTrait(cellTrait, cellController, rowController);\n      this.owner.callObservers(\"controllerDidDetachCellTrait\", cellTrait, cellController, rowController, this.owner);\n    },\n    attachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void {\n      // hook\n    },\n    detachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachCellView\", cellView, cellController, rowController, this.owner);\n      this.attachCellView(cellView, cellController, rowController);\n    },\n    controllerDidDetachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void {\n      this.detachCellView(cellView, cellController, rowController);\n      this.owner.callObservers(\"controllerDidDetachCellView\", cellView, cellController, rowController, this.owner);\n    },\n    attachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void {\n      if (cellView instanceof TextCellView) {\n        const cellContentView = cellView.content.view;\n        if (cellContentView !== null) {\n          this.attachCellContentView(cellContentView, cellController, rowController);\n        }\n      }\n    },\n    detachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void {\n      if (cellView instanceof TextCellView) {\n        const cellContentView = cellView.content.view;\n        if (cellContentView !== null) {\n          this.detachCellContentView(cellContentView, cellController, rowController);\n        }\n      }\n    },\n    controllerWillAttachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachCellContentView\", cellContentView, cellController, rowController, this.owner);\n      this.attachCellContentView(cellContentView, cellController, rowController);\n    },\n    controllerDidDetachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void {\n      this.detachCellContentView(cellContentView, cellController, rowController);\n      this.owner.callObservers(\"controllerDidDetachCellContentView\", cellContentView, cellController, rowController, this.owner);\n    },\n    attachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void {\n      // hook\n    },\n    detachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void {\n      // hook\n    },\n    controllerDidSetCellIcon(cellIcon: Graphics | null, cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerDidSetCellIcon\", cellIcon, cellController, rowController, this.owner);\n    },\n    controllerWillAttachTree(treeController: TableController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachTree\", treeController, rowController, this.owner);\n      this.attachTree(treeController, rowController);\n    },\n    controllerDidDetachTree(treeController: TableController, rowController: RowController): void {\n      this.detachTree(treeController, rowController);\n      this.owner.callObservers(\"controllerDidDetachTree\", treeController, rowController, this.owner);\n    },\n    attachTree(treeController: TableController, rowController: RowController): void {\n      const treeTrait = treeController.table.trait;\n      if (treeTrait !== null) {\n        this.attachTreeTrait(treeTrait, treeController, rowController);\n      }\n      const treeView = treeController.table.view;\n      if (treeView !== null) {\n        this.attachTreeView(treeView, treeController, rowController);\n      }\n    },\n    detachTree(treeController: TableController, rowController: RowController): void {\n      const treeTrait = treeController.table.trait;\n      if (treeTrait !== null) {\n        this.detachTreeTrait(treeTrait, treeController, rowController);\n      }\n      const treeView = treeController.table.view;\n      if (treeView !== null) {\n        this.detachTreeView(treeView, treeController, rowController);\n      }\n    },\n    controllerWillAttachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachTreeTrait\", treeTrait, treeController, rowController, this.owner);\n      this.attachTreeTrait(treeTrait, treeController, rowController);\n    },\n    controllerDidDetachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void {\n      this.detachTreeTrait(treeTrait, treeController, rowController);\n      this.owner.callObservers(\"controllerDidDetachTreeTrait\", treeTrait, treeController, rowController, this.owner);\n    },\n    attachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void {\n      // hook\n    },\n    detachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachTreeView\", treeView, treeController, rowController, this.owner);\n      this.attachTreeView(treeView, treeController, rowController);\n    },\n    controllerDidDetachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void {\n      this.detachTreeView(treeView, treeController, rowController);\n      this.owner.callObservers(\"controllerDidDetachTreeView\", treeView, treeController, rowController, this.owner);\n    },\n    attachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void {\n      // hook\n    },\n    detachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void {\n      // hook\n    },\n    controllerWillExpandRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillExpandRowView\", rowView, rowController, this.owner);\n    },\n    controllerDidExpandRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerDidExpandRowView\", rowView, rowController, this.owner);\n    },\n    controllerWillCollapseRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillCollapseRowView\", rowView, rowController, this.owner);\n    },\n    controllerDidCollapseRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerDidCollapseRowView\", rowView, rowController, this.owner);\n    },\n  })\n  readonly rows!: TraitViewControllerSet<this, RowTrait, RowView, RowController> & Observes<RowController> & {\n    attachRowTrait(rowTrait: RowTrait, rowController: RowController): void;\n    detachRowTrait(rowTrait: RowTrait, rowController: RowController): void;\n    attachRowView(rowView: RowView, rowController: RowController): void;\n    detachRowView(rowView: RowView, rowController: RowController): void;\n    attachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void;\n    detachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void;\n    attachLeafView(leafView: LeafView, rowController: RowController): void;\n    detachLeafView(leafView: LeafView, rowController: RowController): void;\n    attachCell(cellController: CellController, rowController: RowController): void;\n    detachCell(cellController: CellController, rowController: RowController): void;\n    attachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void;\n    detachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void;\n    attachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void;\n    detachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void;\n    attachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void;\n    detachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void;\n    attachTree(treeController: TableController, rowController: RowController): void;\n    detachTree(treeController: TableController, rowController: RowController): void;\n    attachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void;\n    detachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void;\n    attachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void;\n    detachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void;\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Animator} from \"@swim/component\";\nimport {EventHandler} from \"@swim/component\";\nimport {Provider} from \"@swim/component\";\nimport type {Service} from \"@swim/component\";\nimport {Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {ModalService} from \"@swim/dom\";\n\n/** @public */\nexport class ScrimView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.displayState = ScrimView.HiddenState;\n    this.initScrim();\n  }\n\n  protected initScrim(): void {\n    this.setIntrinsic<ScrimView>({\n      classList: [\"scrim\"],\n      style: {\n        display: \"none\",\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        pointerEvents: \"auto\",\n        cursor: \"pointer\",\n        backgroundColor: Color.black(0),\n      },\n    });\n  }\n\n  /** @internal */\n  readonly displayState: number;\n\n  /** @internal */\n  setDisplayState(displayState: number): void {\n    (this as Mutable<this>).displayState = displayState;\n  }\n\n  @Animator({\n    inherits: true,\n    get parent(): Animator<any, Color | null, any> {\n      return this.owner.style.backgroundColor;\n    },\n    willTransition(): void {\n      const displayState = this.owner.displayState;\n      if (displayState === ScrimView.ShowState) {\n        this.owner.willShowScrim();\n      } else if (displayState === ScrimView.HideState) {\n        this.owner.willHideScrim();\n      }\n    },\n    didTransition(): void {\n      const displayState = this.owner.displayState;\n      if (displayState === ScrimView.ShowingState) {\n        this.owner.didShowScrim();\n      } else if (displayState === ScrimView.HidingState) {\n        this.owner.didHideScrim();\n      }\n    },\n  })\n  readonly backgroundColor!: Animator<this, Color | null>;\n\n  isShown(): boolean {\n    switch (this.displayState) {\n      case ScrimView.ShownState:\n      case ScrimView.ShowingState:\n      case ScrimView.ShowState: return true;\n      default: return false;\n    }\n  }\n\n  isHidden(): boolean {\n    switch (this.displayState) {\n      case ScrimView.HiddenState:\n      case ScrimView.HidingState:\n      case ScrimView.HideState: return true;\n      default: return false;\n    }\n  }\n\n  show(opacity: number, timing?: TimingLike | boolean): void {\n    if (this.isHidden()) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      this.setDisplayState(ScrimView.ShowState);\n      if (timing !== false) {\n        this.style.backgroundColor.setIntrinsic(Color.black(0));\n        this.style.backgroundColor.setIntrinsic(Color.black(opacity), timing);\n      } else {\n        this.willShowScrim();\n        this.style.backgroundColor.setIntrinsic(Color.black(opacity));\n        this.didShowScrim();\n      }\n    }\n  }\n\n  protected willShowScrim(): void {\n    this.setDisplayState(ScrimView.ShowingState);\n\n    this.style.display.setIntrinsic(\"block\");\n  }\n\n  protected didShowScrim(): void {\n    this.setDisplayState(ScrimView.ShownState);\n  }\n\n  hide(timing?: TimingLike | boolean): void {\n    if (this.isShown()) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromLike(timing);\n      }\n      this.setDisplayState(ScrimView.HideState);\n      if (timing !== false) {\n        this.style.backgroundColor.setIntrinsic(Color.black(0), timing);\n      } else {\n        this.willHideScrim();\n        this.style.backgroundColor.setIntrinsic(Color.black(0));\n        this.didHideScrim();\n      }\n    }\n  }\n\n  protected willHideScrim(): void {\n    this.setDisplayState(ScrimView.HidingState);\n  }\n\n  protected didHideScrim(): void {\n    this.setDisplayState(ScrimView.HiddenState);\n\n    this.style.display.setIntrinsic(\"none\");\n  }\n\n  @Provider({\n    extends: true,\n    observes: true,\n    didAttachService(service: ModalService, target: Service | null): void {\n      this.owner.serviceDidSetModality(service.modality.value, 0, service);\n      super.didAttachService(service, target);\n    },\n    willDetachService(service: ModalService): void {\n      super.willDetachService(service);\n      this.owner.hide(false);\n    },\n  })\n  override get modal(): Provider<this, ModalService> & HtmlView[\"modal\"] & Observes<ModalService> {\n    return Provider.getter();\n  }\n\n  serviceDidSetModality(newModality: number, oldModality: number, modalService: ModalService): void {\n    if (newModality !== 0) {\n      const opacity = 0.5 * newModality;\n      if (oldModality === 0) {\n        this.show(opacity);\n      } else {\n        this.style.backgroundColor.setIntrinsic(Color.black(opacity));\n        if (this.displayState === ScrimView.ShowingState) {\n          this.didShowScrim();\n        }\n      }\n    } else {\n      this.hide();\n    }\n  }\n\n  @EventHandler({\n    initEventType(): string {\n      if (typeof PointerEvent !== \"undefined\") {\n        return \"pointerup\";\n      } else if (typeof TouchEvent !== \"undefined\") {\n        return \"touchend\";\n      }\n      return \"click\";\n    },\n    handle(event: Event): void {\n      const modalService = this.owner.modal.service;\n      if (modalService !== null) {\n        modalService.displaceModals();\n      }\n    },\n  })\n  readonly click!: EventHandler<this>;\n\n  @EventHandler({\n    eventType: \"click\",\n    enabled: typeof PointerEvent !== \"undefined\"\n          || typeof TouchEvent !== \"undefined\",\n    handle(event: Event): void {\n      event.preventDefault();\n      event.stopPropagation();\n    },\n  })\n  readonly syntheticClick!: EventHandler<this>;\n\n  /** @internal */\n  static readonly HiddenState: number = 0;\n  /** @internal */\n  static readonly HidingState: number = 1;\n  /** @internal */\n  static readonly HideState: number = 2;\n  /** @internal */\n  static readonly ShownState: number = 3;\n  /** @internal */\n  static readonly ShowingState: number = 4;\n  /** @internal */\n  static readonly ShowState: number = 5;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Arrays} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {Animator} from \"@swim/component\";\nimport {EventHandler} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport type {R2BoxLike} from \"@swim/math\";\nimport {R2Box} from \"@swim/math\";\nimport {Color} from \"@swim/style\";\nimport {Presence} from \"@swim/style\";\nimport {PresenceAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {ModalViewObserver} from \"@swim/dom\";\nimport type {ModalView} from \"@swim/dom\";\n\n/** @public */\nexport type PopoverPlacement = \"none\" | \"above\" | \"below\" | \"over\" | \"top\" | \"bottom\" | \"right\" | \"left\";\n\n/** @public */\nexport interface PopoverViewObserver<V extends PopoverView = PopoverView> extends HtmlViewObserver<V>, ModalViewObserver<V> {\n  popoverWillAttachSource?(sourceView: View, view: V): void;\n\n  popoverDidDetachSource?(sourceView: View, view: V): void;\n\n  popoverWillPlace?(placement: PopoverPlacement, view: V): void;\n\n  popoverDidPlace?(placement: PopoverPlacement, view: V): void;\n}\n\n/** @public */\nexport class PopoverView extends HtmlView implements ModalView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.sourceFrame = null;\n    this.currentPlacement = \"none\";\n    this.initArrow();\n  }\n\n  declare readonly observerType?: Class<PopoverViewObserver>;\n\n  protected initArrow(): void {\n    const arrow = this.createArrow();\n    if (arrow !== null) {\n      this.prependChild(arrow, \"arrow\");\n    }\n  }\n\n  protected createArrow(): HtmlView | null {\n    return HtmlView.fromTag(\"div\").setIntrinsic({\n      classList: [\"popover-arrow\"],\n      style: {\n        display: \"none\",\n        position: \"absolute\",\n        width: 0,\n        height: 0,\n      },\n    });\n  }\n\n  @Animator({\n    inherits: true,\n    get parent(): Animator<any, Color | null, any> {\n      return this.owner.style.backgroundColor;\n    },\n    didSetValue(backgroundColor: Color): void {\n      this.owner.place();\n    },\n  })\n  readonly backgroundColor!: Animator<this, Color | null>;\n\n  @ThemeAnimator({valueType: Length, value: Length.zero()})\n  readonly placementGap!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(10)})\n  readonly arrowWidth!: ThemeAnimator<this, Length>;\n\n  @ThemeAnimator({valueType: Length, value: Length.px(8)})\n  readonly arrowHeight!: ThemeAnimator<this, Length>;\n\n  @ViewRef({\n    observes: true,\n    willAttachView(sourceView: View): void {\n      this.owner.callObservers(\"popoverWillAttachSource\", sourceView, this.owner);\n    },\n    didAttachView(sourceView: View): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    didDetachView(sourceView: View): void {\n      this.owner.callObservers(\"popoverDidDetachSource\", sourceView, this.owner);\n    },\n    viewDidMount(view: View): void {\n      this.owner.place();\n    },\n    viewDidResize(view: View): void {\n      this.owner.place();\n    },\n    viewDidScroll(view: View): void {\n      this.owner.place();\n    },\n    viewDidAnimate(view: View): void {\n      this.owner.place();\n    },\n    viewDidLayout(view: View): void {\n      this.owner.place();\n    },\n    viewDidProject(view: View): void {\n      this.owner.place();\n    },\n    viewDidSetAttribute(name: string, value: unknown, view: HtmlView): void {\n      this.owner.place();\n    },\n    viewDidSetStyle(name: string, value: unknown, priority: string | undefined, view: HtmlView): void {\n      this.owner.place();\n    },\n  })\n  readonly source!: ViewRef<this, View> & Observes<HtmlView>;\n\n  /** @override */\n  @PresenceAnimator({\n    value: Presence.dismissed(),\n    updateFlags: View.NeedsLayout,\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, null);\n    },\n    didSetValue(presence: Presence): void {\n      const phase = presence.phase;\n      const placement = this.owner.currentPlacement;\n      if (placement === \"above\") {\n        this.owner.style.setIntrinsic({\n          marginTop: (1 - phase) * -this.owner.node.clientHeight,\n          opacity: void 0,\n        });\n      } else if (placement === \"below\") {\n        this.owner.style.setIntrinsic({\n          marginTop: (1 - phase) * this.owner.node.clientHeight,\n          opacity: void 0,\n        });\n      } else {\n        this.owner.style.setIntrinsic({\n          marginTop: null,\n          opacity: phase,\n        });\n      }\n      this.owner.callObservers(\"viewDidSetPresence\", presence, this.owner);\n    },\n    willPresent(): void {\n      this.owner.callObservers(\"viewWillPresent\", this.owner);\n      this.owner.place();\n      this.owner.style.visibility.setIntrinsic(\"visible\");\n    },\n    didPresent(): void {\n      this.owner.style.setIntrinsic({\n        marginTop: null,\n        opacity: void 0,\n        pointerEvents: \"auto\",\n      });\n      this.owner.callObservers(\"viewDidPresent\", this.owner);\n    },\n    willDismiss(): void {\n      this.owner.callObservers(\"viewWillDismiss\", this.owner);\n      this.owner.style.pointerEvents.setIntrinsic(\"none\");\n    },\n    didDismiss(): void {\n      this.owner.style.setIntrinsic({\n        marginTop: null,\n        opacity: void 0,\n        visibility: \"hidden\",\n      });\n      this.owner.callObservers(\"viewDidDismiss\", this.owner);\n    },\n  })\n  readonly presence!: PresenceAnimator<this, Presence>;\n\n  /** @override */\n  @Property({\n    valueType: Number,\n    value: 0,\n    didSetValue(modality: number): void {\n      this.owner.callObservers(\"viewDidSetModality\", modality, this.owner);\n    },\n  })\n  readonly modality!: Property<this, number>;\n\n  @Property({\n    value: [\"top\", \"bottom\", \"right\", \"left\"],\n    didSetValue(placement: readonly PopoverPlacement[]): void {\n      this.owner.place();\n    },\n    equalValues(a: readonly PopoverPlacement[], b: readonly PopoverPlacement[]): boolean {\n      return Arrays.equal(a, b);\n    },\n  })\n  readonly placement!: Property<this, readonly PopoverPlacement[]>;\n\n  /** @internal */\n  readonly currentPlacement: PopoverPlacement;\n\n  @Property({\n    valueType: R2Box,\n    value: null,\n    didSetValue(placementFrame: R2Box | null): void {\n      this.owner.place();\n    },\n    fromLike(value: R2BoxLike | null): R2Box | null {\n      return value !== null ? R2Box.fromLike(value) : null;\n    },\n  })\n  readonly placementFrame!: Property<this, R2Box | null>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(dropdown: boolean): void {\n      this.owner.place();\n    }\n  })\n  readonly dropdown!: Property<this, boolean>;\n\n  protected override needsProcess(processFlags: ViewFlags): ViewFlags {\n    if ((processFlags & (View.NeedsScroll | View.NeedsAnimate)) !== 0) {\n      this.requireUpdate(View.NeedsLayout);\n    }\n    return processFlags;\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.place();\n  }\n\n  /** @internal */\n  readonly sourceFrame: R2Box | null;\n\n  place(force: boolean = false): PopoverPlacement {\n    const sourceView = this.source.view;\n    const oldSourceFrame = this.sourceFrame;\n    const newSourceFrame = sourceView !== null ? sourceView.popoverFrame : null;\n    if (newSourceFrame === null || this.placement.value.length === 0 ||\n        (!force && newSourceFrame.equals(oldSourceFrame))) {\n      return \"none\";\n    }\n    (this as Mutable<this>).sourceFrame = null;\n    const placement = this.placePopover(sourceView!, newSourceFrame);\n    const arrow = this.getChild(\"arrow\");\n    if (arrow instanceof HtmlView) {\n      this.placeArrow(sourceView!, newSourceFrame, arrow, placement);\n    }\n    return placement;\n  }\n\n  /** @internal */\n  protected placePopover(sourceView: View, sourceFrame: R2Box): PopoverPlacement {\n    const node = this.node;\n    const parent = node.offsetParent;\n    if (parent === null) {\n      return \"none\";\n    }\n    const popoverWidth = node.clientWidth;\n    const popoverHeight = node.clientHeight;\n\n    // offsetParent bounds in client coordinates\n    const parentBounds = parent.getBoundingClientRect();\n    const parentLeft = parentBounds.left;\n    const parentTop = parentBounds.top;\n\n    // source bounds in offsetParent coordinates (transformed from page coordinates)\n    const sourceLeft = sourceFrame.left - window.pageXOffset - parentLeft;\n    const sourceRight = sourceFrame.right - window.pageXOffset - parentLeft;\n    const sourceTop = sourceFrame.top - window.pageYOffset - parentTop;\n    const sourceBottom = sourceFrame.bottom - window.pageYOffset - parentTop;\n    const sourceWidth = sourceFrame.width;\n    const sourceHeight = sourceFrame.height;\n    const sourceX = sourceLeft + sourceWidth / 2;\n    const sourceY = sourceTop + sourceHeight / 2;\n\n    // placement frame in offsetParent coordinates (transformed from client coordinates)\n    const placementFrame = this.placementFrame.value;\n    const placementLeft = (placementFrame !== null ? placementFrame.left : 0);\n    const placementRight = (placementFrame !== null ? placementFrame.right : window.innerWidth) - parentLeft;\n    const placementTop = (placementFrame !== null ? placementFrame.top : 0);\n    const placementBottom = (placementFrame !== null ? placementFrame.bottom : window.innerHeight) - parentTop;\n\n    // source bound margins relative to placement bounds\n    const marginLeft = sourceLeft - placementLeft - window.pageXOffset;\n    const marginRight = placementRight - sourceLeft - sourceWidth;\n    const marginTop = sourceTop - placementTop - window.pageYOffset;\n    const marginBottom = placementBottom - sourceTop - sourceHeight;\n\n    const dropdown = this.dropdown.value;\n    const arrowHeight = this.arrowHeight.getValue().pxValue();\n    const placementGap = this.placementGap.getValue().pxValue();\n\n    let placement: PopoverPlacement | undefined;\n    const allowedPlacement = this.placement.value;\n    for (let i = 0; i < allowedPlacement.length; i += 1) { // first fit\n      const p = allowedPlacement[i]!;\n      if (p === \"above\" || p === \"below\" || p === \"over\") {\n        placement = p;\n        break;\n      } else if (p === \"top\" && popoverHeight + arrowHeight + placementGap <= marginTop) {\n        placement = p;\n        break;\n      } else if (p === \"bottom\" && popoverHeight + arrowHeight + placementGap <= marginBottom) {\n        placement = p;\n        break;\n      } else if (p === \"left\" && popoverWidth + arrowHeight + placementGap <= marginLeft) {\n        placement = p;\n        break;\n      } else if (p === \"right\" && popoverWidth + arrowHeight + placementGap <= marginRight) {\n        placement = p;\n        break;\n      }\n    }\n    if (placement === void 0) {\n      placement = \"none\";\n      for (let i = 0; i < allowedPlacement.length; i += 1) { // best fit\n        const p = allowedPlacement[i]!;\n        if (p === \"top\" && marginTop >= marginBottom) {\n          placement = p;\n          break;\n        } else if (p === \"bottom\" && marginBottom >= marginTop) {\n          placement = p;\n          break;\n        } else if (p === \"left\" && marginLeft >= marginRight) {\n          placement = p;\n          break;\n        } else if (p === \"right\" && marginRight >= marginLeft) {\n          placement = p;\n          break;\n        }\n      }\n    }\n\n    let left = node.offsetLeft;\n    let top = node.offsetTop;\n    let right: number | null = null;\n    let bottom: number | null = null;\n\n    const oldWidth = this.style.width.pxValue();\n    const oldHeight = this.style.height.pxValue();\n    let width: number | null = oldWidth;\n    let height: number | null = oldHeight;\n\n    const oldMaxWidth = this.style.maxWidth.pxState();\n    const oldMaxHeight = this.style.maxHeight.pxState();\n    let maxWidth: number | null = oldMaxWidth;\n    let maxHeight: number | null = oldMaxHeight;\n\n    if (placement === \"above\") {\n      left = Math.round(placementLeft);\n      top = Math.round(placementTop);\n      right = Math.round((placementFrame !== null ? placementFrame.width : window.innerWidth) - placementRight);\n      width = Math.round(Math.max(0, placementRight - placementLeft));\n      height = null;\n      maxWidth = null;\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"below\") {\n      left = Math.round(placementLeft);\n      top = Math.round(placementBottom - popoverHeight);\n      right = Math.round(placementRight - (placementFrame !== null ? placementFrame.width : window.innerWidth));\n      width = Math.round(Math.max(0, placementRight - placementLeft));\n      height = null;\n      maxWidth = null;\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"over\") {\n      left = Math.round(placementLeft);\n      top = Math.round(placementTop);\n      right = Math.round(placementRight - (placementFrame !== null ? placementFrame.width : window.innerWidth));\n      bottom = Math.round(placementBottom - (placementFrame !== null ? placementFrame.height : window.innerHeight));\n      width = Math.round(Math.max(0, placementRight - placementLeft));\n      height = Math.round(Math.max(0, placementBottom - placementTop));\n      maxWidth = null;\n      maxHeight = null;\n    } else if (placement === \"top\" && !dropdown) {\n      if (sourceX - popoverWidth / 2 <= placementLeft) {\n        left = Math.round(placementLeft);\n      } else if (sourceX + popoverWidth / 2 >= placementRight) {\n        left = Math.round(placementRight - popoverWidth);\n      } else {\n        left = Math.round(sourceX - popoverWidth / 2);\n      }\n      top = Math.round(Math.max(placementTop, sourceTop - (popoverHeight + arrowHeight + placementGap)));\n      maxWidth = Math.round(Math.max(0, placementRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, sourceBottom - placementTop));\n    } else if (placement === \"bottom\" && !dropdown) {\n      if (sourceX - popoverWidth / 2 <= placementLeft) {\n        left = Math.round(placementLeft);\n      } else if (sourceX + popoverWidth / 2 >= placementRight) {\n        left = Math.round(placementRight - popoverWidth);\n      } else {\n        left = Math.round(sourceX - popoverWidth / 2);\n      }\n      top = Math.round(Math.max(placementTop, sourceBottom + arrowHeight + placementGap));\n      maxWidth = Math.round(Math.max(0, placementRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - sourceTop));\n    } else if (placement === \"left\" && !dropdown) {\n      left = Math.round(Math.max(placementLeft, sourceLeft - (popoverWidth + arrowHeight + placementGap)));\n      if (sourceY - popoverHeight / 2 <= placementTop) {\n        top = Math.round(placementTop);\n      } else if (sourceY + popoverHeight / 2 >= placementBottom) {\n        top = Math.round(placementBottom - popoverHeight);\n      } else {\n        top = Math.round(sourceY - popoverHeight / 2);\n      }\n      maxWidth = Math.round(Math.max(0, sourceRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"right\" && !dropdown) {\n      left = Math.round(Math.max(placementLeft, sourceRight + arrowHeight + placementGap));\n      if (sourceY - popoverHeight / 2 <= placementTop) {\n        top = Math.round(placementTop);\n      } else if (sourceY + popoverHeight / 2 >= placementBottom) {\n        top = Math.round(placementBottom - popoverHeight);\n      } else {\n        top = Math.round(sourceY - popoverHeight / 2);\n      }\n      maxWidth = Math.round(Math.max(0, placementRight - sourceLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"top\" && dropdown) {\n      left = Math.max(placementLeft, sourceLeft);\n      top = Math.round(Math.max(placementTop, sourceTop - (popoverHeight + placementGap)));\n      width = Math.round(Math.max(0, Math.min(sourceWidth, placementRight - sourceLeft)));\n      height = null;\n      maxWidth = Math.round(Math.max(0, placementRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, sourceBottom - placementTop));\n    } else if (placement === \"bottom\" && dropdown) {\n      left = Math.max(placementLeft, sourceLeft);\n      top = Math.round(Math.max(placementTop, sourceBottom + placementGap));\n      width = Math.round(Math.max(0, Math.min(sourceWidth, placementRight - sourceLeft)));\n      height = null;\n      maxWidth = Math.round(Math.max(0, placementRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - sourceTop));\n    } else if (placement === \"left\" && dropdown) {\n      left = Math.round(Math.max(placementLeft, sourceLeft - (popoverWidth + placementGap)));\n      top = Math.max(placementTop, sourceTop);\n      width = null;\n      height = Math.round(Math.max(0, Math.min(sourceHeight, placementBottom - sourceTop)));\n      maxWidth = Math.round(Math.max(0, sourceRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"right\" && dropdown) {\n      left = Math.round(Math.max(placementLeft, sourceRight + placementGap));\n      top = Math.max(placementTop, sourceTop);\n      width = null;\n      height = Math.round(Math.max(0, Math.min(sourceHeight, placementBottom - sourceTop)));\n      maxWidth = Math.round(Math.max(0, placementRight - sourceLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    }\n\n    if (placement !== \"none\" && (left !== node.offsetLeft && this.style.left.hasAffinity(Affinity.Intrinsic)\n                              || top !== node.offsetTop && this.style.top.hasAffinity(Affinity.Intrinsic)\n                              || width !== oldWidth && this.style.width.hasAffinity(Affinity.Intrinsic)\n                              || height !== oldHeight && this.style.height.hasAffinity(Affinity.Intrinsic)\n                              || maxWidth !== oldMaxWidth && this.style.maxWidth.hasAffinity(Affinity.Intrinsic)\n                              || maxHeight !== oldMaxHeight && this.style.maxHeight.hasAffinity(Affinity.Intrinsic))) {\n      this.willPlacePopover(placement);\n      this.style.setIntrinsic({\n        position: \"absolute\",\n        left, right,\n        top, bottom,\n        width, height,\n        maxWidth, maxHeight,\n      });\n      this.onPlacePopover(placement);\n      this.didPlacePopover(placement);\n    }\n\n    (this as Mutable<this>).currentPlacement = placement;\n    return placement;\n  }\n\n  protected willPlacePopover(placement: PopoverPlacement): void {\n    this.callObservers(\"popoverWillPlace\", placement, this);\n  }\n\n  protected onPlacePopover(placement: PopoverPlacement): void {\n    // hook\n  }\n\n  protected didPlacePopover(placement: PopoverPlacement): void {\n    this.callObservers(\"popoverDidPlace\", placement, this);\n  }\n\n  /** @internal */\n  protected placeArrow(sourceView: View, sourceFrame: R2Box, arrow: HtmlView,\n                       placement: PopoverPlacement): void {\n    const node = this.node;\n    const parent = node.offsetParent;\n    if (parent === null) {\n      return;\n    }\n\n    // offsetParent bounds in client coordinates\n    const parentBounds = parent.getBoundingClientRect();\n    const parentLeft = parentBounds.left;\n    const parentTop = parentBounds.top;\n\n    // source bounds in offsetParent coordinates (transformed from page coordinates)\n    const sourceLeft = sourceFrame.left - window.pageXOffset - parentLeft;\n    const sourceTop = sourceFrame.top - window.pageYOffset - parentTop;\n    const sourceWidth = sourceFrame.width;\n    const sourceHeight = sourceFrame.height;\n    const sourceX = sourceLeft + sourceWidth / 2;\n    const sourceY = sourceTop + sourceHeight / 2;\n\n    const offsetLeft = node.offsetLeft;\n    const offsetRight = offsetLeft + node.clientWidth;\n    const offsetTop = node.offsetTop;\n    const offsetBottom = offsetTop + node.clientHeight;\n\n    let backgroundColor = this.style.backgroundColor.value;\n    if (backgroundColor === null) {\n      backgroundColor = Color.transparent();\n    }\n    const borderRadius = this.style.borderRadius.get();\n    const radius = borderRadius instanceof Length ? borderRadius.pxValue() : 0;\n\n    const arrowWidth = this.arrowWidth.getValue().pxValue();\n    const arrowHeight = this.arrowHeight.getValue().pxValue();\n\n    const arrowXMin = offsetLeft + radius + arrowWidth / 2;\n    const arrowXMax = offsetRight - radius - arrowWidth / 2;\n    const arrowYMin = offsetTop + radius + arrowWidth / 2;\n    const arrowYMax = offsetBottom - radius - arrowWidth / 2;\n\n    arrow.style.setIntrinsic({\n      top: null,\n      right: null,\n      bottom: null,\n      left: null,\n      borderWidth: null,\n      borderStyle: void 0,\n      borderColor: null,\n      borderLeftWidth: null,\n      borderLeftStyle: void 0,\n      borderLeftColor: null,\n      borderRightWidth: null,\n      borderRightStyle: void 0,\n      borderRightColor: null,\n      borderTopWidth: null,\n      borderTopStyle: void 0,\n      borderTopColor: null,\n      borderBottomWidth: null,\n      borderBottomStyle: void 0,\n      borderBottomColor: null,\n      zIndex: 100,\n    });\n\n    if (placement === \"none\" || placement === \"above\" || placement === \"below\" || placement === \"over\") {\n      // hide arrow\n      arrow.style.display.setIntrinsic(\"none\");\n    } else if (Math.round(sourceY) <= Math.round(offsetTop - arrowHeight) // arrow tip below source center\n        && arrowXMin <= sourceX && sourceX <= arrowXMax) { // arrow base on top popover edge\n      // top arrow\n      arrow.style.setIntrinsic({\n        display: \"block\",\n        top: Math.round(-arrowHeight),\n        left: Math.round(sourceX - offsetLeft - arrowWidth / 2),\n        borderLeftWidth: Math.round(arrowWidth / 2),\n        borderLeftStyle: \"solid\",\n        borderLeftColor: Color.transparent(),\n        borderRightWidth: Math.round(arrowWidth / 2),\n        borderRightStyle: \"solid\",\n        borderRightColor: Color.transparent(),\n        borderBottomWidth: Math.round(arrowHeight),\n        borderBottomStyle: \"solid\",\n        borderBottomColor: backgroundColor,\n      });\n    } else if (Math.round(offsetBottom + arrowHeight) <= Math.round(sourceY) // arrow tip above source center\n        && arrowXMin <= sourceX && sourceX <= arrowXMax) { // arrow base on bottom popover edge\n      // bottom arrow\n      arrow.style.setIntrinsic({\n        display: \"block\",\n        bottom: Math.round(-arrowHeight),\n        left: Math.round(sourceX - offsetLeft - arrowWidth / 2),\n        borderLeftWidth: Math.round(arrowWidth / 2),\n        borderLeftStyle: \"solid\",\n        borderLeftColor: Color.transparent(),\n        borderRightWidth: Math.round(arrowWidth / 2),\n        borderRightStyle: \"solid\",\n        borderRightColor: Color.transparent(),\n        borderTopWidth: Math.round(arrowHeight),\n        borderTopStyle: \"solid\",\n        borderTopColor: backgroundColor,\n      });\n    } else if (Math.round(sourceX) <= Math.round(offsetLeft - arrowHeight) // arrow tip right of source center\n        && arrowYMin <= sourceY && sourceY <= arrowYMax) { // arrow base on left popover edge\n      // left arrow\n      arrow.style.setIntrinsic({\n        display: \"block\",\n        left: Math.round(-arrowHeight),\n        top: Math.round(sourceY - offsetTop - arrowWidth / 2),\n        borderTopWidth: Math.round(arrowWidth / 2),\n        borderTopStyle: \"solid\",\n        borderTopColor: Color.transparent(),\n        borderBottomWidth: Math.round(arrowWidth / 2),\n        borderBottomStyle: \"solid\",\n        borderBottomColor: Color.transparent(),\n        borderRightWidth: Math.round(arrowHeight),\n        borderRightStyle: \"solid\",\n        borderRightColor: backgroundColor,\n      });\n    } else if (Math.round(offsetRight + arrowHeight) <= Math.round(sourceX) // arrow tip left of source center\n        && arrowYMin <= sourceY && sourceY <= arrowYMax) { // arrow base on right popover edge\n      // right arrow\n      arrow.style.setIntrinsic({\n        display: \"block\",\n        right: Math.round(-arrowHeight),\n        top: Math.round(sourceY - offsetTop - arrowWidth / 2),\n        borderTopWidth: Math.round(arrowWidth / 2),\n        borderTopStyle: \"solid\",\n        borderTopColor: Color.transparent(),\n        borderBottomWidth: Math.round(arrowWidth / 2),\n        borderBottomStyle: \"solid\",\n        borderBottomColor: Color.transparent(),\n        borderLeftWidth: Math.round(arrowHeight),\n        borderLeftStyle: \"solid\",\n        borderLeftColor: backgroundColor,\n      });\n    } else {\n      // no arrow\n      arrow.style.display.setIntrinsic(\"none\");\n    }\n  }\n\n  @EventHandler({\n    eventType: \"click\",\n    bindsOwner: true,\n    handle(event: MouseEvent): void {\n      event.stopPropagation();\n    },\n  })\n  readonly click!: EventHandler<this>;\n\n  /** @internal */\n  static readonly HiddenState: number = 0;\n  /** @internal */\n  static readonly HidingState: number = 1;\n  /** @internal */\n  static readonly HideState: number = 2;\n  /** @internal */\n  static readonly ShownState: number = 3;\n  /** @internal */\n  static readonly ShowingState: number = 4;\n  /** @internal */\n  static readonly ShowState: number = 5;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {ConstraintProperty} from \"@swim/constraint\";\nimport {Length} from \"@swim/math\";\nimport {Presence} from \"@swim/style\";\nimport {PresenceAnimator} from \"@swim/style\";\nimport {Expansion} from \"@swim/style\";\nimport {ExpansionAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport {ThemeConstraintAnimator} from \"@swim/theme\";\nimport type {ViewInsets} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {ModalViewObserver} from \"@swim/dom\";\nimport type {ModalView} from \"@swim/dom\";\n\n/** @public */\nexport type DrawerPlacement = \"top\" | \"right\" | \"bottom\" | \"left\";\n\n/** @public */\nexport interface DrawerViewObserver<V extends DrawerView = DrawerView> extends HtmlViewObserver<V>, ModalViewObserver<V> {\n  viewDidSetPlacement?(placement: DrawerPlacement, view: V): void;\n\n  viewDidSetEffectiveWidth?(effectiveWidth: Length | null, view: V): void;\n\n  viewDidSetEffectiveHeight?(effectiveHeight: Length | null, view: V): void;\n\n  viewWillPresent?(view: V): void;\n\n  viewDidPresent?(view: V): void;\n\n  viewWillDismiss?(view: V): void;\n\n  viewDidDismiss?(view: V): void;\n\n  viewWillExpand?(view: V): void;\n\n  viewDidExpand?(view: V): void;\n\n  viewWillCollapse?(view: V): void;\n\n  viewDidCollapse?(view: V): void;\n}\n\n/** @public */\nexport class DrawerView extends HtmlView implements ModalView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initDrawer();\n  }\n\n  declare readonly observerType?: Class<DrawerViewObserver>;\n\n  protected initDrawer(): void {\n    this.setIntrinsic<DrawerView>({\n      classList: [\"drawer\"],\n      style: {\n        display: \"flex\",\n        overflowX: \"hidden\",\n        overflowY: \"auto\",\n        overscrollBehaviorY: \"contain\",\n        overflowScrolling: \"touch\",\n      },\n    });\n  }\n\n  @ThemeConstraintAnimator({valueType: Length, value: Length.px(60)})\n  readonly collapsedWidth!: ThemeConstraintAnimator<this, Length>;\n\n  @ThemeConstraintAnimator({valueType: Length, value: Length.px(200)})\n  readonly expandedWidth!: ThemeConstraintAnimator<this, Length>;\n\n  @ConstraintProperty({\n    valueType: Length,\n    value: null,\n    didSetValue(newValue: Length | null, oldValue: Length | null): void {\n      this.owner.callObservers(\"viewDidSetEffectiveWidth\", newValue, this.owner);\n    },\n    toNumber(value: Length | null): number {\n      return value !== null ? value.pxValue() : 0;\n    },\n  })\n  readonly effectiveWidth!: ConstraintProperty<this, Length | null>;\n\n  @ConstraintProperty({\n    valueType: Length,\n    value: null,\n    didSetValue(newValue: Length | null, oldValue: Length | null): void {\n      this.owner.callObservers(\"viewDidSetEffectiveHeight\", newValue, this.owner);\n    },\n    toNumber(value: Length | null): number {\n      return value !== null ? value.pxValue() : 0;\n    },\n  })\n  readonly effectiveHeight!: ConstraintProperty<this, Length | null>;\n\n  isHorizontal(): boolean {\n    return this.placement.value === \"top\" || this.placement.value === \"bottom\";\n  }\n\n  isVertical(): boolean {\n    return this.placement.value === \"left\" || this.placement.value === \"right\";\n  }\n\n  @Property({\n    valueType: String,\n    value: \"left\",\n    updateFlags: View.NeedsResize | View.NeedsLayout,\n    didSetValue(placement: DrawerPlacement): void {\n      this.owner.callObservers(\"viewDidSetPlacement\", placement, this.owner);\n      this.owner.edgeInsets.decohereOutlets();\n    },\n  })\n  readonly placement!: Property<this, DrawerPlacement>;\n\n  /** @override */\n  @PresenceAnimator({\n    value: Presence.presented(),\n    updateFlags: View.NeedsLayout,\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, null);\n    },\n    didSetValue(presence: Presence): void {\n      this.owner.callObservers(\"viewDidSetPresence\", presence, this.owner);\n    },\n    willPresent(): void {\n      this.owner.callObservers(\"viewWillPresent\", this.owner);\n    },\n    didPresent(): void {\n      this.owner.callObservers(\"viewDidPresent\", this.owner);\n    },\n    willDismiss(): void {\n      this.owner.callObservers(\"viewWillDismiss\", this.owner);\n    },\n    didDismiss(): void {\n      this.owner.callObservers(\"viewDidDismiss\", this.owner);\n    },\n  })\n  readonly presence!: PresenceAnimator<this, Presence>;\n\n  @ExpansionAnimator({\n    value: Expansion.expanded(),\n    updateFlags: View.NeedsResize | View.NeedsLayout,\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, null);\n    },\n    willExpand(): void {\n      this.owner.modal.dismiss();\n      this.owner.callObservers(\"viewWillExpand\", this.owner);\n    },\n    didExpand(): void {\n      this.owner.callObservers(\"viewDidExpand\", this.owner);\n    },\n    willCollapse(): void {\n      this.owner.modal.dismiss();\n      this.owner.callObservers(\"viewWillCollapse\", this.owner);\n    },\n    didCollapse(): void {\n      this.owner.callObservers(\"viewDidCollapse\", this.owner);\n    },\n  })\n  readonly stretch!: ExpansionAnimator<this, Expansion>;\n\n  @Property({\n    extends: true,\n    getOutletValue(outlet: Property<unknown, ViewInsets>): ViewInsets {\n      let edgeInsets = this.value;\n      let insetTop = edgeInsets.insetTop;\n      let insetRight = edgeInsets.insetRight;\n      let insetBottom = edgeInsets.insetBottom;\n      let insetLeft = edgeInsets.insetLeft;\n      const placement = this.owner.placement.value;\n      if (placement === \"top\" && insetBottom !== 0) {\n        insetBottom = 0;\n        edgeInsets = {insetTop, insetRight, insetBottom, insetLeft};\n      } else if (placement === \"right\" && insetLeft !== 0) {\n        insetLeft = 0;\n        edgeInsets = {insetTop, insetRight, insetBottom, insetLeft};\n      } else if (placement === \"bottom\" && insetTop !== 0) {\n        insetTop = 0;\n        edgeInsets = {insetTop, insetRight, insetBottom, insetLeft};\n      } else if (placement === \"left\" && insetRight !== 0) {\n        insetRight = 0;\n        edgeInsets = {insetTop, insetRight, insetBottom, insetLeft};\n      }\n      return edgeInsets;\n    },\n  })\n  override get edgeInsets(): Property<this, ViewInsets> {\n    return Property.getter();\n  }\n\n  protected override onLayout(): void {\n    super.onLayout();\n    this.style.display.setIntrinsic(!this.presence.dismissed ? \"flex\" : \"none\");\n    this.layoutDrawer();\n\n    if (this.viewIdiom === \"mobile\") {\n      this.style.boxShadow.setIntrinsic(this.getLookOr(Look.shadow, Mood.floating, null));\n    } else {\n      this.style.boxShadow.setIntrinsic(this.getLookOr(Look.shadow, null));\n    }\n  }\n\n  protected layoutDrawer(): void {\n    const placement = this.placement.value;\n    if (placement === \"top\") {\n      this.layoutDrawerTop();\n    } else if (placement === \"right\") {\n      this.layoutDrawerRight();\n    } else if (placement === \"bottom\") {\n      this.layoutDrawerBottom();\n    } else if (placement === \"left\") {\n      this.layoutDrawerLeft();\n    }\n  }\n\n  protected layoutDrawerTop(): void {\n    const presencePhase = this.presence.getPhase();\n\n    this.classList.add(\"drawer-top\");\n    this.classList.remove(\"drawer-right\");\n    this.classList.remove(\"drawer-bottom\");\n    this.classList.remove(\"drawer-left\");\n\n    this.style.setIntrinsic({\n      position: \"fixed\",\n      width: null,\n      height: null,\n      left: Length.zero(),\n      right: Length.zero(),\n      bottom: null,\n    });\n\n    const height = this.style.height.getCssValue();\n    this.style.top.setIntrinsic(height.times(presencePhase - 1));\n\n    this.effectiveWidth.setIntrinsic(this.style.width.value);\n    this.effectiveHeight.setIntrinsic(height.times(presencePhase));\n\n    if (this.stretch.collapsed) {\n      this.expand();\n    }\n  }\n\n  protected layoutDrawerRight(): void {\n    const stretchPhase = this.stretch.getPhase();\n    const presencePhase = this.presence.getPhase();\n\n    this.classList.remove(\"drawer-top\");\n    this.classList.add(\"drawer-right\");\n    this.classList.remove(\"drawer-bottom\");\n    this.classList.remove(\"drawer-left\");\n\n    this.style.setIntrinsic({\n      position: \"fixed\",\n      height: null,\n      top: Length.zero(),\n      bottom: Length.zero(),\n      left: null,\n    });\n\n    let width: Length | null;\n    if (this.style.width.hasAffinity(Affinity.Intrinsic)) {\n      const collapsedWidth = this.collapsedWidth.getValue();\n      const expandedWidth = this.expandedWidth.getValue();\n      width = collapsedWidth.times(1 - stretchPhase).plus(expandedWidth.times(stretchPhase));\n    } else {\n      width = this.style.width.getCssValue();\n    }\n    this.style.width.setIntrinsic(width);\n    this.style.right.setIntrinsic(width.times(presencePhase - 1));\n\n    this.effectiveWidth.setIntrinsic(width.times(presencePhase));\n    this.effectiveHeight.setIntrinsic(this.style.height.value);\n  }\n\n  protected layoutDrawerBottom(): void {\n    const presencePhase = this.presence.getPhase();\n\n    this.classList.remove(\"drawer-top\");\n    this.classList.remove(\"drawer-right\");\n    this.classList.add(\"drawer-bottom\");\n    this.classList.remove(\"drawer-left\");\n\n    this.style.setIntrinsic({\n      position: \"fixed\",\n      width: null,\n      height: null,\n      left: Length.zero(),\n      right: Length.zero(),\n      top: null,\n    });\n\n    const height = this.style.height.getCssValue();\n    this.style.bottom.setIntrinsic(height.times(presencePhase - 1));\n\n    this.effectiveWidth.setIntrinsic(this.style.width.value);\n    this.effectiveHeight.setIntrinsic(height.times(presencePhase));\n\n    if (this.stretch.collapsed) {\n      this.expand();\n    }\n  }\n\n  protected layoutDrawerLeft(): void {\n    const stretchPhase = this.stretch.getPhase();\n    const presencePhase = this.presence.getPhase();\n\n    this.classList.remove(\"drawer-top\");\n    this.classList.remove(\"drawer-right\");\n    this.classList.remove(\"drawer-bottom\");\n    this.classList.add(\"drawer-left\");\n\n    this.style.setIntrinsic({\n      position: \"fixed\",\n      height: null,\n      top: Length.zero(),\n      bottom: Length.zero(),\n      right: null,\n    });\n\n    let width: Length | null;\n    if (this.style.width.hasAffinity(Affinity.Intrinsic)) {\n      const collapsedWidth = this.collapsedWidth.getValue();\n      const expandedWidth = this.expandedWidth.getValue();\n      width = collapsedWidth.times(1 - stretchPhase).plus(expandedWidth.times(stretchPhase));\n    } else {\n      width = this.style.width.getCssValue();\n    }\n    this.style.width.setIntrinsic(width);\n    this.style.left.setIntrinsic(width.times(presencePhase - 1));\n\n    this.effectiveWidth.setIntrinsic(width.times(presencePhase));\n    this.effectiveHeight.setIntrinsic(this.style.height.value);\n  }\n\n  /** @override */\n  @Property({\n    valueType: Number,\n    value: 0,\n    didSetValue(modality: number): void {\n      this.owner.callObservers(\"viewDidSetModality\", modality, this.owner);\n    },\n  })\n  readonly modality!: Property<this, number>;\n\n  present(timing?: TimingLike | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    this.presence.present(timing);\n  }\n\n  dismiss(timing?: TimingLike | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    this.presence.dismiss(timing);\n  }\n\n  expand(timing?: TimingLike | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    this.stretch.expand(timing);\n  }\n\n  collapse(timing?: TimingLike | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    this.stretch.collapse(timing);\n  }\n\n  toggle(timing?: TimingLike | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromLike(timing);\n    }\n    if (this.viewIdiom === \"mobile\" || this.isHorizontal()) {\n      if (this.presence.presented) {\n        this.presence.dismiss(timing);\n      } else {\n        this.stretch.expand(timing);\n        this.presence.present(timing);\n        this.modal.present(this, {modal: true});\n      }\n    } else {\n      this.stretch.toggle(timing);\n      this.presence.present(timing);\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Mutable} from \"@swim/util\";\nimport {EventHandler} from \"@swim/component\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {VectorIcon} from \"@swim/graphics\";\nimport {IconButton} from \"@swim/button\";\nimport type {DrawerView} from \"./DrawerView\";\n\n/** @public */\nexport class DrawerButton extends IconButton {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.drawerView = null;\n    this.initIcon();\n  }\n\n  protected override initButton(): void {\n    super.initButton();\n    this.classList.add(\"drawer-button\");\n  }\n\n  protected initIcon(): void {\n    this.icon.push(DrawerButton.hamburgerIcon);\n  }\n\n  readonly drawerView: DrawerView | null;\n\n  setDrawerView(drawerView: DrawerView | null): void {\n    (this as Mutable<this>).drawerView = drawerView;\n  }\n\n  @EventHandler({\n    extends: true,\n    handle(event: MouseEvent): void {\n      super.handle(event);\n      const drawerView = this.owner.drawerView;\n      if (drawerView !== null) {\n        drawerView.toggle();\n      }\n    },\n  })\n  override readonly click!: EventHandler<this>;\n\n  @Lazy\n  static get hamburgerIcon(): Graphics {\n    return VectorIcon.create(24, 24, \"M21,17L21,19L3,19L3,17L21,17ZM21,11L21,13L3,13L3,11L21,11ZM3,5L3,7L21,7L21,5L3,5Z\");\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport {EventHandler} from \"@swim/component\";\nimport {Presence} from \"@swim/style\";\nimport {PresenceAnimator} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {Overflow} from \"@swim/dom\";\nimport type {PointerEvents} from \"@swim/dom\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\n\n/** @public */\nexport interface SheetViewObserver<V extends SheetView = SheetView> extends HtmlViewObserver<V> {\n  viewDidSetFullBleed?(fullBleed: boolean, view: V): void;\n\n  viewWillPresent?(view: V): void;\n\n  viewDidPresent?(view: V): void;\n\n  viewWillDismiss?(view: V): void;\n\n  viewDidDismiss?(view: V): void;\n}\n\n/** @public */\nexport class SheetView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initSheet();\n  }\n\n  protected initSheet(): void {\n    this.setIntrinsic<SheetView>({\n      classList: [\"sheet\"],\n      style: {\n        position: \"relative\",\n        boxSizing: \"border-box\",\n        overflowX: \"hidden\",\n        overflowY: \"auto\",\n        overscrollBehaviorY: \"contain\",\n        overflowScrolling: \"touch\",\n        backgroundColor: Look.backgroundColor,\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<SheetViewObserver>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(fullBleed: boolean): void {\n      this.owner.callObservers(\"viewDidSetFullBleed\", fullBleed, this.owner);\n    },\n  })\n  readonly fullBleed!: Property<this, boolean>;\n\n  @Property({valueType: Number, value: 1})\n  readonly sheetAlign!: Property<this, number>;\n\n  @PresenceAnimator({\n    value: Presence.presented(),\n    updateFlags: View.NeedsLayout,\n    init(): void {\n      this.pointerEvents = void 0;\n      this.overflowX = void 0;\n      this.overflowY = void 0;\n    },\n    get transition(): Timing | boolean | null {\n      return this.owner.getLookOr(Look.timing, Mood.navigating, null);\n    },\n    willPresent(): void {\n      this.owner.callObservers(\"viewWillPresent\", this.owner);\n    },\n    didPresent(): void {\n      this.owner.style.pointerEvents.setState(void 0, Affinity.Transient);\n      this.owner.callObservers(\"viewDidPresent\", this.owner);\n    },\n    willDismiss(): void {\n      this.owner.callObservers(\"viewWillDismiss\", this.owner);\n      this.pointerEvents = this.owner.style.pointerEvents.state;\n      this.overflowX = this.owner.style.overflowX.state;\n      this.overflowY = this.owner.style.overflowY.state;\n      this.owner.style.pointerEvents.setState(\"none\", Affinity.Transient);\n      this.owner.style.overflowX.setIntrinsic(\"hidden\");\n      this.owner.style.overflowY.setIntrinsic(\"hidden\");\n    },\n    didDismiss(): void {\n      this.owner.style.pointerEvents.setState(this.pointerEvents, Affinity.Transient);\n      this.owner.style.overflowX.setIntrinsic(this.overflowX);\n      this.owner.style.overflowY.setIntrinsic(this.overflowY);\n      this.pointerEvents = void 0;\n      this.overflowX = void 0;\n      this.overflowY = void 0;\n      this.owner.callObservers(\"viewDidDismiss\", this.owner);\n    },\n  })\n  readonly presence!: PresenceAnimator<SheetView, Presence> & {\n    /** @internal */\n    pointerEvents: PointerEvents | undefined,\n    /** @internal */\n    overflowX: Overflow | undefined,\n    /** @internal */\n    overflowY: Overflow | undefined,\n  };\n\n  present(timing?: TimingLike | boolean | null): void {\n    this.presence.present(timing);\n  }\n\n  dismiss(timing?: TimingLike | boolean | null): void {\n    this.presence.dismiss(timing);\n  }\n\n  /** @internal */\n  layoutSheet(): void {\n    const sheetWidth = this.style.width.pxState();\n    const sheetAlign = this.sheetAlign.value;\n    const phase = this.presence.value.phase;\n    this.style.left.setIntrinsic(sheetWidth * sheetAlign * (1 - phase));\n  }\n\n  @EventHandler({\n    eventType: \"scroll\",\n    bindsOwner: true,\n    handle(event: Event): void {\n      this.owner.requireUpdate(View.NeedsScroll);\n    },\n  })\n  readonly scroll!: EventHandler<this>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport {Look} from \"@swim/theme\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {Graphics} from \"@swim/graphics\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {ControllerRef} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport {ToolLayout} from \"@swim/toolbar\";\nimport type {ToolView} from \"@swim/toolbar\";\nimport {TitleToolView} from \"@swim/toolbar\";\nimport {ButtonToolView} from \"@swim/toolbar\";\nimport {ToolController} from \"@swim/toolbar\";\nimport {TitleToolController} from \"@swim/toolbar\";\nimport {ButtonToolController} from \"@swim/toolbar\";\nimport {SheetView} from \"./SheetView\";\n\n/** @public */\nexport interface SheetControllerObserver<C extends SheetController = SheetController> extends ControllerObserver<C> {\n  controllerWillAttachSheetTrait?(sheetTrait: Trait, controller: C): void;\n\n  controllerDidDetachSheetTrait?(sheetTrait: Trait, controller: C): void;\n\n  controllerWillAttachSheetView?(sheetView: SheetView, controller: C): void;\n\n  controllerDidDetachSheetView?(sheetView: SheetView, controller: C): void;\n\n  controllerDidScrollSheetView?(sheetView: SheetView, controller: C): void;\n\n  controllerWillAttachBack?(backController: SheetController, controller: C): void;\n\n  controllerDidDetachBack?(backController: SheetController, controller: C): void;\n\n  controllerWillAttachForward?(forwardController: SheetController, controller: C): void;\n\n  controllerDidDetachForward?(forwardController: SheetController, controller: C): void;\n\n  controllerDidSetFullBleed?(fullBleed: boolean, controller: C): void;\n\n  controllerDidSetSearchable?(searchable: boolean, controller: C): void;\n\n  controllerDidSetSearching?(searching: boolean, controller: C): void;\n\n  controllerDidUpdateSearch?(query: string, controller: C): void;\n\n  controllerDidSubmitSearch?(query: string, controller: C): void;\n\n  controllerWillAttachTitle?(titleController: ToolController, controller: C): void;\n\n  controllerDidDetachTitle?(titleController: ToolController, controller: C): void;\n\n  controllerDidPressTitle?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidLongPressTitle?(input: PositionGestureInput, controller: C): void;\n\n  controllerWillAttachHandle?(handleController: ToolController, controller: C): void;\n\n  controllerDidDetachHandle?(handleController: ToolController, controller: C): void;\n\n  controllerDidPressHandle?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidLongPressHandle?(input: PositionGestureInput, controller: C): void;\n\n  controllerWillAttachModeTool?(modeToolController: ToolController, targetToolController: ToolController | null, controller: C): void;\n\n  controllerDidDetachModeTool?(modeToolController: ToolController, controller: C): void;\n\n  controllerWillAttachModeToolView?(modeToolView: ToolView, modeToolController: ToolController, controller: C): void;\n\n  controllerDidDetachModeToolView?(modeToolView: ToolView, modeToolController: ToolController, controller: C): void;\n\n  controllerWillPresentSheetView?(sheetView: SheetView, controller: C): void;\n\n  controllerDidPresentSheetView?(sheetView: SheetView, controller: C): void;\n\n  controllerWillDismissSheetView?(sheetView: SheetView, controller: C): void;\n\n  controllerDidDismissSheetView?(sheetView: SheetView, controller: C): void;\n}\n\n/** @public */\nexport class SheetController extends Controller {\n  declare readonly observerType?: Class<SheetControllerObserver>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(fullBleed: boolean): void {\n      this.owner.callObservers(\"controllerDidSetFullBleed\", fullBleed, this.owner);\n      const sheetView = this.owner.sheet.view;\n      if (sheetView !== null) {\n        sheetView.fullBleed.setValue(fullBleed, Affinity.Inherited);\n      }\n    },\n  })\n  readonly fullBleed!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(searchable: boolean): void {\n      this.owner.callObservers(\"controllerDidSetSearchable\", searchable, this.owner);\n    },\n  })\n  readonly searchable!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(searching: boolean): void {\n      this.owner.callObservers(\"controllerDidSetSearching\", searching, this.owner);\n    },\n  })\n  readonly searching!: Property<this, boolean>;\n\n  updateSearch(query: string, inputView: HtmlView): void {\n    // hook\n  }\n\n  submitSearch(query: string, inputView: HtmlView): void {\n    // hook\n  }\n\n  @TraitViewRef({\n    willAttachTrait(sheetTrait: Trait): void {\n      this.owner.callObservers(\"controllerWillAttachSheetTrait\", sheetTrait, this.owner);\n    },\n    didDetachTrait(sheetTrait: Trait): void {\n      this.owner.callObservers(\"controllerDidDetachSheetTrait\", sheetTrait, this.owner);\n    },\n    viewType: SheetView,\n    observesView: true,\n    willAttachView(sheetView: SheetView): void {\n      this.owner.callObservers(\"controllerWillAttachSheetView\", sheetView, this.owner);\n    },\n    didAttachView(sheetView: SheetView): void {\n      this.owner.fullBleed.setIntrinsic(sheetView.fullBleed.value);\n    },\n    didDetachView(sheetView: SheetView): void {\n      this.owner.callObservers(\"controllerDidDetachSheetView\", sheetView, this.owner);\n    },\n    viewDidScroll(sheetView: SheetView): void {\n      this.owner.callObservers(\"controllerDidScrollSheetView\", sheetView, this.owner);\n    },\n    viewDidSetFullBleed(fullBleed: boolean, sheetView: SheetView): void {\n      this.owner.fullBleed.setIntrinsic(fullBleed);\n    },\n    viewWillPresent(sheetView: SheetView): void {\n      this.owner.callObservers(\"controllerWillPresentSheetView\", sheetView, this.owner);\n    },\n    viewDidPresent(sheetView: SheetView): void {\n      this.owner.callObservers(\"controllerDidPresentSheetView\", sheetView, this.owner);\n    },\n    viewWillDismiss(sheetView: SheetView): void {\n      this.owner.callObservers(\"controllerWillDismissSheetView\", sheetView, this.owner);\n    },\n    viewDidDismiss(sheetView: SheetView): void {\n      this.owner.callObservers(\"controllerDidDismissSheetView\", sheetView, this.owner);\n    },\n  })\n  readonly sheet!: TraitViewRef<this, Trait, SheetView> & Observes<SheetView>;\n\n  @ControllerRef({\n    get controllerType(): typeof SheetController {\n      return SheetController;\n    },\n    binds: false,\n    willAttachController(backController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachBack\", backController, this.owner);\n    },\n    didDetachController(backController: SheetController): void {\n      this.owner.callObservers(\"controllerDidDetachBack\", backController, this.owner);\n    },\n  })\n  readonly back!: ControllerRef<this, SheetController>;\n\n  @ControllerRef({\n    get controllerType(): typeof SheetController {\n      return SheetController;\n    },\n    binds: false,\n    willAttachController(forwardController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachForward\", forwardController, this.owner);\n    },\n    didDetachController(forwardController: SheetController): void {\n      this.owner.callObservers(\"controllerDidDetachForward\", forwardController, this.owner);\n    },\n  })\n  readonly forward!: ControllerRef<this, SheetController>;\n\n  @TraitViewControllerRef({\n    controllerType: ToolController,\n    binds: true,\n    observes: true,\n    getTraitViewRef(titleController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return titleController.tool;\n    },\n    willAttachController(titleController: ToolController): void {\n      this.owner.callObservers(\"controllerWillAttachTitle\", titleController, this.owner);\n    },\n    didAttachController(titleController: ToolController): void {\n      const titleView = titleController.tool.attachView();\n      this.attachToolView(titleView, titleController);\n    },\n    willDetachController(titleController: ToolController): void {\n      const titleView = titleController.tool.view;\n      if (titleView !== null) {\n        this.detachToolView(titleView, titleController);\n      }\n    },\n    didDetachController(titleController: ToolController): void {\n      this.owner.callObservers(\"controllerDidDetachTitle\", titleController, this.owner);\n    },\n    controllerWillAttachToolView(titleView: ToolView, titleController: ToolController): void {\n      this.attachToolView(titleView, titleController);\n    },\n    controllerDidDetachToolView(titleView: ToolView, titleController: ToolController): void {\n      this.detachToolView(titleView, titleController);\n    },\n    attachToolView(titleView: ToolView, titleController: ToolController): void {\n      // hook\n    },\n    detachToolView(titleView: ToolView, titleController: ToolController): void {\n      // hook\n    },\n    controllerDidPressToolView(input: PositionGestureInput, event: Event | null): void {\n      this.owner.callObservers(\"controllerDidPressTitle\", input, event, this.owner);\n    },\n    controllerDidLongPressToolView(input: PositionGestureInput): void {\n      this.owner.callObservers(\"controllerDidLongPressTitle\", input, this.owner);\n    },\n    fromLike(value: ToolController | LikeType<ToolController> | string | undefined): ToolController {\n      if (value === void 0 || typeof value === \"string\") {\n        let controller = this.controller;\n        if (controller === null) {\n          controller = this.createController();\n        }\n        const view = controller.tool.attachView();\n        if (view instanceof TitleToolView) {\n          view.content.set(value);\n        }\n        return controller;\n      }\n      return super.fromLike(value);\n    },\n    createController(): ToolController {\n      const titleController = TitleToolController.create();\n      const titleView = titleController.tool.attachView();\n      titleView.style.fontSize.setIntrinsic(14);\n      return titleController;\n    },\n  })\n  readonly title!: TraitViewControllerRef<this, Trait, ToolView, Like<ToolController, string | undefined>> & Observes<ToolController> & {\n    attachToolView(titleView: ToolView, titleController: ToolController): void,\n    detachToolView(titleView: ToolView, titleController: ToolController): void,\n  };\n\n  @TraitViewControllerRef({\n    controllerType: ToolController,\n    binds: true,\n    observes: true,\n    getTraitViewRef(handleController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return handleController.tool;\n    },\n    init(): void {\n      (this as Mutable<typeof this>).active = false;\n    },\n    initController(handleController: ToolController): void {\n      const handleView = this.view;\n      if (handleView !== null) {\n        this.updateActive(this.active, handleView);\n      }\n    },\n    willAttachController(handleController: ToolController): void {\n      this.owner.callObservers(\"controllerWillAttachHandle\", handleController, this.owner);\n    },\n    didAttachController(handleController: ToolController): void {\n      const handleView = handleController.tool.attachView();\n      this.attachToolView(handleView, handleController);\n    },\n    willDetachController(handleController: ToolController): void {\n      const handleView = handleController.tool.view;\n      if (handleView !== null) {\n        this.detachToolView(handleView, handleController);\n      }\n    },\n    didDetachController(handleController: ToolController): void {\n      this.owner.callObservers(\"controllerDidDetachHandle\", handleController, this.owner);\n    },\n    controllerWillAttachToolView(handleView: ToolView, handleController: ToolController): void {\n      this.attachToolView(handleView, handleController);\n      this.updateActive(this.active, handleView);\n    },\n    controllerDidDetachToolView(handleView: ToolView, handleController: ToolController): void {\n      this.detachToolView(handleView, handleController);\n    },\n    attachToolView(handleView: ToolView, handleController: ToolController): void {\n      // hook\n    },\n    detachToolView(handleView: ToolView, handleController: ToolController): void {\n      // hook\n    },\n    controllerDidPressToolView(input: PositionGestureInput, event: Event | null): void {\n      this.owner.callObservers(\"controllerDidPressHandle\", input, event, this.owner);\n    },\n    controllerDidLongPressToolView(input: PositionGestureInput): void {\n      this.owner.callObservers(\"controllerDidLongPressHandle\", input, this.owner);\n    },\n    setActive(active: boolean): void {\n      (this as Mutable<typeof this>).active = active;\n      const handleView = this.view;\n      if (handleView !== null) {\n        this.updateActive(active, handleView);\n      }\n    },\n    updateActive(active: boolean, handleView: ToolView): void {\n      if (handleView instanceof ButtonToolView) {\n        const timing = !handleView.inserting ? handleView.getLook(Look.timing) : false;\n        if (active) {\n          handleView.iconColor.setIntrinsic(Look.accentColor, timing);\n        } else {\n          handleView.iconColor.setIntrinsic(Look.iconColor, timing);\n        }\n      }\n    },\n    setIcon(icon: Graphics | null): void {\n      const handleController = this.insertController() as ButtonToolController;\n      const handleView = handleController.tool.attachView();\n      handleView.graphics.setIntrinsic(icon);\n    },\n    createController(): ToolController {\n      const handleController = ButtonToolController.create();\n      const toolLayout = ToolLayout.create(\"\", 0, 0, 36);\n      handleController.layout.set(toolLayout);\n      const handleView = handleController.tool.attachView();\n      handleView.iconLayout.setIntrinsic({width: 24, height: 24});\n      return handleController;\n    },\n  })\n  readonly handle!: TraitViewControllerRef<this, Trait, ToolView, ToolController> & Observes<ToolController> & Observes<ButtonToolController> & {\n    readonly active: boolean;\n    attachToolView(handleView: ToolView, handleController: ToolController): void,\n    detachToolView(handleView: ToolView, handleController: ToolController): void,\n    setActive(active: boolean): void,\n    updateActive(active: boolean, handleView: ToolView): void,\n    setIcon(icon: Graphics | null): void,\n  };\n\n  @TraitViewControllerSet({\n    controllerType: ToolController,\n    binds: false,\n    ordered: true,\n    observes: true,\n    getTraitViewRef(modeToolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return modeToolController.tool;\n    },\n    willAttachController(modeToolController: ToolController): void {\n      let targetToolController: ToolController | null | undefined = Objects.getNextValue(this.controllers, modeToolController.uid);\n      if (targetToolController === void 0) {\n        targetToolController = null;\n      }\n      this.owner.callObservers(\"controllerWillAttachModeTool\", modeToolController, targetToolController, this.owner);\n    },\n    didAttachController(modeToolController: ToolController): void {\n      const modeToolView = modeToolController.tool.attachView();\n      this.attachToolView(modeToolView, modeToolController);\n    },\n    willDetachController(modeToolController: ToolController): void {\n      const modeToolView = modeToolController.tool.view;\n      if (modeToolView !== null) {\n        this.detachToolView(modeToolView, modeToolController);\n      }\n    },\n    didDetachController(modeToolController: ToolController): void {\n      this.owner.callObservers(\"controllerDidDetachModeTool\", modeToolController, this.owner);\n    },\n    controllerWillAttachToolView(modeToolView: ToolView, modeToolController: ToolController): void {\n      this.owner.callObservers(\"controllerWillAttachModeToolView\", modeToolView, modeToolController, this.owner);\n      this.attachToolView(modeToolView, modeToolController);\n    },\n    controllerDidDetachToolView(modeToolView: ToolView, modeToolController: ToolController): void {\n      this.detachToolView(modeToolView, modeToolController);\n      this.owner.callObservers(\"controllerDidDetachModeToolView\", modeToolView, modeToolController, this.owner);\n    },\n    attachToolView(modeToolView: ToolView, modeToolController: ToolController): void {\n      // hook\n    },\n    detachToolView(modeToolView: ToolView, modeToolController: ToolController): void {\n      // hook\n    },\n  })\n  readonly modeTools!: TraitViewControllerSet<this, Trait, ToolView, ToolController> & Observes<ToolController> & {\n    attachToolView(modeToolView: ToolView, modeToolController: ToolController): void,\n    detachToolView(modeToolView: ToolView, modeToolController: ToolController): void,\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport {Presence} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport {VectorIcon} from \"@swim/graphics\";\nimport {Controller} from \"@swim/controller\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport {ToolLayout} from \"@swim/toolbar\";\nimport {BarLayout} from \"@swim/toolbar\";\nimport type {ToolView} from \"@swim/toolbar\";\nimport {SearchToolView} from \"@swim/toolbar\";\nimport {ToolController} from \"@swim/toolbar\";\nimport {TitleToolController} from \"@swim/toolbar\";\nimport {ButtonToolController} from \"@swim/toolbar\";\nimport {SearchToolController} from \"@swim/toolbar\";\nimport type {BarView} from \"@swim/toolbar\";\nimport type {BarControllerObserver} from \"@swim/toolbar\";\nimport {BarController} from \"@swim/toolbar\";\nimport type {SheetView} from \"./SheetView\";\nimport {SheetController} from \"./SheetController\";\n\n/** @public */\nexport interface NavBarControllerObserver<C extends NavBarController = NavBarController> extends BarControllerObserver<C> {\n  controllerDidPressCloseButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidPressBackButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidPressSearchButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidUpdateSearch?(query: string, inputView: HtmlView, controller: C): void;\n\n  controllerDidSubmitSearch?(query: string, inputView: HtmlView, controller: C): void;\n\n  controllerDidCancelSearch?(inputView: HtmlView | null, controller: C): void;\n}\n\n/** @public */\nexport class NavBarController extends BarController {\n  declare readonly observerType?: Class<NavBarControllerObserver>;\n\n  @Property({valueType: Boolean, value: true, updateFlags: Controller.NeedsAssemble})\n  readonly showBackTitle!: Property<this, boolean>;\n\n  protected override createLayout(): BarLayout | null {\n    const frontController = this.front.controller;\n    if (frontController === null || !frontController.searching.value) {\n      return this.createNavLayout();\n    } else {\n      return this.createSearchLayout();\n    }\n  }\n\n  protected createNavLayout(): BarLayout | null {\n    const tools = new Array<ToolLayout>();\n\n    const frontController = this.front.controller;\n    const frontKey = frontController !== null ? \"title\" + frontController.uid : \"\";\n    const backController = frontController !== null ? frontController.back.controller : null;\n    const backKey = backController !== null ? \"title\" + backController.uid : void 0;\n    const showBackTitle = this.showBackTitle.value;\n\n    if (frontController === null || backController === null) {\n      const closeButtonController = this.closeButton.controller;\n      if (closeButtonController !== null) {\n        const closeButtonLayout = closeButtonController.layout.value;\n        if (closeButtonLayout !== null) {\n          tools.push(closeButtonLayout);\n        }\n        const closeButtonView = closeButtonController.tool.view;\n        if (closeButtonView !== null) {\n          this.closeButton.insertView();\n          closeButtonView.style.zIndex.setIntrinsic(2);\n        }\n      }\n    } else {\n      const backButtonController = this.backButton.controller;\n      if (backButtonController !== null) {\n        let backButtonLayout = backButtonController.layout.value;\n        if (backButtonLayout !== null) {\n          if (showBackTitle) {\n            backButtonLayout = backButtonLayout.withOverlap(backKey).withOverpad(16);\n          }\n          tools.push(backButtonLayout);\n        }\n        const backButtonView = this.backButton.insertView();\n        backButtonView.style.zIndex.setIntrinsic(2);\n      }\n    }\n\n    if (showBackTitle) {\n      if (backController !== null) {\n        const backTitleLayout = ToolLayout.create(backKey!, 0, 0, 0, 0, -1, -1);\n        tools.push(backTitleLayout);\n        const backTitleView = backController.title.insertView(this.bar.view, void 0, void 0, backKey);\n        if (backTitleView !== null) {\n          const timing = backTitleView.getLookOr(Look.timing, Mood.navigating, false);\n          backTitleView.style.color.setIntrinsic(Look.accentColor, timing);\n          backTitleView.style.zIndex.setIntrinsic(3);\n          backTitleView.style.pointerEvents.setIntrinsic(\"none\");\n        }\n      }\n      const frontTitleLayout = ToolLayout.create(frontKey, 1, 0, 0, 0.5, 1, 1);\n      tools.push(frontTitleLayout);\n      if (frontController !== null) {\n        const frontTitleView = frontController.title.insertView(this.bar.view, void 0, void 0, frontKey);\n        if (frontTitleView !== null) {\n          const timing = frontTitleView.getLookOr(Look.timing, Mood.navigating, false);\n          frontTitleView.style.color.setIntrinsic(Look.textColor, timing);\n          frontTitleView.style.zIndex.setIntrinsic(1);\n          frontTitleView.style.pointerEvents.setIntrinsic(\"auto\");\n        }\n      }\n    } else {\n      const barView = this.bar.view;\n      const oldBarLayout = barView !== null ? barView.layout.value : null;\n      const oldBackLayout = oldBarLayout !== null && backKey !== void 0 ? oldBarLayout.getTool(backKey) : null;\n      if (backController !== null && oldBackLayout !== null) {\n        const backTitleLayout = ToolLayout.create(backKey!, 0, 0, 0, 0, -1, -1).withPresence(Presence.dismissed());\n        tools.push(backTitleLayout);\n      }\n      let frontTitleLayout: ToolLayout;\n      if (oldBackLayout === null) {\n        frontTitleLayout = ToolLayout.create(frontKey, 1, 0, 0, 0.5, 0, 1);\n      } else {\n        frontTitleLayout = ToolLayout.create(frontKey, 1, 0, 0, 0.5, 1, 1);\n      }\n      tools.push(frontTitleLayout);\n      if (frontController !== null) {\n        const frontTitleView = frontController.title.insertView(this.bar.view, void 0, void 0, frontKey);\n        if (frontTitleView !== null) {\n          const timing = frontTitleView.getLookOr(Look.timing, Mood.navigating, false);\n          frontTitleView.style.color.setIntrinsic(Look.textColor, timing);\n          frontTitleView.style.zIndex.setIntrinsic(1);\n          frontTitleView.style.pointerEvents.setIntrinsic(\"auto\");\n        }\n      }\n    }\n\n    const searchButtonController = this.searchButton.controller;\n    if (searchButtonController !== null) {\n      const searchable = frontController !== null && frontController.searchable.value;\n      let searchButtonLayout = searchButtonController.layout.value;\n      if (searchButtonLayout !== null) {\n        if (!searchable) {\n          searchButtonLayout = searchButtonLayout.withKey(\"\");\n        }\n        tools.push(searchButtonLayout);\n      }\n      if (searchable) {\n        this.searchButton.insertView();\n      }\n    }\n\n    return BarLayout.create(tools);\n  }\n\n  protected createSearchLayout(): BarLayout | null {\n    const tools = new Array<ToolLayout>();\n\n    const searchInputController = this.searchInput.controller;\n    if (searchInputController !== null) {\n      const searchInputLayout = searchInputController.layout.value;\n      if (searchInputLayout !== null) {\n        tools.push(searchInputLayout);\n      }\n      this.searchInput.insertView();\n    }\n\n    const cancelSearchController = this.cancelSearch.controller;\n    if (cancelSearchController !== null) {\n      const cancelSearchLayout = cancelSearchController.layout.value;\n      if (cancelSearchLayout !== null) {\n        tools.push(cancelSearchLayout);\n      }\n      if (cancelSearchController.tool.view !== null) {\n        this.cancelSearch.insertView();\n      }\n    }\n\n    return BarLayout.create(tools);\n  }\n\n  @TraitViewControllerRef({\n    controllerType: ToolController,\n    binds: true,\n    viewKey: \"closeButton\",\n    observes: true,\n    get parentView(): BarView | null {\n      return this.owner.bar.view;\n    },\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    controllerDidPressToolView(input: PositionGestureInput, event: Event | null): void {\n      this.owner.callObservers(\"controllerDidPressCloseButton\", input, event, this.owner);\n    },\n    createController(): ToolController {\n      const toolController = new ButtonToolController();\n      const toolLayout = ToolLayout.create(this.viewKey!, 0, 0, 48);\n      toolController.layout.set(toolLayout);\n      const toolView = toolController.tool.attachView();\n      toolView.iconLayout.setIntrinsic({width: 24, height: 24});\n      toolView.graphics.setIntrinsic(this.owner.closeIcon);\n      return toolController;\n    },\n  })\n  readonly closeButton!: TraitViewControllerRef<this, Trait, ToolView, ToolController> & Observes<ButtonToolController>;\n\n  @TraitViewControllerRef({\n    controllerType: ToolController,\n    binds: true,\n    viewKey: \"backButton\",\n    observes: true,\n    get parentView(): BarView | null {\n      return this.owner.bar.view;\n    },\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    controllerDidPressToolView(input: PositionGestureInput, event: Event | null): void {\n      this.owner.callObservers(\"controllerDidPressBackButton\", input, event, this.owner);\n    },\n    createController(): ToolController {\n      const toolController = new ButtonToolController();\n      const toolLayout = ToolLayout.create(this.viewKey!, 0, 0, 48);\n      toolController.layout.set(toolLayout);\n      const toolView = toolController.tool.attachView();\n      toolView.iconLayout.setIntrinsic({width: 24, height: 24});\n      toolView.graphics.setIntrinsic(this.owner.backIcon);\n      return toolController;\n    },\n  })\n  readonly backButton!: TraitViewControllerRef<this, Trait, ToolView, ToolController> & Observes<ButtonToolController>;\n\n  @TraitViewControllerRef({\n    controllerType: ToolController,\n    binds: true,\n    viewKey: \"searchButton\",\n    observes: true,\n    get parentView(): BarView | null {\n      return this.owner.bar.view;\n    },\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    controllerDidPressToolView(input: PositionGestureInput, event: Event | null): void {\n      this.owner.callObservers(\"controllerDidPressSearchButton\", input, event, this.owner);\n    },\n    createController(): ToolController {\n      const toolController = new ButtonToolController();\n      const toolLayout = ToolLayout.create(this.viewKey!, 0, 0, 48);\n      toolController.layout.set(toolLayout);\n      const toolView = toolController.tool.attachView();\n      toolView.iconLayout.setIntrinsic({width: 24, height: 24});\n      toolView.graphics.setIntrinsic(this.owner.searchIcon);\n      return toolController;\n    },\n  })\n  readonly searchButton!: TraitViewControllerRef<this, Trait, ToolView, ToolController> & Observes<ButtonToolController>;\n\n  @TraitViewControllerRef({\n    controllerType: ToolController,\n    binds: true,\n    viewKey: \"searchInput\",\n    observes: true,\n    get parentView(): BarView | null {\n      return this.owner.bar.view;\n    },\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    controllerDidUpdateSearch(query: string, inputView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidUpdateSearch\", query, inputView, this.owner);\n    },\n    controllerDidSubmitSearch(query: string, inputView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidSubmitSearch\", query, inputView, this.owner);\n    },\n    controllerDidCancelSearch(inputView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidCancelSearch\", inputView, this.owner);\n    },\n    createController(): ToolController {\n      const toolController = new SearchToolController();\n      const toolLayout = ToolLayout.create(this.viewKey!, 1, 0, 0, 0.5);\n      toolController.layout.set(toolLayout);\n      const toolView = toolController.tool.attachView()!;\n      toolView.stylesheet.insertView();\n      toolView.input.insertView().setIntrinsic({\n        attributes: {\n          placeholder: \"Search\",\n        },\n        style: {\n          marginLeft: 8,\n          marginRight: 8,\n        },\n      });\n      return toolController;\n    },\n  })\n  readonly searchInput!: TraitViewControllerRef<this, Trait, ToolView, ToolController> & Observes<SearchToolController>;\n\n  @TraitViewControllerRef({\n    controllerType: ToolController,\n    binds: true,\n    viewKey: \"cancelSearch\",\n    observes: true,\n    get parentView(): BarView | null {\n      return this.owner.bar.view;\n    },\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    controllerDidPressToolView(input: PositionGestureInput, event: Event | null): void {\n      const searchInputView = this.owner.searchInput.view;\n      const inputView = searchInputView instanceof SearchToolView ? searchInputView.input.view : null;\n      this.owner.callObservers(\"controllerDidCancelSearch\", inputView, this.owner);\n    },\n    createController(): ToolController {\n      const toolController = new TitleToolController();\n      const toolLayout = ToolLayout.create(this.viewKey!, 0, 0, 72, 0.5);\n      toolController.layout.set(toolLayout);\n      toolController.tool.attachView().setIntrinsic({\n        style: {\n          color: Look.accentColor,\n          cursor: \"pointer\",\n        },\n        content: \"Cancel\",\n      });\n      return toolController;\n    },\n  })\n  readonly cancelSearch!: TraitViewControllerRef<this, Trait, ToolView, ToolController> & Observes<ToolController>;\n\n  @TraitViewControllerRef({\n    controllerType: SheetController,\n    inherits: true,\n    observes: true,\n    getTraitViewRef(frontController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return frontController.sheet;\n    },\n    willAttachController(frontController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    didDetachController(frontController: SheetController): void {\n      if (frontController.back.controller === null && frontController.forward.controller === null) {\n        this.owner.requireUpdate(Controller.NeedsAssemble);\n      }\n    },\n    controllerWillAttachBack(backController: SheetController, frontController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidDetachBack(backController: SheetController, frontController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerWillAttachForward(forwardController: SheetController, frontController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidDetachForward(forwardController: SheetController, frontController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidSetSearchable(searchable: boolean, frontController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidSetSearching(searching: boolean, frontController: SheetController): void {\n      if (searching) {\n        this.owner.updateLayout();\n      } else {\n        this.owner.requireUpdate(Controller.NeedsAssemble);\n      }\n    },\n    controllerWillAttachTitle(titleController: ToolController, frontController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidDetachTitle(titleController: ToolController, frontController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n  })\n  readonly front!: TraitViewControllerRef<this, Trait, SheetView, SheetController> & Observes<SheetController>;\n\n  get closeIcon(): VectorIcon {\n    return NavBarController.closeIcon;\n  }\n\n  get backIcon(): VectorIcon {\n    return NavBarController.backIcon;\n  }\n\n  get searchIcon(): VectorIcon {\n    return NavBarController.searchIcon;\n  }\n\n  /** @internal */\n  @Lazy\n  static get closeIcon(): VectorIcon {\n    return VectorIcon.create(24, 24, \"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12Z\");\n  }\n\n  /** @internal */\n  @Lazy\n  static get backIcon(): VectorIcon {\n    return VectorIcon.create(24, 24, \"M17.77,3.77L16,2L6,12L16,22L17.77,20.23L9.54,12Z\").withFillLook(Look.accentColor);\n  }\n\n  /** @internal */\n  @Lazy\n  static get searchIcon(): VectorIcon {\n    return VectorIcon.create(24, 24, \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\");\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Length} from \"@swim/math\";\nimport type {ViewInsets} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {BarView} from \"@swim/toolbar\";\nimport {SheetView} from \"./SheetView\";\n\n/** @public */\nexport interface StackViewObserver<V extends StackView = StackView> extends HtmlViewObserver<V> {\n  viewWillAttachNavBar?(navBarView: BarView, targetView: View | null, view: V): void;\n\n  viewDidDetachNavBar?(navBarView: BarView, view: V): void;\n\n  viewWillAttachSheet?(sheetView: SheetView, targetView: View | null, view: V): void;\n\n  viewDidDetachSheet?(sheetView: SheetView, view: V): void;\n\n  viewWillAttachFront?(frontView: SheetView, targetView: View | null, view: V): void;\n\n  viewDidDetachFront?(frontView: SheetView, view: V): void;\n\n  viewWillPresentSheet?(sheetView: SheetView, view: V): void;\n\n  viewDidPresentSheet?(sheetView: SheetView, view: V): void;\n\n  viewWillDismissSheet?(sheetView: SheetView, view: V): void;\n\n  viewDidDismissSheet?(sheetView: SheetView, view: V): void;\n}\n\n/** @public */\nexport class StackView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initStack();\n  }\n\n  protected initStack(): void {\n    this.setIntrinsic<StackView>({\n      classList: [\"stack\"],\n      style: {\n        position: \"relative\",\n        overflow: \"hidden\",\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<StackViewObserver>;\n\n  @ViewRef({\n    viewType: BarView,\n    binds: true,\n    observes: true,\n    initView(navBarView: BarView): void {\n      navBarView.placement.setIntrinsic(\"top\");\n      navBarView.style.setIntrinsic({\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: this.owner.style.width.cssState,\n        zIndex: 1,\n      });\n    },\n    willAttachView(navBarView: BarView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachNavBar\", navBarView, target, this.owner);\n    },\n    didAttachView(navBarView: BarView, target: View | null): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n    willDetachView(navBarView: BarView): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n    didDetachView(navBarView: BarView): void {\n      this.owner.callObservers(\"viewDidDetachNavBar\", navBarView, this.owner);\n    },\n    viewDidSetBarHeight(barHeight: Length | null): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n    viewDidMount(): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n    viewWillUnmount(): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n  })\n  readonly navBar!: ViewRef<this, BarView> & Observes<BarView>;\n\n  @ViewSet({\n    viewType: SheetView,\n    binds: true,\n    observes: true,\n    initView(sheetView: SheetView): void {\n      const stackWidth = this.owner.style.width.cssState;\n      const stackHeight = this.owner.style.height.cssState;\n\n      const navBarView = this.owner.navBar.view;\n      const navBarHeight = navBarView !== null && navBarView.mounted\n                         ? navBarView.style.height.cssState : null;\n\n      sheetView.style.setIntrinsic({\n        position: \"absolute\",\n        left: stackWidth,\n        top: 0,\n        width: stackWidth,\n        height: stackHeight,\n        paddingTop: navBarHeight,\n        boxSizing: \"border-box\",\n        zIndex: 0,\n      });\n    },\n    willAttachView(sheetView: SheetView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachSheet\", sheetView, target, this.owner);\n    },\n    didDetachView(sheetView: SheetView): void {\n      this.owner.callObservers(\"viewDidDetachSheet\", sheetView, this.owner);\n    },\n    viewWillPresent(sheetView: SheetView): void {\n      this.owner.callObservers(\"viewWillPresentSheet\", sheetView, this.owner);\n    },\n    viewDidPresent(sheetView: SheetView): void {\n      this.owner.callObservers(\"viewDidPresentSheet\", sheetView, this.owner);\n    },\n    viewWillDismiss(sheetView: SheetView): void {\n      this.owner.callObservers(\"viewWillDismissSheet\", sheetView, this.owner);\n    },\n    viewDidDismiss(sheetView: SheetView): void {\n      this.owner.callObservers(\"viewDidDismissSheet\", sheetView, this.owner);\n    },\n    viewWillLayout(sheetView: SheetView): void {\n      sheetView.layoutSheet();\n    },\n  })\n  readonly sheets!: ViewSet<this, SheetView> & Observes<SheetView>;\n\n  @ViewRef({\n    viewType: SheetView,\n    binds: false,\n    willAttachView(sheetView: SheetView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachFront\", sheetView, target, this.owner);\n    },\n    didDetachView(sheetView: SheetView): void {\n      this.owner.callObservers(\"viewDidDetachFront\", sheetView, this.owner);\n    },\n  })\n  readonly front!: ViewRef<this, SheetView>;\n\n  @Property({\n    extends: true,\n    getOutletValue(outlet: Property<unknown, ViewInsets>): ViewInsets {\n      let edgeInsets = this.value;\n      let navBarView: BarView | null;\n      if (outlet.owner instanceof SheetView\n          && (navBarView = this.owner.navBar.view) !== null\n          && navBarView.mounted) {\n        edgeInsets = {\n          insetTop: 0,\n          insetRight: edgeInsets.insetRight,\n          insetBottom: edgeInsets.insetBottom,\n          insetLeft: edgeInsets.insetLeft,\n        };\n      }\n      return edgeInsets;\n    },\n  })\n  override get edgeInsets(): Property<this, ViewInsets> {\n    return Property.getter();\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.resizeStack();\n  }\n\n  protected resizeStack(): void {\n    const stackWidth = this.style.width.cssState;\n    const stackHeight = this.style.height.cssState;\n\n    const navBarView = this.navBar.view;\n    let navBarHeight: Length | null = null;\n    if (navBarView !== null && navBarView.mounted) {\n      navBarView.style.width.setIntrinsic(stackWidth);\n      navBarHeight = navBarView.style.height.cssState;\n    }\n\n    const sheetViews = this.sheets.views;\n    for (const viewId in sheetViews) {\n      const sheetView = sheetViews[viewId]!;\n      sheetView.style.setIntrinsic({\n        width: stackWidth,\n        height: stackHeight,\n        paddingTop: navBarHeight,\n      });\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {ToolController} from \"@swim/toolbar\";\nimport type {BarView} from \"@swim/toolbar\";\nimport {BarController} from \"@swim/toolbar\";\nimport type {SheetView} from \"./SheetView\";\nimport {SheetController} from \"./SheetController\";\nimport {NavBarController} from \"./NavBarController\";\nimport {StackView} from \"./StackView\";\n\n/** @public */\nexport interface StackControllerObserver<C extends StackController = StackController> extends ControllerObserver<C> {\n  controllerWillAttachStackTrait?(stackTrait: Trait, controller: C): void;\n\n  controllerDidDetachStackTrait?(stackTrait: Trait, controller: C): void;\n\n  controllerWillAttachStackView?(stackView: StackView, controller: C): void;\n\n  controllerDidDetachStackView?(stackView: StackView, controller: C): void;\n\n  controllerWillAttachNavBar?(navBarController: BarController, controller: C): void;\n\n  controllerDidDetachNavBar?(navBarController: BarController, controller: C): void;\n\n  controllerWillAttachNavBarView?(navBarView: BarView, controller: C): void;\n\n  controllerDidDetachNavBarView?(navBarView: BarView, controller: C): void;\n\n  controllerDidPressCloseButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidPressBackButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidPressSearchButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerWillAttachSheet?(sheetController: SheetController, controller: C): void;\n\n  controllerDidDetachSheet?(sheetController: SheetController, controller: C): void;\n\n  controllerWillAttachSheetTrait?(sheetTrait: Trait, sheetController: SheetController, controller: C): void;\n\n  controllerDidDetachSheetTrait?(sheetTrait: Trait, sheetController: SheetController, controller: C): void;\n\n  controllerWillAttachSheetView?(sheetView: SheetView, sheetController: SheetController, controller: C): void;\n\n  controllerDidDetachSheetView?(sheetView: SheetView, sheetController: SheetController, controller: C): void;\n\n  controllerWillAttachSheetTitle?(titleController: ToolController, sheetController: SheetController, controller: C): void;\n\n  controllerDidDetachSheetTitle?(titleController: ToolController, sheetController: SheetController, controller: C): void;\n\n  controllerWillAttachRoot?(rootController: SheetController, controller: C): void;\n\n  controllerDidDetachRoot?(rootController: SheetController, controller: C): void;\n\n  controllerWillAttachRootTrait?(rootTrait: Trait, controller: C): void;\n\n  controllerDidDetachRootTrait?(rootTrait: Trait, controller: C): void;\n\n  controllerWillAttachRootView?(rootView: SheetView, controller: C): void;\n\n  controllerDidDetachRootView?(rootView: SheetView, controller: C): void;\n\n  controllerWillAttachFront?(frontController: SheetController, controller: C): void;\n\n  controllerDidDetachFront?(frontController: SheetController, controller: C): void;\n\n  controllerWillAttachFrontTrait?(frontTrait: Trait, controller: C): void;\n\n  controllerDidDetachFrontTrait?(frontTrait: Trait, controller: C): void;\n\n  controllerWillAttachFrontView?(frontView: SheetView, controller: C): void;\n\n  controllerDidDetachFrontView?(frontView: SheetView, controller: C): void;\n}\n\n/** @public */\nexport class StackController extends Controller {\n  declare readonly observerType?: Class<StackControllerObserver>;\n\n  @Property({valueType: Number, value: -(1 / 3)})\n  readonly backAlign!: Property<this, number>;\n\n  @TraitViewRef({\n    willAttachTrait(stackTrait: Trait): void {\n      this.owner.callObservers(\"controllerWillAttachStackTrait\", stackTrait, this.owner);\n    },\n    didDetachTrait(stackTrait: Trait): void {\n      this.owner.callObservers(\"controllerDidDetachStackTrait\", stackTrait, this.owner);\n    },\n    viewType: StackView,\n    observesView: true,\n    initView(stackView: StackView): void {\n      const navBarController = this.owner.navBar.controller;\n      if (navBarController !== null) {\n        navBarController.bar.insertView(stackView);\n        if (stackView.navBar.view === null) {\n          stackView.navBar.setView(navBarController.bar.view);\n        }\n      }\n      const sheetControllers = this.owner.sheets.controllers;\n      for (const controllerId in sheetControllers) {\n        const sheetController = sheetControllers[controllerId]!;\n        const sheetView = sheetController.sheet.view;\n        if (sheetView !== null && sheetView.parent === null) {\n          const sheetTrait = sheetController.sheet.trait;\n          if (sheetTrait !== null) {\n            sheetController.sheet.insertView(stackView, void 0, void 0, sheetTrait.key);\n          }\n        }\n      }\n    },\n    willAttachView(stackView: StackView): void {\n      this.owner.callObservers(\"controllerWillAttachStackView\", stackView, this.owner);\n    },\n    didDetachView(stackView: StackView): void {\n      this.owner.callObservers(\"controllerDidDetachStackView\", stackView, this.owner);\n    },\n    viewWillAttachNavBar(navBarView: BarView): void {\n      const navBarController = this.owner.navBar.controller;\n      if (navBarController !== null) {\n        navBarController.bar.setView(navBarView);\n      }\n    },\n    viewDidDetachNavBar(navBarView: BarView): void {\n      const navBarController = this.owner.navBar.controller;\n      if (navBarController !== null) {\n        navBarController.bar.setView(null);\n      }\n    },\n  })\n  readonly stack!: TraitViewRef<this, Trait, StackView> & Observes<StackView>;\n\n  protected didPressCloseButton(input: PositionGestureInput, event: Event | null): void {\n    this.callObservers(\"controllerDidPressCloseButton\", input, event, this);\n  }\n\n  protected didPressBackButton(input: PositionGestureInput, event: Event | null): void {\n    this.callObservers(\"controllerDidPressBackButton\", input, event, this);\n    if (!input.defaultPrevented) {\n      this.front.dismiss();\n    }\n  }\n\n  protected didPressSearchButton(input: PositionGestureInput, event: Event | null): void {\n    this.callObservers(\"controllerDidPressSearchButton\", input, event, this);\n  }\n\n  @TraitViewControllerRef({\n    controllerType: BarController,\n    binds: true,\n    observes: true,\n    get parentView(): StackView | null {\n      return this.owner.stack.view;\n    },\n    getTraitViewRef(navBarController: BarController): TraitViewRef<unknown, Trait, BarView> {\n      return navBarController.bar;\n    },\n    willAttachController(navBarController: BarController): void {\n      this.owner.callObservers(\"controllerWillAttachNavBar\", navBarController, this.owner);\n    },\n    didAttachController(navBarController: BarController): void {\n      navBarController.bar.insertView();\n    },\n    willDetachController(navBarController: BarController): void {\n      const navBarView = navBarController.bar.view;\n      if (navBarView !== null) {\n        this.detachNavBarView(navBarView, navBarController);\n      }\n    },\n    didDetachController(navBarController: BarController): void {\n      this.owner.callObservers(\"controllerDidDetachNavBar\", navBarController, this.owner);\n    },\n    controllerWillAttachBarView(navBarView: BarView, navBarController: BarController): void {\n      this.owner.callObservers(\"controllerWillAttachNavBarView\", navBarView, this.owner);\n      this.attachNavBarView(navBarView, navBarController);\n    },\n    controllerDidDetachBarView(navBarView: BarView, navBarController: BarController): void {\n      this.detachNavBarView(navBarView, navBarController);\n      this.owner.callObservers(\"controllerDidDetachNavBarView\", navBarView, this.owner);\n    },\n    attachNavBarView(navBarView: BarView, navBarController: BarController): void {\n      const stackView = this.owner.stack.view;\n      if (stackView !== null && stackView.navBar.view === null) {\n        stackView.navBar.setView(navBarView);\n      }\n      const frontView = this.owner.front.view;\n      if (frontView !== null) {\n        this.frontViewDidScroll(frontView, navBarController);\n      }\n    },\n    detachNavBarView(navBarView: BarView, navBarController: BarController): void {\n      navBarView.remove();\n    },\n    controllerDidPressCloseButton(input: PositionGestureInput, event: Event | null): void {\n      this.owner.didPressCloseButton(input, event);\n    },\n    controllerDidPressBackButton(input: PositionGestureInput, event: Event | null): void {\n      this.owner.didPressBackButton(input, event);\n    },\n    controllerDidPressSearchButton(input: PositionGestureInput, event: Event | null): void {\n      this.owner.didPressSearchButton(input, event);\n    },\n    frontViewDidScroll(frontView: SheetView, navBarController: BarController): void {\n      // hook\n    },\n    createController(): BarController {\n      return new NavBarController();\n    },\n  })\n  readonly navBar!: TraitViewControllerRef<this, Trait, BarView, BarController> & Observes<NavBarController> & {\n    attachNavBarView(navBarView: BarView, navBarController: BarController): void;\n    detachNavBarView(navBarView: BarView, navBarController: BarController): void;\n    frontViewDidScroll(frontView: SheetView, navBarController: BarController): void;\n  };\n\n  @TraitViewControllerSet({\n    controllerType: SheetController,\n    binds: false,\n    observes: true,\n    get parentView(): StackView | null {\n      return this.owner.stack.view;\n    },\n    getTraitViewRef(sheetController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return sheetController.sheet;\n    },\n    willAttachController(sheetController: SheetController): void {\n      const backController = this.owner.front.controller;\n      if (sheetController !== backController) {\n        sheetController.back.setController(backController);\n        if (backController !== null) {\n          backController.forward.setController(sheetController);\n        }\n        if (this.owner.root.controller === null) {\n          this.owner.root.setController(sheetController);\n        }\n        this.owner.front.setController(sheetController);\n      }\n      this.owner.callObservers(\"controllerWillAttachSheet\", sheetController, this.owner);\n    },\n    didAttachController(sheetController: SheetController): void {\n      const sheetTrait = sheetController.sheet.trait;\n      if (sheetTrait !== null) {\n        this.attachSheetTrait(sheetTrait, sheetController);\n      }\n      const sheetView = sheetController.sheet.view;\n      if (sheetView !== null) {\n        this.attachSheetView(sheetView, sheetController);\n      }\n    },\n    willDetachController(sheetController: SheetController): void {\n      const sheetView = sheetController.sheet.view;\n      if (sheetView !== null) {\n        this.detachSheetView(sheetView, sheetController);\n      }\n      const sheetTrait = sheetController.sheet.trait;\n      if (sheetTrait !== null) {\n        this.detachSheetTrait(sheetTrait, sheetController);\n      }\n    },\n    didDetachController(sheetController: SheetController): void {\n      const backController = sheetController.back.controller;\n      const forwardController = sheetController.forward.controller;\n      if (sheetController === this.owner.front.controller) {\n        this.owner.front.setController(backController, forwardController);\n      }\n      if (backController !== null) {\n        backController.forward.setController(forwardController);\n        sheetController.back.setController(null);\n      }\n      if (forwardController !== null) {\n        sheetController.forward.setController(null);\n        forwardController.back.setController(backController);\n      }\n      this.owner.callObservers(\"controllerDidDetachSheet\", sheetController, this.owner);\n    },\n    controllerWillAttachSheetTrait(sheetTrait: Trait, sheetController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachSheetTrait\", sheetTrait, sheetController, this.owner);\n      this.attachSheetTrait(sheetTrait, sheetController);\n    },\n    controllerDidDetachSheetTrait(sheetTrait: Trait, sheetController: SheetController): void {\n      this.detachSheetTrait(sheetTrait, sheetController);\n      this.owner.callObservers(\"controllerDidDetachSheetTrait\", sheetTrait, sheetController, this.owner);\n    },\n    attachSheetTrait(sheetTrait: Trait, sheetController: SheetController): void {\n      // hook\n    },\n    detachSheetTrait(sheetTrait: Trait, sheetController: SheetController): void {\n      // hook\n    },\n    controllerWillAttachSheetView(sheetView: SheetView, sheetController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachSheetView\", sheetView, sheetController, this.owner);\n      this.attachSheetView(sheetView, sheetController);\n    },\n    controllerDidDetachSheetView(sheetView: SheetView, sheetController: SheetController): void {\n      this.detachSheetView(sheetView, sheetController);\n      this.owner.callObservers(\"controllerDidDetachSheetView\", sheetView, sheetController, this.owner);\n    },\n    attachSheetView(sheetView: SheetView, sheetController: SheetController): void {\n      const titleController = sheetController.title.controller;\n      if (titleController !== null) {\n        this.attachTitle(titleController, sheetController);\n      }\n      const stackView = this.owner.stack.view;\n      if (stackView !== null) {\n        stackView.sheets.addView(sheetView);\n      }\n    },\n    detachSheetView(sheetView: SheetView, sheetController: SheetController): void {\n      const titleController = sheetController.title.controller;\n      if (titleController !== null) {\n        this.detachTitle(titleController, sheetController);\n      }\n      sheetView.remove();\n    },\n    controllerWillAttachTitle(titleController: ToolController, sheetController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachSheetTitle\", titleController, sheetController, this.owner);\n      this.attachTitle(titleController, sheetController);\n    },\n    controllerDidDetachTitle(titleController: ToolController, sheetController: SheetController): void {\n      this.detachTitle(titleController, sheetController);\n      this.owner.callObservers(\"controllerDidDetachSheetTitle\", titleController, sheetController, this.owner);\n    },\n    attachTitle(titleController: ToolController, sheetController: SheetController): void {\n      // hook\n    },\n    detachTitle(titleController: ToolController, sheetController: SheetController): void {\n      titleController.remove();\n    },\n    controllerWillPresentSheetView(sheetView: SheetView, sheetController: SheetController): void {\n      // hook\n    },\n    controllerDidPresentSheetView(sheetView: SheetView, sheetController: SheetController): void {\n      // hook\n    },\n    controllerWillDismissSheetView(sheetView: SheetView, sheetController: SheetController): void {\n      if (sheetController === this.owner.front.controller) {\n        this.owner.front.setController(null);\n        const backController = sheetController.back.controller;\n        if (backController !== null) {\n          this.owner.front.setController(backController, sheetController);\n          backController.forward.setController(null);\n          sheetController.back.setController(null);\n        }\n      }\n    },\n    controllerDidDismissSheetView(sheetView: SheetView, sheetController: SheetController): void {\n      const stackView = this.owner.stack.view;\n      if (stackView !== null) {\n        if (sheetController.forward.controller !== null) {\n          stackView.sheets.removeView(sheetView);\n        } else {\n          stackView.sheets.deleteView(sheetView);\n        }\n      }\n      if (sheetController.forward.controller === null) {\n        this.deleteController(sheetController);\n      }\n    },\n  })\n  readonly sheets!: TraitViewControllerSet<this, Trait, SheetView, SheetController> & Observes<SheetController> & {\n    attachSheetTrait(sheetTrait: Trait, sheetController: SheetController): void;\n    detachSheetTrait(sheetTrait: Trait, sheetController: SheetController): void;\n    attachSheetView(sheetView: SheetView, sheetController: SheetController): void;\n    detachSheetView(sheetView: SheetView, sheetController: SheetController): void;\n    attachTitle(titleController: ToolController, sheetController: SheetController): void;\n    detachTitle(titleController: ToolController, sheetController: SheetController): void;\n  };\n\n  @TraitViewControllerRef({\n    controllerType: SheetController,\n    binds: false,\n    observes: true,\n    getTraitViewRef(rootController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return rootController.sheet;\n    },\n    willAttachController(rootController: SheetController, targetController: Controller | null): void {\n      this.owner.callObservers(\"controllerWillAttachRoot\", rootController, this.owner);\n    },\n    didAttachController(rootController: SheetController, targetController: Controller | null): void {\n      const rootTrait = rootController.sheet.trait;\n      if (rootTrait !== null) {\n        this.attachRootTrait(rootTrait, rootController);\n      }\n      const rootView = rootController.sheet.view;\n      if (rootView !== null) {\n        this.attachRootView(rootView, rootController);\n      }\n    },\n    willDetachController(rootController: SheetController): void {\n      const rootView = rootController.sheet.view;\n      if (rootView !== null) {\n        this.detachRootView(rootView, rootController);\n      }\n      const rootTrait = rootController.sheet.trait;\n      if (rootTrait !== null) {\n        this.detachRootTrait(rootTrait, rootController);\n      }\n    },\n    didDetachController(rootController: SheetController): void {\n      this.owner.callObservers(\"controllerDidDetachRoot\", rootController, this.owner);\n    },\n    controllerWillAttachSheetTrait(rootTrait: Trait, rootController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachRootTrait\", rootTrait, this.owner);\n      this.attachRootTrait(rootTrait, rootController);\n    },\n    controllerDidDetachSheetTrait(rootTrait: Trait, rootController: SheetController): void {\n      this.detachRootTrait(rootTrait, rootController);\n      this.owner.callObservers(\"controllerDidDetachRootTrait\", rootTrait, this.owner);\n    },\n    attachRootTrait(rootTrait: Trait, rootController: SheetController): void {\n      // hook\n    },\n    detachRootTrait(rootTrait: Trait, rootController: SheetController): void {\n      // hook\n    },\n    controllerWillAttachSheetView(rootView: SheetView, rootController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachRootView\", rootView, this.owner);\n      this.attachRootView(rootView, rootController);\n    },\n    controllerDidDetachSheetView(rootView: SheetView, rootController: SheetController): void {\n      this.detachRootView(rootView, rootController);\n      this.owner.callObservers(\"controllerDidDetachRootView\", rootView, this.owner);\n    },\n    attachRootView(rootView: SheetView, rootController: SheetController): void {\n      // hook\n    },\n    detachRootView(rootView: SheetView, rootController: SheetController): void {\n      // hook\n    },\n  })\n  readonly root!: TraitViewControllerRef<this, Trait, SheetView, SheetController> & Observes<SheetController> & {\n    attachRootTrait(rootTrait: Trait, rootController: SheetController): void;\n    detachRootTrait(rootTrait: Trait, rootController: SheetController): void;\n    attachRootView(rootView: SheetView, rootController: SheetController): void;\n    detachRootView(rootView: SheetView, rootController: SheetController): void;\n  };\n\n  @TraitViewControllerRef({\n    controllerType: SheetController,\n    binds: false,\n    observes: true,\n    getTraitViewRef(frontController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return frontController.sheet;\n    },\n    willAttachController(frontController: SheetController, targetController: Controller | null): void {\n      this.owner.callObservers(\"controllerWillAttachFront\", frontController, this.owner);\n    },\n    didAttachController(frontController: SheetController, targetController: Controller | null): void {\n      const frontTrait = frontController.sheet.trait;\n      if (frontTrait !== null) {\n        this.attachFrontTrait(frontTrait, frontController);\n      }\n      const frontView = frontController.sheet.view;\n      if (frontView !== null) {\n        const targetView = targetController instanceof SheetController ? targetController.sheet.view : null;\n        this.attachFrontView(frontView, targetView, frontController);\n      }\n    },\n    willDetachController(frontController: SheetController): void {\n      const frontView = frontController.sheet.view;\n      if (frontView !== null) {\n        this.detachFrontView(frontView, frontController);\n      }\n      const frontTrait = frontController.sheet.trait;\n      if (frontTrait !== null) {\n        this.detachFrontTrait(frontTrait, frontController);\n      }\n    },\n    didDetachController(frontController: SheetController): void {\n      this.owner.callObservers(\"controllerDidDetachFront\", frontController, this.owner);\n    },\n    controllerWillAttachSheetTrait(frontTrait: Trait, frontController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachFrontTrait\", frontTrait, this.owner);\n      this.attachFrontTrait(frontTrait, frontController);\n    },\n    controllerDidDetachSheetTrait(frontTrait: Trait, frontController: SheetController): void {\n      this.detachFrontTrait(frontTrait, frontController);\n      this.owner.callObservers(\"controllerDidDetachFrontTrait\", frontTrait, this.owner);\n    },\n    attachFrontTrait(frontTrait: Trait, frontController: SheetController): void {\n      // hook\n    },\n    detachFrontTrait(frontTrait: Trait, frontController: SheetController): void {\n      // hook\n    },\n    controllerWillAttachSheetView(frontView: SheetView, frontController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachFrontView\", frontView, this.owner);\n      const targetController = frontController.nextSibling;\n      const targetView = targetController instanceof SheetController ? targetController.sheet.view : null;\n      this.attachFrontView(frontView, targetView, frontController);\n    },\n    controllerDidDetachSheetView(frontView: SheetView, frontController: SheetController): void {\n      this.detachFrontView(frontView, frontController);\n      this.owner.callObservers(\"controllerDidDetachFrontView\", frontView, this.owner);\n    },\n    attachFrontView(frontView: SheetView, targetView: SheetView | null, frontController: SheetController): void {\n      const stackView = this.owner.stack.view;\n      if (stackView !== null) {\n        stackView.front.attachView(frontView, targetView);\n      }\n      this.presentFrontView(frontView, targetView, frontController);\n      const navBarController = this.owner.navBar.controller;\n      if (navBarController !== null) {\n        this.owner.navBar.frontViewDidScroll(frontView, navBarController);\n      }\n    },\n    detachFrontView(frontView: SheetView, frontController: SheetController): void {\n      const stackView = this.owner.stack.view;\n      if (stackView !== null) {\n        stackView.front.detachView();\n      }\n      this.dismissFrontView(frontView, frontController);\n    },\n    presentFrontView(frontView: SheetView, targetView: SheetView | null, frontController: SheetController): void {\n      let stackView: StackView | null;\n      if (frontView.parent === null && (stackView = this.owner.stack.view) !== null) {\n        stackView.insertChild(frontView, targetView);\n      }\n      if (frontController.forward.controller === null) {\n        frontView.sheetAlign.setIntrinsic(1);\n        frontView.present(frontController.back.controller !== null);\n      } else {\n        frontView.sheetAlign.setIntrinsic(this.owner.backAlign.value);\n        frontView.present();\n      }\n    },\n    dismissFrontView(frontView: SheetView, frontController: SheetController): void {\n      if (frontController.forward.controller !== null) {\n        frontView.sheetAlign.setIntrinsic(this.owner.backAlign.value);\n        frontView.dismiss();\n      } else {\n        frontView.sheetAlign.setIntrinsic(1);\n        frontView.dismiss();\n      }\n    },\n    controllerDidScrollSheetView(frontView: SheetView, frontController: SheetController): void {\n      const navBarController = this.owner.navBar.controller;\n      if (navBarController !== null) {\n        this.owner.navBar.frontViewDidScroll(frontView, navBarController);\n      }\n    },\n    dismiss(timing?: TimingLike | boolean | null): SheetView | null {\n      const frontView = this.view;\n      if (frontView !== null) {\n        frontView.dismiss(timing);\n      }\n      return frontView;\n    },\n  })\n  readonly front!: TraitViewControllerRef<this, Trait, SheetView, SheetController> & Observes<SheetController> & {\n    attachFrontTrait(frontTrait: Trait, frontController: SheetController): void;\n    detachFrontTrait(frontTrait: Trait, frontController: SheetController): void;\n    attachFrontView(frontView: SheetView, targetView: SheetView | null, frontController: SheetController): void;\n    detachFrontView(frontView: SheetView, frontController: SheetController): void;\n    presentFrontView(frontView: SheetView, targetView: SheetView | null, frontController: SheetController): void;\n    dismissFrontView(frontView: SheetView, frontController: SheetController): void;\n    dismiss(timing?: TimingLike | boolean | null): SheetView | null;\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport {Look} from \"@swim/theme\";\nimport {Mood} from \"@swim/theme\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {VectorIcon} from \"@swim/graphics\";\nimport {Controller} from \"@swim/controller\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport {ToolLayout} from \"@swim/toolbar\";\nimport {BarLayout} from \"@swim/toolbar\";\nimport type {ToolView} from \"@swim/toolbar\";\nimport {ToolController} from \"@swim/toolbar\";\nimport {ButtonToolView} from \"@swim/toolbar\";\nimport {ButtonToolController} from \"@swim/toolbar\";\nimport type {BarView} from \"@swim/toolbar\";\nimport type {BarControllerObserver} from \"@swim/toolbar\";\nimport {BarController} from \"@swim/toolbar\";\nimport type {SheetView} from \"./SheetView\";\nimport {SheetController} from \"./SheetController\";\n\n/** @public */\nexport interface AppBarControllerObserver<C extends AppBarController = AppBarController> extends BarControllerObserver<C> {\n  controllerDidPressMenuButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidPressActionButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n}\n\n/** @public */\nexport class AppBarController extends BarController {\n  declare readonly observerType?: Class<AppBarControllerObserver>;\n\n  protected override createLayout(): BarLayout | null {\n    const tools = new Array<ToolLayout>();\n\n    const menuButtonController = this.menuButton.controller;\n    if (menuButtonController !== null) {\n      const menuButtonLayout = menuButtonController.layout.value;\n      if (menuButtonLayout !== null) {\n        tools.push(menuButtonLayout);\n      }\n      if (menuButtonController.tool.view !== null) {\n        this.menuButton.insertView();\n      }\n    }\n\n    const modeToolControllers = new Array<ToolController>();\n    for (const controllerId in this.modeTools.controllers) {\n      modeToolControllers.push(this.modeTools.controllers[controllerId]!);\n    }\n    const modeToolCount = modeToolControllers.length;\n\n    for (let i = 0; i < modeToolCount; i += 1) {\n      const modeToolController = modeToolControllers[i]!;\n      let modeToolLayout = modeToolController.layout.value;\n      if (modeToolLayout !== null) {\n        const modeToolKey = \"mode\" + modeToolController.uid;\n        modeToolLayout = modeToolLayout.withKey(modeToolKey);\n        modeToolLayout = modeToolLayout.withPresence(void 0, null, null);\n        tools.push(modeToolLayout);\n        if (modeToolController.tool.view !== null) {\n          const targetToolController = i + 1 < modeToolCount ? modeToolControllers[i + 1] : null;\n          const targetToolView = targetToolController !== null ? modeToolController.tool.view : null;\n          modeToolController.tool.insertView(this.bar.view, void 0, targetToolView, modeToolKey);\n        }\n      }\n    }\n\n    if (modeToolCount !== 0) {\n      tools.push(ToolLayout.create(\"coverPadding\", 0, 0, 12));\n    }\n\n    const coverLayout = ToolLayout.create(\"cover\", 1, 0, 0, 0);\n    tools.push(coverLayout);\n    const coverController = this.cover.controller;\n    if (coverController !== null) {\n      const coverTitleView = coverController.title.insertView(this.bar.view, void 0, void 0, \"cover\");\n      if (coverTitleView !== null) {\n        const timing = coverTitleView.getLookOr(Look.timing, Mood.navigating, false);\n        coverTitleView.style.color.setIntrinsic(Look.textColor, timing);\n        coverTitleView.style.zIndex.setIntrinsic(1);\n      }\n    }\n\n    const actionButtonController = this.actionButton.controller;\n    if (actionButtonController !== null) {\n      const actionButtonLayout = actionButtonController.layout.value;\n      if (actionButtonLayout !== null) {\n        tools.push(actionButtonLayout);\n      }\n      if (actionButtonController.tool.view !== null) {\n        this.actionButton.insertView();\n      }\n    }\n\n    return BarLayout.create(tools);\n  }\n\n  @TraitViewControllerRef({\n    controllerType: ToolController,\n    binds: true,\n    viewKey: \"menuButton\",\n    observes: true,\n    get parentView(): BarView | null {\n      return this.owner.bar.view;\n    },\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    controllerDidPressToolView(input: PositionGestureInput, event: Event | null): void {\n      this.owner.callObservers(\"controllerDidPressMenuButton\", input, event, this.owner);\n    },\n    createController(): ToolController {\n      const toolController = new ButtonToolController();\n      const toolLayout = ToolLayout.create(this.viewKey!, 0, 0, 48);\n      toolController.layout.set(toolLayout);\n      const toolView = toolController.tool.attachView();\n      toolView.iconLayout.setIntrinsic({width: 24, height: 24});\n      if (this.owner.fullScreen.value) {\n        toolView.graphics.setIntrinsic(this.owner.menuIcon);\n      } else {\n        toolView.graphics.setIntrinsic(this.owner.menuCloseIcon);\n      }\n      return toolController;\n    },\n  })\n  readonly menuButton!: TraitViewControllerRef<this, Trait, ToolView, ToolController> & Observes<ButtonToolController>;\n\n  @TraitViewControllerRef({\n    controllerType: ToolController,\n    binds: true,\n    viewKey: \"actionButton\",\n    observes: true,\n    get parentView(): BarView | null {\n      return this.owner.bar.view;\n    },\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    controllerDidPressToolView(input: PositionGestureInput, event: Event | null): void {\n      this.owner.callObservers(\"controllerDidPressActionButton\", input, event, this.owner);\n    },\n    createController(): ToolController {\n      const toolController = new ButtonToolController();\n      const toolLayout = ToolLayout.create(this.viewKey!, 0, 0, 48);\n      toolController.layout.set(toolLayout);\n      const toolView = toolController.tool.attachView();\n      toolView.iconLayout.setIntrinsic({width: 24, height: 24});\n      toolView.graphics.setIntrinsic(this.owner.actionIcon);\n      return toolController;\n    },\n  })\n  readonly actionButton!: TraitViewControllerRef<this, Trait, ToolView, ToolController> & Observes<ButtonToolController>;\n\n  @TraitViewControllerRef({\n    controllerType: SheetController,\n    inherits: true,\n    observes: true,\n    getTraitViewRef(coverController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return coverController.sheet;\n    },\n    willAttachController(coverController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    didDetachController(coverController: SheetController): void {\n      if (coverController.back.controller === null && coverController.forward.controller === null) {\n        this.owner.requireUpdate(Controller.NeedsAssemble);\n      }\n    },\n    controllerWillAttachTitle(titleController: ToolController, coverController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidDetachTitle(titleController: ToolController, coverController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n  })\n  readonly cover!: TraitViewControllerRef<this, Trait, SheetView, SheetController> & Observes<SheetController>;\n\n  @TraitViewControllerSet({\n    controllerType: ToolController,\n    ordered: true,\n    inherits: true,\n    observes: true,\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    willAttachController(toolController: ToolController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    didDetachController(toolController: ToolController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerWillAttachToolView(toolView: ToolView, toolController: ToolController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidDetachToolView(toolView: ToolView, toolController: ToolController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n  })\n  readonly modeTools!: TraitViewControllerSet<this, Trait, ToolView, ToolController> & Observes<ToolController>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    inherits: true,\n    didSetValue(fullScreen: boolean): void {\n      const toolView = this.owner.menuButton.view;\n      if (toolView instanceof ButtonToolView) {\n        if (fullScreen) {\n          toolView.graphics.setIntrinsic(this.owner.menuIcon);\n        } else {\n          toolView.graphics.setIntrinsic(this.owner.menuCloseIcon);\n        }\n      }\n    },\n  })\n  readonly fullScreen!: Property<this, boolean>;\n\n  get menuIcon(): VectorIcon {\n    return AppBarController.menuIcon;\n  }\n\n  get menuCloseIcon(): VectorIcon {\n    return AppBarController.menuCloseIcon;\n  }\n\n  get actionIcon(): VectorIcon {\n    return AppBarController.actionIcon;\n  }\n\n  /** @internal */\n  @Lazy\n  static get menuIcon(): VectorIcon {\n    return VectorIcon.create(24, 24, \"M19,3C20.1,3,21,3.9,21,5L21,19C21,20.1,20.1,21,19,21L5,21C3.9,21,3,20.1,3,19L3,5C3,3.9,3.9,3,5,3L19,3ZM9,5L6,5C5.49,5,5.06,5.39,5.01,5.88L5,6L5,18C5,18.51,5.39,18.94,5.88,18.99L6,19L9,19L9,5ZM18,5L11,5L11,19L18,19C18.51,19,18.94,18.61,18.99,18.12L19,18L19,6C19,5.49,18.61,5.06,18.12,5.01L18,5ZM8,11L8,12L6,12L6,11L8,11ZM8,9L8,10L6,10L6,9L8,9ZM8,7L8,8L6,8L6,7L8,7Z\");\n  }\n\n  /** @internal */\n  @Lazy\n  static get menuCloseIcon(): VectorIcon {\n    return VectorIcon.create(24, 24, \"M19,3C20.1,3,21,3.9,21,5L21,19C21,20.1,20.1,21,19,21L5,21C3.9,21,3,20.1,3,19L3,5C3,3.9,3.9,3,5,3L19,3ZM9,5L6,5C5.49,5,5.06,5.39,5.01,5.88L5,6L5,18C5,18.51,5.39,18.94,5.88,18.99L6,19L9,19L9,5ZM18,5L11,5L11,19L18,19C18.51,19,18.94,18.61,18.99,18.12L19,18L19,6C19,5.49,18.61,5.06,18.12,5.01L18,5ZM8,11L8,12L6,12L6,11L8,11ZM8,9L8,10L6,10L6,9L8,9ZM8,7L8,8L6,8L6,7L8,7Z\");\n  }\n\n  /** @internal */\n  @Lazy\n  static get actionIcon(): VectorIcon {\n    return VectorIcon.create(24, 24, \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\");\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Length} from \"@swim/math\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport type {Presence} from \"@swim/style\";\nimport type {ViewInsets} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\nimport {BarView} from \"@swim/toolbar\";\nimport {DrawerView} from \"@swim/window\";\nimport {SheetView} from \"./SheetView\";\nimport {StackView} from \"./StackView\";\n\n/** @public */\nexport type FolioStyle = \"stacked\" | \"unstacked\";\n\n/** @public */\nexport interface FolioViewObserver<V extends FolioView = FolioView> extends HtmlViewObserver<V> {\n  viewDidSetFolioStyle?(folioStyle: FolioStyle | undefined, view: V): void;\n\n  viewDidSetFullBleed?(fullBleed: boolean, view: V): void;\n\n  viewWillAttachAppBar?(appBarView: BarView, targetView: View | null, view: V): void;\n\n  viewDidDetachAppBar?(appBarView: BarView, view: V): void;\n\n  viewWillAttachDrawer?(drawerView: DrawerView, targetView: View | null, view: V): void;\n\n  viewDidDetachDrawer?(drawerView: DrawerView, view: V): void;\n\n  viewWillAttachStack?(stackView: StackView, targetView: View | null, view: V): void;\n\n  viewDidDetachStack?(stackView: StackView, view: V): void;\n\n  viewWillAttachCover?(coverView: SheetView, targetView: View | null, view: V): void;\n\n  viewDidDetachCover?(coverView: SheetView, view: V): void;\n}\n\n/** @public */\nexport class FolioView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initFolio();\n  }\n\n  protected initFolio(): void {\n    this.setIntrinsic<FolioView>({\n      classList: [\"folio\"],\n      style: {\n        display: \"flex\",\n        position: \"relative\",\n        overflow: \"hidden\",\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<FolioViewObserver>;\n\n  @Property({\n    valueType: String,\n    updateFlags: View.NeedsResize,\n    didSetValue(folioStyle: FolioStyle | undefined): void {\n      this.owner.callObservers(\"viewDidSetFolioStyle\", folioStyle, this.owner);\n      this.owner.edgeInsets.decohereOutlets();\n    },\n  })\n  readonly folioStyle!: Property<this, FolioStyle | undefined>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(fullBleed: boolean): void {\n      this.owner.requireUpdate(View.NeedsResize, true);\n      this.owner.callObservers(\"viewDidSetFullBleed\", fullBleed, this.owner);\n    },\n  })\n  readonly fullBleed!: Property<this, boolean>;\n\n  @ViewRef({\n    viewType: BarView,\n    binds: true,\n    initView(appBarView: BarView): void {\n      const folioWidth = this.owner.style.width.cssState!;\n\n      const drawerView = this.owner.drawer.view;\n      const drawerWidth = drawerView !== null ? drawerView.effectiveWidth.value : null;\n      const sheetWidth = drawerWidth !== null ? folioWidth.minus(drawerWidth) : folioWidth;\n\n      appBarView.placement.setIntrinsic(\"top\");\n      appBarView.style.setIntrinsic({\n        position: \"absolute\",\n        left: drawerWidth,\n        top: 0,\n        width: sheetWidth,\n        zIndex: 1,\n      });\n    },\n    willAttachView(appBarView: BarView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachAppBar\", appBarView, target, this.owner);\n    },\n    didAttachView(navBarView: BarView, target: View | null): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n    willDetachView(navBarView: BarView): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n    didDetachView(appBarView: BarView): void {\n      this.owner.callObservers(\"viewDidDetachAppBar\", appBarView, this.owner);\n    },\n  })\n  readonly appBar!: ViewRef<this, BarView>;\n\n  @ViewRef({\n    viewType: DrawerView,\n    binds: true,\n    observes: true,\n    initView(drawerView: DrawerView): void {\n      drawerView.style.setIntrinsic({\n        overflow: \"hidden\",\n        zIndex: 2,\n      });\n      drawerView.present(false);\n    },\n    willAttachView(drawerView: DrawerView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachDrawer\", drawerView, target, this.owner);\n    },\n    didDetachView(drawerView: DrawerView): void {\n      this.owner.callObservers(\"viewDidDetachDrawer\", drawerView, this.owner);\n    },\n    insertChild(parent: View, childView: DrawerView, targetView: View | null, key: string | undefined): void {\n      parent.prependChild(childView, key);\n    },\n    viewDidSetPresence(presence: Presence, drawerView: DrawerView): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n    viewDidSetEffectiveWidth(effectiveWidth: Length | null, drawerView: DrawerView): void {\n      if (this.owner.folioStyle.value === \"unstacked\") {\n        this.owner.requireUpdate(View.NeedsResize);\n      }\n    },\n  })\n  readonly drawer!: ViewRef<this, DrawerView> & Observes<DrawerView>;\n\n  @ViewRef({\n    viewType: StackView,\n    initView(stackView: StackView): void {\n      stackView.style.flexGrow.setIntrinsic(1);\n    },\n    willAttachView(stackView: StackView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachStack\", stackView, target, this.owner);\n    },\n    didDetachView(stackView: StackView): void {\n      this.owner.callObservers(\"viewDidDetachStack\", stackView, this.owner);\n    },\n  })\n  readonly stack!: ViewRef<this, StackView>;\n\n  @ViewRef({\n    viewType: SheetView,\n    binds: false,\n    observes: true,\n    initView(coverView: SheetView): void {\n      if (this.owner.folioStyle.value === \"unstacked\") {\n        const folioWidth = this.owner.style.width.cssState!;\n        const folioHeight = this.owner.style.height.cssState!;\n\n        const drawerView = this.owner.drawer.view;\n        const drawerWidth = drawerView !== null ? drawerView.effectiveWidth.value : null;\n        const sheetWidth = drawerWidth !== null ? folioWidth.minus(drawerWidth) : folioWidth;\n\n        const appBarView = this.owner.appBar.view;\n        const appBarHeight = appBarView !== null ? appBarView.style.height.cssState : null;\n\n        coverView.style.setIntrinsic({\n          position: \"absolute\",\n          left: drawerWidth,\n          top: 0,\n          width: sheetWidth,\n          height: folioHeight,\n          paddingTop: appBarHeight,\n          boxSizing: \"border-box\",\n          zIndex: 0,\n        });\n      }\n    },\n    willAttachView(coverView: SheetView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachCover\", coverView, target, this.owner);\n    },\n    didAttachView(coverView: SheetView, target: View | null): void {\n      this.owner.fullBleed.setIntrinsic(coverView.fullBleed.value);\n    },\n    willDetachView(coverView: SheetView): void {\n      coverView.remove();\n    },\n    didDetachView(coverView: SheetView): void {\n      this.owner.callObservers(\"viewDidDetachCover\", coverView, this.owner);\n    },\n    viewDidSetFullBleed(fullBleed: boolean, coverView: SheetView): void {\n      this.owner.fullBleed.setIntrinsic(fullBleed);\n    },\n  })\n  readonly cover!: ViewRef<this, SheetView> & Observes<SheetView>;\n\n  @Property({\n    extends: true,\n    getOutletValue(outlet: Property<unknown, ViewInsets>): ViewInsets {\n      let edgeInsets = this.value;\n      if (this.owner.folioStyle.value === \"unstacked\") {\n        let insetTop = edgeInsets.insetTop;\n        const insetRight = edgeInsets.insetRight;\n        const insetBottom = edgeInsets.insetBottom;\n        let insetLeft = edgeInsets.insetLeft;\n        if (outlet.owner === this.owner.appBar.view) {\n          const drawerView = this.owner.drawer.view;\n          if (drawerView !== null) {\n            insetLeft *= 1 - drawerView.presence.value.phase;\n          }\n          edgeInsets = {insetTop, insetRight, insetBottom, insetLeft};\n        } else if (outlet.owner === this.owner.cover.view) {\n          if (this.owner.appBar.view !== null) {\n            insetTop = 0;\n          }\n          const drawerView = this.owner.drawer.view;\n          if (drawerView !== null) {\n            insetLeft *= 1 - drawerView.presence.value.phase;\n          }\n          edgeInsets = {insetTop, insetRight, insetBottom, insetLeft};\n        }\n      }\n      return edgeInsets;\n    },\n  })\n  override get edgeInsets(): Property<this, ViewInsets> {\n    return Property.getter();\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.resizeFolio();\n  }\n\n  protected resizeFolio(): void {\n    let folioStyle = this.folioStyle.value;\n    if (this.folioStyle.hasAffinity(Affinity.Intrinsic)) {\n      folioStyle = this.viewIdiom === \"mobile\" ? \"stacked\" : \"unstacked\";\n      this.folioStyle.setIntrinsic(folioStyle);\n    }\n\n    if (folioStyle === \"stacked\") {\n      this.resizeStacked();\n    } else if (folioStyle === \"unstacked\") {\n      this.resizeUnstacked();\n    }\n  }\n\n  protected resizeStacked(): void {\n    this.drawer.removeView();\n    this.appBar.removeView();\n    this.stack.insertView(this);\n\n    const coverView = this.cover.view;\n    if (coverView !== null) {\n      if (coverView.parent === this) {\n        coverView.remove();\n      }\n\n      coverView.style.paddingLeft.setIntrinsic(null);\n    }\n  }\n\n  protected resizeUnstacked(): void {\n    const folioWidth = this.style.width.cssState!;\n    const folioHeight = this.style.height.cssState!;\n\n    const drawerView = this.drawer.insertView();\n    const drawerWidth = drawerView.effectiveWidth.value;\n    const sheetWidth = drawerWidth !== null ? folioWidth.minus(drawerWidth) : folioWidth;\n\n    const appBarView = this.appBar.view;\n    let appBarHeight: Length | null = null;\n    if (appBarView !== null) {\n      this.appBar.insertView().style.setIntrinsic({\n        left: drawerWidth,\n        width: sheetWidth,\n      });\n      appBarHeight = appBarView.style.height.cssState;\n    }\n\n    this.stack.insertView(drawerView);\n\n    const coverView = this.cover.view;\n    if (coverView !== null) {\n      this.cover.insertView(this);\n      if (this.fullBleed.value) {\n        coverView.style.setIntrinsic({\n          left: 0,\n          top: 0,\n          width: folioWidth,\n          height: folioHeight,\n          paddingTop: appBarHeight,\n          paddingLeft: drawerWidth,\n        });\n      } else {\n        coverView.style.setIntrinsic({\n          left: drawerWidth,\n          top: 0,\n          width: sheetWidth,\n          height: folioHeight,\n          paddingTop: appBarHeight,\n          paddingLeft: null,\n        });\n      }\n      coverView.present(false);\n    }\n  }\n\n  protected override didLayout(): void {\n    this.layoutFolio();\n    super.didLayout();\n  }\n\n  protected layoutFolio(): void {\n    const folioStyle = this.folioStyle.value;\n    if (folioStyle === \"stacked\") {\n      this.layoutStacked();\n    } else if (folioStyle === \"unstacked\") {\n      this.layoutUnstacked();\n    }\n  }\n\n  protected layoutStacked(): void {\n    // hook\n  }\n\n  protected layoutUnstacked(): void {\n    const folioWidth = this.style.width.cssState!;\n\n    const drawerView = this.drawer.insertView();\n    const drawerWidth = drawerView.effectiveWidth.value;\n    const sheetWidth = drawerWidth !== null ? folioWidth.minus(drawerWidth) : folioWidth;\n\n    const appBarView = this.appBar.view;\n    if (appBarView !== null) {\n      appBarView.style.setIntrinsic({\n        left: drawerWidth,\n        width: sheetWidth,\n      });\n    }\n\n    const coverView = this.cover.view;\n    if (coverView !== null) {\n      if (this.fullBleed.value) {\n        coverView.style.setIntrinsic({\n          left: 0,\n          width: folioWidth,\n          paddingLeft: drawerWidth,\n        });\n      } else {\n        coverView.style.setIntrinsic({\n          left: drawerWidth,\n          width: 0,\n          paddingLeft: null,\n        });\n      }\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TimingLike} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {ToolView} from \"@swim/toolbar\";\nimport {ToolController} from \"@swim/toolbar\";\nimport {SearchToolController} from \"@swim/toolbar\";\nimport type {BarView} from \"@swim/toolbar\";\nimport {BarController} from \"@swim/toolbar\";\nimport {DrawerView} from \"@swim/window\";\nimport type {SheetView} from \"./SheetView\";\nimport {SheetController} from \"./SheetController\";\nimport {NavBarController} from \"./NavBarController\";\nimport type {StackView} from \"./StackView\";\nimport type {StackControllerObserver} from \"./StackController\";\nimport {StackController} from \"./StackController\";\nimport {AppBarController} from \"./AppBarController\";\nimport type {FolioStyle} from \"./FolioView\";\nimport {FolioView} from \"./FolioView\";\n\n/** @public */\nexport interface FolioControllerObserver<C extends FolioController = FolioController> extends StackControllerObserver<C> {\n  controllerWillAttachFolioTrait?(folioTrait: Trait, controller: C): void;\n\n  controllerDidDetachFolioTrait?(folioTrait: Trait, controller: C): void;\n\n  controllerWillAttachFolioView?(folioView: FolioView, controller: C): void;\n\n  controllerDidDetachFolioView?(folioView: FolioView, controller: C): void;\n\n  controllerDidSetFolioStyle(folioStyle: FolioStyle | undefined, controller: C): void;\n\n  controllerDidSetFullBleed(fullBleed: boolean, controller: C): void;\n\n  controllerDidSetFullScreen(fullScreen: boolean, controller: C): void;\n\n  controllerWillAttachAppBar?(appBarController: BarController, controller: C): void;\n\n  controllerDidDetachAppBar?(appBarController: BarController, controller: C): void;\n\n  controllerWillAttachAppBarView?(appBarView: BarView, controller: C): void;\n\n  controllerDidDetachAppBarView?(appBarView: BarView, controller: C): void;\n\n  controllerWillAttachDrawerView?(drawerView: DrawerView, controller: C): void;\n\n  controllerDidDetachDrawerView?(drawerView: DrawerView, controller: C): void;\n\n  controllerDidPressMenuButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerDidPressActionButton?(input: PositionGestureInput, event: Event | null, controller: C): void;\n\n  controllerWillAttachCover?(coverController: SheetController, controller: C): void;\n\n  controllerDidDetachCover?(coverController: SheetController, controller: C): void;\n\n  controllerWillAttachCoverTrait?(coverTrait: Trait, controller: C): void;\n\n  controllerDidDetachCoverTrait?(coverTrait: Trait, controller: C): void;\n\n  controllerWillAttachCoverView?(coverView: SheetView, controller: C): void;\n\n  controllerDidDetachCoverView?(coverView: SheetView, controller: C): void;\n\n  controllerWillAttachCoverModeTool?(modeToolController: ToolController, controller: C): void;\n\n  controllerDidDetachCoverModeTool?(modeToolController: ToolController, controller: C): void;\n\n  controllerWillAttachCoverModeToolView?(modeToolView: ToolView, modeToolController: ToolController, controller: C): void;\n\n  controllerDidDetachCoverModeToolView?(modeToolView: ToolView, modeToolController: ToolController, controller: C): void;\n}\n\n/** @public */\nexport class FolioController extends StackController {\n  declare readonly observerType?: Class<FolioControllerObserver>;\n\n  @Property({\n    valueType: String,\n    didSetValue(folioStyle: FolioStyle | undefined): void {\n      const coverController = this.owner.cover.controller;\n      if (coverController !== null) {\n        if (folioStyle === \"stacked\") {\n          this.owner.sheets.attachController(coverController);\n        } else if (folioStyle === \"unstacked\") {\n          if (this.owner.cover.view !== null) {\n            this.owner.cover.insertView(this.owner.folio.view);\n          }\n          this.owner.sheets.detachController(coverController);\n        }\n      }\n\n      const stackView = this.owner.stack.view;\n      if (stackView !== null) {\n        this.owner.stack.updateFolioStyle(folioStyle, stackView);\n      }\n      const navBarController = this.owner.navBar.controller;\n      if (navBarController !== null) {\n        this.owner.navBar.updateFolioStyle(folioStyle, navBarController);\n      }\n      const appBarController = this.owner.appBar.controller;\n      if (appBarController !== null) {\n        this.owner.appBar.updateFolioStyle(folioStyle, appBarController);\n      }\n      const sheetControllers = this.owner.sheets.controllers;\n      for (const controllerId in sheetControllers) {\n        const sheetController = sheetControllers[controllerId]!;\n        const sheetView = sheetController.sheet.view;\n        if (sheetView !== null) {\n          this.owner.sheets.updateFolioStyle(folioStyle, sheetView, sheetController);\n        }\n      }\n      this.owner.callObservers(\"controllerDidSetFolioStyle\", folioStyle, this.owner);\n      const folioView = this.owner.folio.view;\n      if (folioView !== null) {\n        folioView.folioStyle.setValue(folioStyle, Affinity.Inherited);\n      }\n    },\n  })\n  readonly folioStyle!: Property<this, FolioStyle | undefined>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(fullBleed: boolean): void {\n      const drawerView = this.owner.drawer.view;\n      if (drawerView !== null) {\n        this.owner.drawer.updateFullBleed(fullBleed, drawerView);\n      }\n      const stackView = this.owner.stack.view;\n      if (stackView !== null) {\n        this.owner.stack.updateFullBleed(fullBleed, stackView);\n      }\n      const sheetControllers = this.owner.sheets.controllers;\n      for (const controllerId in sheetControllers) {\n        const sheetController = sheetControllers[controllerId]!;\n        const sheetView = sheetController.sheet.view;\n        if (sheetView !== null) {\n          this.owner.sheets.updateFullBleed(fullBleed, sheetView, sheetController);\n        }\n      }\n      this.owner.callObservers(\"controllerDidSetFullBleed\", fullBleed, this.owner);\n      const folioView = this.owner.folio.view;\n      if (folioView !== null) {\n        folioView.fullBleed.setValue(fullBleed, Affinity.Inherited);\n      }\n    },\n  })\n  readonly fullBleed!: Property<this, boolean>;\n\n  @Property({\n    valueType: Boolean,\n    value: false,\n    didSetValue(fullScreen: boolean): void {\n      const drawerView = this.owner.drawer.view;\n      if (drawerView !== null) {\n        if (fullScreen) {\n          drawerView.dismiss();\n        } else {\n          drawerView.present();\n        }\n      }\n      this.owner.callObservers(\"controllerDidSetFullScreen\", fullScreen, this.owner);\n    },\n  })\n  readonly fullScreen!: Property<this, boolean>;\n\n  @TraitViewRef({\n    willAttachTrait(folioTrait: Trait): void {\n      this.owner.callObservers(\"controllerWillAttachFolioTrait\", folioTrait, this.owner);\n    },\n    didDetachTrait(folioTrait: Trait): void {\n      this.owner.callObservers(\"controllerDidDetachFolioTrait\", folioTrait, this.owner);\n    },\n    viewType: FolioView,\n    observesView: true,\n    initView(folioView: FolioView): void {\n      const appBarController = this.owner.appBar.controller;\n      if (appBarController !== null) {\n        appBarController.bar.attachView();\n        if (folioView.appBar.view === null) {\n          folioView.appBar.setView(appBarController.bar.view);\n        }\n      }\n      const coverController = this.owner.cover.controller;\n      if (coverController !== null) {\n        folioView.cover.setView(coverController.sheet.view);\n      }\n    },\n    willAttachView(folioView: FolioView): void {\n      this.owner.callObservers(\"controllerWillAttachFolioView\", folioView, this.owner);\n    },\n    didAttachView(folioView: FolioView): void {\n      this.owner.folioStyle.setIntrinsic(folioView.folioStyle.value);\n      this.owner.fullBleed.setIntrinsic(folioView.fullBleed.value);\n      this.owner.drawer.setView(folioView.drawer.attachView());\n      this.owner.stack.setView(folioView.stack.attachView());\n    },\n    willDetachView(folioView: FolioView): void {\n      this.owner.stack.setView(null);\n      this.owner.drawer.setView(null);\n    },\n    didDetachView(folioView: FolioView): void {\n      this.owner.callObservers(\"controllerDidDetachFolioView\", folioView, this.owner);\n    },\n    viewDidSetFolioStyle(folioStyle: FolioStyle | undefined, folioView: FolioView): void {\n      this.owner.folioStyle.setIntrinsic(folioStyle);\n    },\n    viewDidSetFullBleed(fullBleed: boolean, folioView: FolioView): void {\n      this.owner.fullBleed.setIntrinsic(fullBleed);\n    },\n    viewWillAttachDrawer(drawerView: DrawerView): void {\n      this.owner.drawer.setView(drawerView);\n    },\n    viewDidDetachDrawer(drawerView: DrawerView): void {\n      this.owner.drawer.setView(null);\n    },\n    viewWillAttachAppBar(appBarView: BarView): void {\n      const appBarController = this.owner.appBar.controller;\n      if (appBarController !== null) {\n        appBarController.bar.setView(appBarView);\n      }\n    },\n    viewDidDetachAppBar(appBarView: BarView): void {\n      const appBarController = this.owner.appBar.controller;\n      if (appBarController !== null) {\n        appBarController.bar.setView(null);\n      }\n    },\n  })\n  readonly folio!: TraitViewRef<this, Trait, FolioView> & Observes<FolioView>;\n\n  @TraitViewRef({\n    extends: true,\n    didAttachView(stackView: StackView, targetView: View | null): void {\n      super.didAttachView(stackView, targetView);\n      this.updateFolioStyle(this.owner.folioStyle.value, stackView);\n      this.updateFullBleed(this.owner.fullBleed.value, stackView);\n    },\n    updateFolioStyle(folioStyle: FolioStyle | undefined, stackView: StackView): void {\n      // hook\n    },\n    updateFullBleed(fullBleed: boolean, stackView: StackView): void {\n      // hook\n    },\n  })\n  override readonly stack!: TraitViewRef<this, Trait, StackView> & StackController[\"stack\"] & {\n    updateFolioStyle(folioStyle: FolioStyle | undefined, stackView: StackView): void;\n    updateFullBleed(fullBleed: boolean, stackView: StackView): void;\n  };\n\n  @TraitViewControllerSet({\n    extends: true,\n    attachSheetView(sheetView: SheetView, sheetController: SheetController): void {\n      super.attachSheetView(sheetView, sheetController);\n      this.updateFolioStyle(this.owner.folioStyle.value, sheetView, sheetController);\n      this.updateFullBleed(this.owner.fullBleed.value, sheetView, sheetController);\n    },\n    updateFolioStyle(folioStyle: FolioStyle | undefined, sheetView: SheetView, sheetController: SheetController): void {\n      // hook\n    },\n    updateFullBleed(fullBleed: boolean, sheetView: SheetView, sheetController: SheetController): void {\n      // hook\n    },\n  })\n  override readonly sheets!: TraitViewControllerSet<this, Trait, SheetView, SheetController> & StackController[\"sheets\"] & {\n    updateFolioStyle(folioStyle: FolioStyle | undefined, sheetView: SheetView, sheetController: SheetController): void,\n    updateFullBleed(fullBleed: boolean, sheetView: SheetView, sheetController: SheetController): void,\n  };\n\n  @TraitViewControllerRef({\n    extends: true,\n    initController(navBarController: BarController): void {\n      super.initController(navBarController);\n      this.updateFolioStyle(this.owner.folioStyle.value, navBarController);\n    },\n    updateFolioStyle(folioStyle: FolioStyle | undefined, navBarController: BarController): void {\n      // hook\n    },\n    controllerDidPressSearchButton(input: PositionGestureInput, event: Event | null, navBarController: BarController): void {\n      const frontController = this.owner.front.controller;\n      if (frontController !== null) {\n        frontController.searching.set(true);\n      }\n      if (navBarController instanceof NavBarController) {\n        const searchInputController = navBarController.searchInput.controller;\n        if (searchInputController instanceof SearchToolController) {\n          const inputView = searchInputController.input.view;\n          if (inputView !== null) {\n            inputView.node.focus();\n          }\n        }\n      }\n    },\n    controllerDidUpdateSearch(query: string, inputView: HtmlView, navBarController: BarController): void {\n      const frontController = this.owner.front.controller;\n      if (frontController !== null) {\n        frontController.updateSearch(query, inputView);\n      }\n    },\n    controllerDidSubmitSearch(query: string, inputView: HtmlView, navBarController: BarController): void {\n      const frontController = this.owner.front.controller;\n      if (frontController !== null) {\n        frontController.submitSearch(query, inputView);\n      }\n    },\n    controllerDidCancelSearch(inputView: HtmlView | null, navBarController: BarController): void {\n      const frontController = this.owner.front.controller;\n      if (frontController !== null) {\n        frontController.searching.set(false);\n      }\n    },\n  })\n  override readonly navBar!: TraitViewControllerRef<this, Trait, BarView, BarController> & StackController[\"navBar\"] & {\n    updateFolioStyle(folioStyle: FolioStyle | undefined, navBarController: BarController): void,\n  };\n\n  protected didPressMenuButton(input: PositionGestureInput, event: Event | null): void {\n    this.fullScreen.setIntrinsic(!this.fullScreen.value);\n    this.callObservers(\"controllerDidPressMenuButton\", input, event, this);\n  }\n\n  protected didPressActionButton(input: PositionGestureInput, event: Event | null): void {\n    this.callObservers(\"controllerDidPressActionButton\", input, event, this);\n  }\n\n  @TraitViewControllerRef({\n    controllerType: BarController,\n    binds: true,\n    observes: true,\n    get parentView(): FolioView | null {\n      return this.owner.folio.view;\n    },\n    getTraitViewRef(appBarController: BarController): TraitViewRef<unknown, Trait, BarView> {\n      return appBarController.bar;\n    },\n    initController(appBarController: BarController): void {\n      appBarController.bar.attachView();\n    },\n    willAttachController(appBarController: BarController): void {\n      this.owner.callObservers(\"controllerWillAttachAppBar\", appBarController, this.owner);\n    },\n    didAttachController(appBarController: BarController): void {\n      const appBarView = appBarController.bar.view;\n      if (appBarView !== null) {\n        this.attachAppBarView(appBarView, appBarController);\n      }\n    },\n    willDetachController(appBarController: BarController): void {\n      const appBarView = appBarController.bar.view;\n      if (appBarView !== null) {\n        this.detachAppBarView(appBarView, appBarController);\n      }\n    },\n    didDetachController(appBarController: BarController): void {\n      this.owner.callObservers(\"controllerDidDetachAppBar\", appBarController, this.owner);\n    },\n    controllerWillAttachBarView(appBarView: BarView, appBarController: BarController): void {\n      this.owner.callObservers(\"controllerWillAttachAppBarView\", appBarView, this.owner);\n      this.attachAppBarView(appBarView, appBarController);\n    },\n    controllerDidDetachBarView(appBarView: BarView, appBarController: BarController): void {\n      this.detachAppBarView(appBarView, appBarController);\n      this.owner.callObservers(\"controllerDidDetachAppBarView\", appBarView, this.owner);\n    },\n    attachAppBarView(appBarView: BarView, appBarController: BarController): void {\n      const folioView = this.owner.folio.view;\n      if (folioView !== null && folioView.appBar.view === null) {\n        folioView.appBar.setView(appBarView);\n      }\n      const coverView = this.owner.cover.view;\n      if (coverView !== null) {\n        this.coverViewDidScroll(coverView, appBarController);\n      }\n    },\n    detachAppBarView(appBarView: BarView, appBarController: BarController): void {\n      appBarView.remove();\n    },\n    updateFolioStyle(folioStyle: FolioStyle | undefined, appBarController: BarController): void {\n      appBarController.updateLayout();\n    },\n    coverViewDidScroll(coverView: SheetView, appBarController: BarController): void {\n      // hook\n    },\n    controllerDidPressMenuButton(input: PositionGestureInput, event: Event | null): void {\n      this.owner.didPressMenuButton(input, event);\n    },\n    controllerDidPressActionButton(input: PositionGestureInput, event: Event | null): void {\n      this.owner.didPressActionButton(input, event);\n    },\n    createController(): BarController {\n      return new AppBarController();\n    },\n  })\n  readonly appBar!: TraitViewControllerRef<this, Trait, BarView, BarController> & Observes<AppBarController> & {\n    attachAppBarView(appBarView: BarView, appBarController: BarController): void,\n    detachAppBarView(appBarView: BarView, appBarController: BarController): void,\n    updateFolioStyle(folioStyle: FolioStyle | undefined, appBarController: BarController): void,\n    coverViewDidScroll(coverView: SheetView, appBarController: BarController): void,\n  };\n\n  @ViewRef({\n    viewType: DrawerView,\n    get parentView(): FolioView | null {\n      return this.owner.folio.view;\n    },\n    willAttachView(drawerView: DrawerView): void {\n      this.owner.callObservers(\"controllerWillAttachDrawerView\", drawerView, this.owner);\n    },\n    didAttachView(drawerView: DrawerView): void {\n      this.updateFullBleed(this.owner.fullBleed.value, drawerView);\n      if (this.owner.fullScreen.value) {\n        drawerView.dismiss();\n      } else {\n        drawerView.present();\n      }\n    },\n    didDetachView(drawerView: DrawerView): void {\n      this.owner.callObservers(\"controllerDidDetachDrawerView\", drawerView, this.owner);\n    },\n    updateFullBleed(fullBleed: boolean, drawerView: DrawerView): void {\n      // hook\n    },\n  })\n  readonly drawer!: ViewRef<this, DrawerView> & {\n    updateFullBleed(fullBleed: boolean, drawerView: DrawerView): void,\n  };\n\n  @TraitViewControllerRef({\n    controllerType: SheetController,\n    consumed: true,\n    binds: false,\n    observes: true,\n    getTraitViewRef(coverController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return coverController.sheet;\n    },\n    willAttachController(coverController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachCover\", coverController, this.owner);\n    },\n    didAttachController(coverController: SheetController): void {\n      this.owner.fullBleed.setIntrinsic(coverController.fullBleed.value);\n      const coverTrait = coverController.sheet.trait;\n      if (coverTrait !== null) {\n        this.attachCoverTrait(coverTrait, coverController);\n      }\n      const coverView = coverController.sheet.view;\n      if (coverView !== null) {\n        this.attachCoverView(coverView, coverController);\n      }\n      const modeToolControllers = coverController.modeTools.controllers;\n      for (const controllerId in modeToolControllers) {\n        this.owner.modeTools.attachController(modeToolControllers[controllerId]!);\n      }\n    },\n    willDetachController(coverController: SheetController): void {\n      const modeToolControllers = coverController.modeTools.controllers;\n      for (const controllerId in modeToolControllers) {\n        this.owner.modeTools.detachController(modeToolControllers[controllerId]!);\n      }\n      const coverView = coverController.sheet.view;\n      if (coverView !== null) {\n        this.detachCoverView(coverView, coverController);\n      }\n      const coverTrait = coverController.sheet.trait;\n      if (coverTrait !== null) {\n        this.detachCoverTrait(coverTrait, coverController);\n      }\n    },\n    didDetachController(coverController: SheetController): void {\n      this.owner.callObservers(\"controllerDidDetachCover\", coverController, this.owner);\n    },\n    controllerWillAttachSheetTrait(coverTrait: Trait, coverController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachCoverTrait\", coverTrait, this.owner);\n      this.attachCoverTrait(coverTrait, coverController);\n    },\n    controllerDidDetachSheetTrait(coverTrait: Trait, coverController: SheetController): void {\n      this.detachCoverTrait(coverTrait, coverController);\n      this.owner.callObservers(\"controllerDidDetachCoverTrait\", coverTrait, this.owner);\n    },\n    attachCoverTrait(coverTrait: Trait, coverController: SheetController): void {\n      // hook\n    },\n    detachCoverTrait(coverTrait: Trait, coverController: SheetController): void {\n      // hook\n    },\n    controllerWillAttachSheetView(coverView: SheetView, coverController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachCoverView\", coverView, this.owner);\n      this.attachCoverView(coverView, coverController);\n    },\n    controllerDidDetachSheetView(coverView: SheetView, coverController: SheetController): void {\n      this.detachCoverView(coverView, coverController);\n      this.owner.callObservers(\"controllerDidDetachCoverView\", coverView, this.owner);\n    },\n    attachCoverView(coverView: SheetView, coverController: SheetController): void {\n      const folioView = this.owner.folio.view;\n      if (folioView !== null) {\n        folioView.cover.attachView(coverView);\n      }\n      const appBarController = this.owner.appBar.controller;\n      if (appBarController !== null) {\n        this.owner.appBar.coverViewDidScroll(coverView, appBarController);\n      }\n    },\n    detachCoverView(coverView: SheetView, coverController: SheetController): void {\n      const folioView = this.owner.folio.view;\n      if (folioView !== null) {\n        folioView.cover.removeView();\n      }\n      this.detachController();\n    },\n    controllerDidSetFullBleed(fullBleed: boolean): void {\n      this.owner.fullBleed.setIntrinsic(fullBleed);\n    },\n    controllerWillAttachModeTool(toolController: ToolController, targetToolController: ToolController | null): void {\n      this.owner.modeTools.attachController(toolController, targetToolController);\n    },\n    controllerDidDetachModeTool(toolController: ToolController): void {\n      this.owner.modeTools.detachController(toolController);\n    },\n    controllerDidScrollSheetView(coverView: SheetView): void {\n      const appBarController = this.owner.appBar.controller;\n      if (appBarController !== null) {\n        this.owner.appBar.coverViewDidScroll(coverView, appBarController);\n      }\n    },\n    present(timing?: TimingLike | boolean | null): SheetView | null {\n      const coverController = this.controller;\n      const coverView = coverController !== null ? coverController.sheet.view : null;\n      if (coverView !== null) {\n        if (this.owner.folioStyle.value === \"stacked\") {\n          if (this.owner.sheets.controllers[coverController!.uid] !== void 0) {\n            this.owner.sheets.detachController(coverController!);\n          }\n          this.owner.sheets.attachController(coverController!);\n          coverView.present(timing);\n        } else {\n          this.insertView(this.owner.folio.view);\n        }\n      }\n      return coverView;\n    },\n  })\n  readonly cover!: TraitViewControllerRef<this, Trait, SheetView, SheetController> & Observes<SheetController> & {\n    attachCoverTrait(coverTrait: Trait, coverController: SheetController): void;\n    detachCoverTrait(coverTrait: Trait, coverController: SheetController): void;\n    attachCoverView(coverView: SheetView, coverController: SheetController): void;\n    detachCoverView(coverView: SheetView, coverController: SheetController): void;\n    present(timing?: TimingLike | boolean | null): SheetView | null;\n  };\n\n  @TraitViewControllerSet({\n    controllerType: ToolController,\n    binds: false,\n    ordered: true,\n    observes: true,\n    getTraitViewRef(toolController: ToolController): TraitViewRef<unknown, Trait, ToolView> {\n      return toolController.tool;\n    },\n    willAttachController(toolController: ToolController): void {\n      this.owner.callObservers(\"controllerWillAttachCoverModeTool\", toolController, this.owner);\n    },\n    didAttachController(toolController: ToolController): void {\n      const toolView = toolController.tool.view;\n      if (toolView !== null) {\n        this.attachToolView(toolView, toolController);\n      }\n    },\n    willDetachController(toolController: ToolController): void {\n      const toolView = toolController.tool.view;\n      if (toolView !== null) {\n        this.detachToolView(toolView, toolController);\n      }\n    },\n    didDetachController(toolController: ToolController): void {\n      this.owner.callObservers(\"controllerDidDetachCoverModeTool\", toolController, this.owner);\n    },\n    controllerWillAttachToolView(toolView: ToolView, toolController: ToolController): void {\n      this.owner.callObservers(\"controllerWillAttachCoverModeToolView\", toolView, toolController, this.owner);\n      this.attachToolView(toolView, toolController);\n    },\n    controllerDidDetachToolView(toolView: ToolView, toolController: ToolController): void {\n      this.detachToolView(toolView, toolController);\n      this.owner.callObservers(\"controllerDidDetachCoverModeToolView\", toolView, toolController, this.owner);\n    },\n    attachToolView(toolView: ToolView, toolController: ToolController): void {\n      // hook\n    },\n    detachToolView(toolView: ToolView, toolController: ToolController): void {\n      // hook\n    },\n  })\n  readonly modeTools!: TraitViewControllerSet<this, Trait, ToolView, ToolController> & Observes<ToolController> & {\n    attachToolView(toolView: ToolView, toolController: ToolController): void,\n    detachToolView(toolView: ToolView, toolController: ToolController): void,\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {Property} from \"@swim/component\";\nimport {Controller} from \"@swim/controller\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport {ToolLayout} from \"@swim/toolbar\";\nimport {BarLayout} from \"@swim/toolbar\";\nimport type {ToolController} from \"@swim/toolbar\";\nimport type {BarControllerObserver} from \"@swim/toolbar\";\nimport {BarController} from \"@swim/toolbar\";\nimport type {SheetView} from \"./SheetView\";\nimport {SheetController} from \"./SheetController\";\nimport type {BinderTabStyle} from \"./BinderView\";\n\n/** @public */\nexport interface TabBarControllerObserver<C extends TabBarController = TabBarController> extends BarControllerObserver<C> {\n  controllerDidPressTabHandle?(input: PositionGestureInput, event: Event | null, tabController: SheetController, controller: C): void;\n\n  controllerDidLongPressTabHandle?(input: PositionGestureInput, tabController: SheetController, controller: C): void;\n}\n\n/** @public */\nexport class TabBarController extends BarController {\n  declare readonly observerType?: Class<TabBarControllerObserver>;\n\n  protected override createLayout(): BarLayout | null {\n    const tools = new Array<ToolLayout>();\n    tools.push(ToolLayout.create(\"leftPadding\", 0.5, 0, 0, 0));\n\n    const tabControllers = new Array<SheetController>();\n    for (const controllerId in this.tabs.controllers) {\n      tabControllers.push(this.tabs.controllers[controllerId]!);\n    }\n    if (this.tabStyle.value === \"bottom\") {\n      for (let i = 0, n = tabControllers.length; i < n; i += 1) {\n        const tabController = tabControllers[i]!;\n        const tabHandleView = tabController.handle.attachView();\n        const tabKey = \"tab\" + tabHandleView.uid;\n        const tabHandleLayout = ToolLayout.create(tabKey, 1, 0, 0, 0.5);\n        tools.push(tabHandleLayout);\n        const targetTabController = i + 1 < n ? tabControllers[i + 1] : null;\n        const targetToolView = targetTabController !== null ? tabController.handle.view : null;\n        tabController.handle.insertView(this.bar.view, void 0, targetToolView, tabKey);\n      }\n    }\n\n    tools.push(ToolLayout.create(\"rightPadding\", 0.5, 0, 0, 1));\n    return BarLayout.create(tools);\n  }\n\n  @TraitViewControllerSet({\n    controllerType: SheetController,\n    ordered: true,\n    inherits: true,\n    observes: true,\n    getTraitViewRef(tabController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return tabController.sheet;\n    },\n    willAttachController(tabController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    didDetachController(tabController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerWillAttachHandle(tabHandleController: ToolController, tabController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidDetachHandle(tabHandleController: ToolController, tabController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidPressHandle(input: PositionGestureInput, event: Event | null, tabController: SheetController): void {\n      this.owner.callObservers(\"controllerDidPressTabHandle\", input, event, tabController, this.owner);\n    },\n    controllerDidLongPressHandle(input: PositionGestureInput, tabController: SheetController): void {\n      this.owner.callObservers(\"controllerDidLongPressTabHandle\", input, tabController, this.owner);\n    },\n  })\n  readonly tabs!: TraitViewControllerSet<this, Trait, SheetView, SheetController> & Observes<SheetController>;\n\n  @TraitViewControllerRef({\n    controllerType: SheetController,\n    inherits: true,\n    observes: true,\n    getTraitViewRef(activeController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return activeController.sheet;\n    },\n    willAttachController(activeController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    didDetachController(activeController: SheetController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerWillAttachHandle(tabHandleController: ToolController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n    controllerDidDetachHandle(tabHandleController: ToolController): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n  })\n  readonly active!: TraitViewControllerRef<this, Trait, SheetView, SheetController> & Observes<SheetController>;\n\n  @Property({\n    valueType: String,\n    value: \"none\",\n    inherits: true,\n    didSetValue(tabStyle: BinderTabStyle): void {\n      this.owner.requireUpdate(Controller.NeedsAssemble);\n    },\n  })\n  readonly tabStyle!: Property<this, BinderTabStyle>;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Instance} from \"@swim/util\";\nimport type {Creatable} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Length} from \"@swim/math\";\nimport type {ViewInsets} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport {BarView} from \"@swim/toolbar\";\nimport type {SheetViewObserver} from \"./SheetView\";\nimport {SheetView} from \"./SheetView\";\n\n/** @public */\nexport type BinderTabStyle = \"bottom\" | \"mode\" | \"none\";\n\n/** @public */\nexport interface BinderViewObserver<V extends BinderView = BinderView> extends SheetViewObserver<V> {\n  viewDidSetTabStyle?(tabStyle: BinderTabStyle, view: V): void;\n\n  viewWillAttachTabBar?(tabBarView: BarView, targetView: View | null, view: V): void;\n\n  viewDidDetachTabBar?(tabBarView: BarView, view: V): void;\n\n  viewWillAttachTab?(tabView: SheetView, targetView: View | null, view: V): void;\n\n  viewDidDetachTab?(tabView: SheetView, view: V): void;\n\n  viewWillAttachActive?(activeView: SheetView, targetView: View | null, view: V): void;\n\n  viewDidDetachActive?(activeView: SheetView, view: V): void;\n}\n\n/** @public */\nexport class BinderView extends SheetView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initBinder();\n  }\n\n  protected initBinder(): void {\n    this.setIntrinsic<BinderView>({\n      classList: [\"binder\"],\n      style: {\n        position: \"relative\",\n        overflow: \"hidden\",\n      },\n    });\n  }\n\n  declare readonly observerType?: Class<BinderViewObserver>;\n\n  @Property({\n    valueType: String,\n    value: \"none\",\n    updateFlags: View.NeedsResize,\n    didSetValue(tabStyle: BinderTabStyle): void {\n      this.owner.callObservers(\"viewDidSetTabStyle\", tabStyle, this.owner);\n      this.owner.edgeInsets.decohereOutlets();\n    },\n  })\n  readonly tabStyle!: Property<this, BinderTabStyle>;\n\n  @ViewRef({\n    viewType: BarView,\n    binds: true,\n    observes: true,\n    initView(tabBarView: BarView): void {\n      tabBarView.placement.setIntrinsic(\"bottom\");\n      tabBarView.style.setIntrinsic({\n        position: \"absolute\",\n        left: 0,\n        bottom: 0,\n        width: this.owner.style.width.cssState,\n        zIndex: 1,\n      });\n    },\n    willAttachView(tabBarView: BarView, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachTabBar\", tabBarView, targetView, this.owner);\n    },\n    didAttachView(navBarView: BarView, target: View | null): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n    willDetachView(navBarView: BarView): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n    didDetachView(tabBarView: BarView): void {\n      this.owner.callObservers(\"viewDidDetachTabBar\", tabBarView, this.owner);\n    },\n    viewDidSetBarHeight(barHeight: Length | null): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n    viewDidMount(): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n    viewWillUnmount(): void {\n      this.owner.edgeInsets.decohereOutlets();\n    },\n  })\n  readonly tabBar!: ViewRef<this, BarView> & Observes<BarView>;\n\n  getTab<F extends Class<SheetView>>(key: string, tabViewClass: F): InstanceType<F> | null;\n  getTab(key: string): SheetView | null;\n  getTab(key: string, tabViewClass?: Class<SheetView>): SheetView | null {\n    if (tabViewClass === void 0) {\n      tabViewClass = SheetView;\n    }\n    const tabView = this.getChild(key);\n    return tabView instanceof tabViewClass ? tabView : null;\n  }\n\n  getOrCreateTab<F extends Class<Instance<F, SheetView>> & Creatable<Instance<F, SheetView>>>(key: string, tabViewClass: F): InstanceType<F> {\n    let tabView = this.getChild(key, tabViewClass);\n    if (tabView === null) {\n      tabView = tabViewClass.create();\n      this.setChild(key, tabView);\n    }\n    return tabView!;\n  }\n\n  setTab(key: string, tabView: SheetView | null): void {\n    this.setChild(key, tabView);\n  }\n\n  @ViewSet({\n    viewType: SheetView,\n    binds: false,\n    observes: true,\n    initView(tabView: SheetView): void {\n      const tabBarView = this.owner.tabBar.view;\n      const tabBarHeight = tabBarView !== null && tabBarView.mounted\n                         ? tabBarView.style.height.cssState : null;\n      tabView.style.setIntrinsic({\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: this.owner.style.width.cssState,\n        height: this.owner.style.height.cssState,\n        paddingTop: this.owner.style.paddingTop.state,\n        paddingBottom: tabBarHeight,\n        boxSizing: \"border-box\",\n        zIndex: 0,\n      });\n    },\n    willAttachView(tabView: SheetView, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachTab\", tabView, targetView, this.owner);\n    },\n    willDetachView(tabView: SheetView): void {\n      if (tabView === this.owner.active.view) {\n        this.owner.active.setView(null);\n      }\n    },\n    didDetachView(tabView: SheetView): void {\n      this.owner.callObservers(\"viewDidDetachTab\", tabView, this.owner);\n    },\n    detectView(view: View): SheetView | null {\n      return view instanceof SheetView ? view : null;\n    },\n  })\n  readonly tabs!: ViewSet<this, SheetView> & Observes<SheetView>;\n\n  @ViewRef({\n    viewType: SheetView,\n    binds: false,\n    observes: true,\n    willAttachView(tabView: SheetView, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachActive\", tabView, targetView, this.owner);\n    },\n    didAttachView(tabView: SheetView, targetView: View | null): void {\n      this.owner.fullBleed.setIntrinsic(tabView.fullBleed.value);\n      if (tabView.parent === null) {\n        this.owner.insertChild(tabView, targetView);\n      }\n    },\n    didDetachView(tabView: SheetView): void {\n      this.owner.callObservers(\"viewDidDetachActive\", tabView, this.owner);\n    },\n    viewDidSetFullBleed(fullBleed: boolean, tabView: SheetView): void {\n      this.owner.fullBleed.setIntrinsic(fullBleed);\n    },\n  })\n  readonly active!: ViewRef<this, SheetView> & Observes<SheetView>;\n\n  @Property({\n    extends: true,\n    getOutletValue(outlet: Property<unknown, ViewInsets>): ViewInsets {\n      let edgeInsets = this.value;\n      if (outlet.owner instanceof SheetView) {\n        const tabBarView = this.owner.tabBar.view;\n        if (tabBarView !== null && tabBarView.mounted) {\n          edgeInsets = {\n            insetTop: edgeInsets.insetTop,\n            insetRight: edgeInsets.insetRight,\n            insetBottom: 0,\n            insetLeft: edgeInsets.insetLeft,\n          };\n        }\n      }\n      return edgeInsets;\n    },\n  })\n  override get edgeInsets(): Property<this, ViewInsets> {\n    return Property.getter();\n  }\n\n  protected override onResize(): void {\n    super.onResize();\n    this.resizeBinder();\n  }\n\n  protected resizeBinder(): void {\n    const binderWidth = this.style.width.cssState!;\n    const binderHeight = this.style.height.cssState!;\n    const paddingLeft = this.style.paddingLeft.value;\n    const paddingRight = this.style.paddingRight.value;\n\n    const tabBarView = this.tabBar.view;\n    let tabBarHeight: Length | null = null;\n    if (tabBarView !== null && tabBarView.mounted) {\n      let tabBarWidth = binderWidth;\n      tabBarHeight = tabBarView.style.height.cssState;\n      if (paddingLeft !== null) {\n        tabBarWidth = tabBarWidth.minus(paddingLeft);\n      }\n      if (paddingRight !== null) {\n        tabBarWidth = tabBarWidth.minus(paddingRight);\n      }\n      tabBarView.style.setIntrinsic({\n        left: paddingLeft,\n        right: paddingRight,\n        width: tabBarWidth,\n      });\n    }\n\n    const tabViews = this.tabs.views;\n    for (const viewId in tabViews) {\n      const tabView = tabViews[viewId]!;\n      tabView.style.setIntrinsic({\n        width: binderWidth,\n        height: binderHeight,\n        paddingTop: this.style.paddingTop.state,\n        paddingRight,\n        paddingBottom: tabBarHeight,\n        paddingLeft,\n      });\n    }\n  }\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Objects} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Property} from \"@swim/component\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport type {Trait} from \"@swim/model\";\nimport type {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {ToolController} from \"@swim/toolbar\";\nimport type {BarView} from \"@swim/toolbar\";\nimport {BarController} from \"@swim/toolbar\";\nimport type {SheetView} from \"./SheetView\";\nimport type {SheetControllerObserver} from \"./SheetController\";\nimport {SheetController} from \"./SheetController\";\nimport type {FolioStyle} from \"./FolioView\";\nimport {TabBarController} from \"./TabBarController\";\nimport type {BinderTabStyle} from \"./BinderView\";\nimport {BinderView} from \"./BinderView\";\n\n/** @public */\nexport interface BinderControllerObserver<C extends BinderController = BinderController> extends SheetControllerObserver<C> {\n  controllerWillAttachBinderTrait?(binderTrait: Trait, controller: C): void;\n\n  controllerDidDetachBinderTrait?(binderTrait: Trait, controller: C): void;\n\n  controllerWillAttachBinderView?(binderView: BinderView, controller: C): void;\n\n  controllerDidDetachBinderView?(binderView: BinderView, controller: C): void;\n\n  controllerDidSetTabStyle(tabStyle: BinderTabStyle, controller: C): void;\n\n  controllerWillAttachTabBar?(tabBarController: BarController, controller: C): void;\n\n  controllerDidDetachTabBar?(tabBarController: BarController, controller: C): void;\n\n  controllerWillAttachTabBarView?(tabBarView: BarView, controller: C): void;\n\n  controllerDidDetachTabBarView?(tabBarView: BarView, controller: C): void;\n\n  controllerWillAttachTab?(tabController: SheetController, controller: C): void;\n\n  controllerDidDetachTab?(tabController: SheetController, controller: C): void;\n\n  controllerWillAttachTabTrait?(tabTrait: Trait, tabController: SheetController, controller: C): void;\n\n  controllerDidDetachTabTrait?(tabTrait: Trait, tabController: SheetController, controller: C): void;\n\n  controllerWillAttachTabView?(tabView: SheetView, tabController: SheetController, controller: C): void;\n\n  controllerDidDetachTabView?(tabView: SheetView, tabController: SheetController, controller: C): void;\n\n  controllerWillAttachTabHandle?(tabHandleController: ToolController, tabController: SheetController, controller: C): void;\n\n  controllerDidDetachTabHandle?(tabHandleController: ToolController, tabController: SheetController, controller: C): void;\n\n  controllerDidPressTabHandle?(input: PositionGestureInput, event: Event | null, tabController: SheetController, controller: C): void;\n\n  controllerDidLongPressTabHandle?(input: PositionGestureInput, tabController: SheetController, controller: C): void;\n\n  controllerWillAttachActive?(activeController: SheetController, controller: C): void;\n\n  controllerDidDetachActive?(activeController: SheetController, controller: C): void;\n\n  controllerWillAttachActiveTrait?(activeTrait: Trait, controller: C): void;\n\n  controllerDidDetachActiveTrait?(activeTrait: Trait, controller: C): void;\n\n  controllerWillAttachActiveView?(activeView: SheetView, controller: C): void;\n\n  controllerDidDetachActiveView?(activeView: SheetView, controller: C): void;\n}\n\n/** @public */\nexport class BinderController extends SheetController {\n  declare readonly observerType?: Class<BinderControllerObserver>;\n\n  @Property({\n    valueType: String,\n    inherits: true,\n    didSetValue(folioStyle: FolioStyle | undefined): void {\n      if (folioStyle === \"stacked\") {\n        this.owner.tabStyle.setIntrinsic(\"bottom\");\n      } else if (folioStyle === \"unstacked\") {\n        this.owner.tabStyle.setIntrinsic(\"mode\");\n      }\n    },\n  })\n  readonly folioStyle!: Property<this, FolioStyle | undefined>;\n\n  @Property({\n    valueType: String,\n    value: \"none\",\n    didSetValue(tabStyle: BinderTabStyle): void {\n      const tabBarController = this.owner.tabBar.controller;\n      if (tabBarController !== null) {\n        this.owner.tabBar.updateTabStyle(tabStyle, tabBarController);\n      }\n      const tabControllers = this.owner.tabs.controllers;\n      for (const controllerId in tabControllers) {\n        const tabController = tabControllers[controllerId]!;\n        this.owner.tabs.updateTabStyle(tabStyle, tabController);\n      }\n      this.owner.callObservers(\"controllerDidSetTabStyle\", tabStyle, this.owner);\n      const binderView = this.owner.binder.view;\n      if (binderView !== null) {\n        binderView.tabStyle.setValue(tabStyle, Affinity.Inherited);\n      }\n    },\n  })\n  readonly tabStyle!: Property<this, BinderTabStyle>;\n\n  @TraitViewRef({\n    willAttachTrait(binderTrait: Trait): void {\n      this.owner.callObservers(\"controllerWillAttachBinderTrait\", binderTrait, this.owner);\n    },\n    didDetachTrait(binderTrait: Trait): void {\n      this.owner.callObservers(\"controllerDidDetachBinderTrait\", binderTrait, this.owner);\n    },\n    viewType: BinderView,\n    observesView: true,\n    initView(binderView: BinderView): void {\n      binderView.tabStyle.setValue(this.owner.tabStyle.value, Affinity.Inherited);\n      const tabBarController = this.owner.tabBar.controller;\n      if (tabBarController !== null) {\n        binderView.tabBar.setView(tabBarController.bar.view);\n      }\n      const activeController = this.owner.active.controller;\n      if (activeController !== null) {\n        binderView.active.setView(activeController.sheet.attachView());\n      }\n    },\n    willAttachView(binderView: BinderView): void {\n      this.owner.callObservers(\"controllerWillAttachBinderView\", binderView, this.owner);\n      if (this.owner.sheet.view === null) {\n        this.owner.sheet.setView(binderView);\n      }\n    },\n    didAttachView(binderView: BinderView): void {\n      //this.owner.tabStyle.setIntrinsic(binderView.tabStyle.value);\n      const activeController = this.owner.active.controller;\n      if (activeController !== null) {\n        activeController.sheet.removeView();\n      }\n    },\n    willDetachView(binderView: BinderView): void {\n      this.owner.active.setController(null);\n    },\n    didDetachView(binderView: BinderView): void {\n      if (this.owner.sheet.view === binderView) {\n        this.owner.sheet.detachView();\n      }\n      this.owner.callObservers(\"controllerDidDetachBinderView\", binderView, this.owner);\n    },\n    //viewDidSetTabStyle(tabStyle: BinderTabStyle, binderView: BinderView): void {\n    //  this.owner.tabStyle.setIntrinsic(tabStyle);\n    //},\n    viewWillAttachTabBar(tabBarView: BarView): void {\n      const tabBarController = this.owner.tabBar.controller;\n      if (tabBarController !== null) {\n        tabBarController.bar.setView(tabBarView);\n      }\n    },\n    viewDidDetachTabBar(tabBarView: BarView): void {\n      const tabBarController = this.owner.tabBar.controller;\n      if (tabBarController !== null) {\n        tabBarController.bar.setView(null);\n      }\n    },\n  })\n  readonly binder!: TraitViewRef<this, Trait, BinderView> & Observes<BinderView>;\n\n  protected didPressTabHandle(input: PositionGestureInput, event: Event | null, tabController: SheetController): void {\n    this.callObservers(\"controllerDidPressTabHandle\", input, event, tabController, this);\n    if (input.defaultPrevented) {\n      return;\n    }\n    this.active.setController(tabController);\n  }\n\n  protected didLongPressTabHandle(input: PositionGestureInput, tabController: SheetController): void {\n    this.callObservers(\"controllerDidLongPressTabHandle\", input, tabController, this);\n  }\n\n  @TraitViewControllerRef({\n    controllerType: BarController,\n    binds: true,\n    observes: true,\n    get parentView(): BinderView | null {\n      return this.owner.binder.view;\n    },\n    getTraitViewRef(tabBarController: BarController): TraitViewRef<unknown, Trait, BarView> {\n      return tabBarController.bar;\n    },\n    initController(tabBarController: BarController): void {\n      this.updateTabStyle(this.owner.tabStyle.value, tabBarController);\n    },\n    willAttachController(tabBarController: BarController): void {\n      this.owner.callObservers(\"controllerWillAttachTabBar\", tabBarController, this.owner);\n    },\n    didAttachController(tabBarController: BarController): void {\n      const tabBarView = tabBarController.bar.view;\n      if (tabBarView !== null) {\n        this.attachTabBarView(tabBarView, tabBarController);\n      }\n    },\n    willDetachController(tabBarController: BarController): void {\n      const tabBarView = tabBarController.bar.view;\n      if (tabBarView !== null) {\n        this.detachTabBarView(tabBarView, tabBarController);\n      }\n    },\n    didDetachController(tabBarController: BarController): void {\n      this.owner.callObservers(\"controllerDidDetachTabBar\", tabBarController, this.owner);\n    },\n    controllerWillAttachBarView(tabBarView: BarView, tabBarController: BarController): void {\n      this.owner.callObservers(\"controllerWillAttachTabBarView\", tabBarView, this.owner);\n      this.attachTabBarView(tabBarView, tabBarController);\n    },\n    controllerDidDetachBarView(tabBarView: BarView, tabBarController: BarController): void {\n      this.detachTabBarView(tabBarView, tabBarController);\n      this.owner.callObservers(\"controllerDidDetachTabBarView\", tabBarView, this.owner);\n    },\n    attachTabBarView(tabBarView: BarView, tabBarController: BarController): void {\n      const binderView = this.owner.binder.view;\n      if (binderView !== null && binderView.tabBar.view === null) {\n        binderView.tabBar.attachView(tabBarView);\n      }\n    },\n    detachTabBarView(tabBarView: BarView, tabBarController: BarController): void {\n      tabBarView.remove();\n    },\n    controllerDidPressTabHandle(input: PositionGestureInput, event: Event | null, tabController: SheetController): void {\n      this.owner.didPressTabHandle(input, event, tabController);\n    },\n    controllerDidLongPressTabHandle(input: PositionGestureInput, tabController: SheetController): void {\n      this.owner.didLongPressTabHandle(input, tabController);\n    },\n    updateTabStyle(tabStyle: BinderTabStyle, tabBarController: BarController): void {\n      if (tabStyle === \"bottom\") {\n        this.insertView();\n      } else {\n        this.removeView();\n      }\n    },\n    createController(): BarController {\n      return new TabBarController();\n    },\n  })\n  readonly tabBar!: TraitViewControllerRef<this, Trait, BarView, BarController> & Observes<TabBarController> & {\n    attachTabBarView(tabBarView: BarView, tabBarController: BarController): void,\n    detachTabBarView(tabBarView: BarView, tabBarController: BarController): void,\n    updateTabStyle(tabStyle: BinderTabStyle, tabBarController: BarController): void,\n  };\n\n  setTab(key: string, newTabController: SheetController | null): void {\n    const oldTabController = this.getChild(key, SheetController);\n    const active = oldTabController === this.active.controller;\n\n    let targetTabController: Controller | null;\n    if (oldTabController !== null) {\n      targetTabController = oldTabController.getNextSibling(SheetController);\n      this.tabs.deleteController(oldTabController);\n    } else {\n      targetTabController = null;\n    }\n\n    if (newTabController !== null) {\n      this.tabs.insertController(null, newTabController, targetTabController, key);\n      if (active) {\n        this.active.setController(newTabController);\n      }\n    }\n  }\n\n  @TraitViewControllerSet({\n    controllerType: SheetController,\n    binds: false,\n    ordered: true,\n    observes: true,\n    get parentView(): BinderView | null {\n      return this.owner.binder.view;\n    },\n    getTraitViewRef(tabController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return tabController.sheet;\n    },\n    initController(tabController: SheetController): void {\n      this.updateTabStyle(this.owner.tabStyle.value, tabController);\n    },\n    willAttachController(tabController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachTab\", tabController, this.owner);\n    },\n    didAttachController(tabController: SheetController): void {\n      const tabTrait = tabController.sheet.trait;\n      if (tabTrait !== null) {\n        this.attachTabTrait(tabTrait, tabController);\n      }\n      const tabView = tabController.sheet.attachView();\n      this.attachTabView(tabView, tabController);\n      const tabHandleController = tabController.handle.insertController();\n      this.attachTabHandle(tabHandleController, tabController);\n      if (this.owner.active.controller === null) {\n        this.owner.active.setController(tabController);\n      }\n    },\n    willDetachController(tabController: SheetController): void {\n      if (tabController === this.owner.active.controller) {\n        this.owner.active.setController(null);\n      }\n      const tabHandleController = tabController.handle.controller;\n      if (tabHandleController !== null) {\n        this.detachTabHandle(tabHandleController, tabController);\n      }\n      const tabView = tabController.sheet.view;\n      if (tabView !== null) {\n        this.detachTabView(tabView, tabController);\n      }\n      const tabTrait = tabController.sheet.trait;\n      if (tabTrait !== null) {\n        this.detachTabTrait(tabTrait, tabController);\n      }\n    },\n    didDetachController(tabController: SheetController): void {\n      this.owner.callObservers(\"controllerDidDetachTab\", tabController, this.owner);\n    },\n    controllerWillAttachSheetTrait(tabTrait: Trait, tabController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachTabTrait\", tabTrait, tabController, this.owner);\n      this.attachTrait(tabTrait, void 0, tabController);\n      this.attachTabTrait(tabTrait, tabController);\n    },\n    controllerDidDetachSheetTrait(tabTrait: Trait, tabController: SheetController): void {\n      this.detachTabTrait(tabTrait, tabController);\n      this.detachTrait(tabTrait);\n      this.owner.callObservers(\"controllerDidDetachTabTrait\", tabTrait, tabController, this.owner);\n    },\n    attachTabTrait(tabTrait: Trait, tabController: SheetController): void {\n      // hook\n    },\n    detachTabTrait(tabTrait: Trait, tabController: SheetController): void {\n      // hook\n    },\n    controllerWillAttachSheetView(tabView: SheetView, tabController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachTabView\", tabView, tabController, this.owner);\n      this.attachTabView(tabView, tabController);\n    },\n    controllerDidDetachSheetView(tabView: SheetView, tabController: SheetController): void {\n      this.detachTabView(tabView, tabController);\n      this.owner.callObservers(\"controllerDidDetachTabView\", tabView, tabController, this.owner);\n    },\n    attachTabView(tabView: SheetView, tabController: SheetController): void {\n      const binderView = this.owner.binder.view;\n      if (binderView !== null) {\n        binderView.tabs.attachView(tabView);\n      }\n    },\n    detachTabView(tabView: SheetView, tabController: SheetController): void {\n      const binderView = this.owner.binder.view;\n      if (binderView !== null) {\n        binderView.tabs.deleteView(tabView);\n      }\n    },\n    controllerWillAttachHandle(tabHandleController: ToolController, tabController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachTabHandle\", tabHandleController, tabController, this.owner);\n      this.attachTabHandle(tabHandleController, tabController);\n    },\n    controllerDidDetachHandle(tabHandleController: ToolController, tabController: SheetController): void {\n      this.detachTabHandle(tabHandleController, tabController);\n      this.owner.callObservers(\"controllerDidDetachTabHandle\", tabHandleController, tabController, this.owner);\n    },\n    attachTabHandle(tabHandleController: ToolController, tabController: SheetController): void {\n      if (this.owner.tabStyle.value === \"mode\") {\n        const targetTabController = Objects.getNextValue(this.controllers, tabController.uid);\n        const targetToolController = targetTabController !== void 0 ? targetTabController.handle.controller : null;\n        this.owner.modeTools.attachController(tabHandleController, targetToolController);\n      }\n    },\n    detachTabHandle(tabHandleController: ToolController, tabController: SheetController): void {\n      if (this.owner.tabStyle.value === \"mode\") {\n        this.owner.modeTools.deleteController(tabHandleController);\n      }\n      tabHandleController.remove();\n    },\n    updateTabStyle(tabStyle: BinderTabStyle, tabController: SheetController): void {\n      const tabToolController = tabController.handle.controller;\n      if (tabToolController === null) {\n        return;\n      } else if (tabStyle === \"mode\") {\n        const targetTabController = Objects.getNextValue(this.controllers, tabController.uid);\n        const targetToolController = targetTabController !== void 0 ? targetTabController.handle.controller : null;\n        this.owner.modeTools.attachController(tabToolController, targetToolController);\n      } else {\n        this.owner.modeTools.detachController(tabToolController);\n      }\n    },\n  })\n  readonly tabs!: TraitViewControllerSet<this, Trait, SheetView, SheetController> & Observes<SheetController> & {\n    attachTabTrait(tabTrait: Trait, tabController: SheetController): void,\n    detachTabTrait(tabTrait: Trait, tabController: SheetController): void,\n    attachTabView(tabView: SheetView, tabController: SheetController): void,\n    detachTabView(tabView: SheetView, tabController: SheetController): void,\n    attachTabHandle(tabHandleController: ToolController, tabController: SheetController): void,\n    detachTabHandle(tabHandleController: ToolController, tabController: SheetController): void,\n    updateTabStyle(tabStyle: BinderTabStyle, tabController: SheetController): void,\n  };\n\n  @TraitViewControllerRef({\n    controllerType: SheetController,\n    consumed: true,\n    binds: false,\n    observes: true,\n    getTraitViewRef(activeController: SheetController): TraitViewRef<unknown, Trait, SheetView> {\n      return activeController.sheet;\n    },\n    willAttachController(activeController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachActive\", activeController, this.owner);\n    },\n    didAttachController(activeController: SheetController): void {\n      this.owner.fullBleed.setIntrinsic(activeController.fullBleed.value);\n      const activeTrait = activeController.sheet.trait;\n      if (activeTrait !== null) {\n        this.attachActiveTrait(activeTrait, activeController);\n      }\n      const activeView = activeController.sheet.attachView();\n      if (activeView !== null) {\n        this.attachActiveView(activeView, activeController);\n      }\n      activeController.handle.setActive(true);\n    },\n    willDetachController(activeController: SheetController): void {\n      activeController.handle.setActive(false);\n      const activeView = activeController.sheet.view;\n      if (activeView !== null) {\n        this.detachActiveView(activeView, activeController);\n      }\n      const activeTrait = activeController.sheet.trait;\n      if (activeTrait !== null) {\n        this.detachActiveTrait(activeTrait, activeController);\n      }\n    },\n    didDetachController(activeController: SheetController): void {\n      this.owner.callObservers(\"controllerDidDetachActive\", activeController, this.owner);\n    },\n    controllerWillAttachSheetTrait(activeTrait: Trait, activeController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachActiveTrait\", activeTrait, this.owner);\n      this.attachActiveTrait(activeTrait, activeController);\n    },\n    controllerDidDetachSheetTrait(activeTrait: Trait, activeController: SheetController): void {\n      this.detachActiveTrait(activeTrait, activeController);\n      this.owner.callObservers(\"controllerDidDetachActiveTrait\", activeTrait, this.owner);\n    },\n    attachActiveTrait(activeTrait: Trait, activeController: SheetController): void {\n      // hook\n    },\n    detachActiveTrait(activeTrait: Trait, activeController: SheetController): void {\n      // hook\n    },\n    controllerWillAttachSheetView(activeView: SheetView, activeController: SheetController): void {\n      this.owner.callObservers(\"controllerWillAttachActiveView\", activeView, this.owner);\n      this.attachActiveView(activeView, activeController);\n    },\n    controllerDidDetachSheetView(activeView: SheetView, activeController: SheetController): void {\n      this.detachActiveView(activeView, activeController);\n      this.owner.callObservers(\"controllerDidDetachActiveView\", activeView, this.owner);\n    },\n    attachActiveView(activeView: SheetView, activeController: SheetController): void {\n      const binderView = this.owner.binder.view;\n      if (binderView !== null) {\n        binderView.active.setView(activeView);\n      }\n    },\n    detachActiveView(activeView: SheetView, activeController: SheetController): void {\n      const binderView = this.owner.binder.view;\n      if (binderView !== null) {\n        binderView.active.deleteView();\n      }\n    },\n    controllerDidSetFullBleed(fullBleed: boolean, activeController: SheetController): void {\n      this.owner.fullBleed.setIntrinsic(fullBleed);\n    },\n    controllerDidScrollSheetView(activeView: SheetView, activeController: SheetController): void {\n      this.owner.callObservers(\"controllerDidScrollSheetView\", activeView, this.owner);\n    },\n  })\n  readonly active!: TraitViewControllerRef<this, Trait, SheetView, SheetController> & Observes<SheetController> & {\n    attachActiveTrait(activeTrait: Trait, activeController: SheetController): void,\n    detachActiveTrait(activeTrait: Trait, activeController: SheetController): void,\n    attachActiveView(activeView: SheetView, activeController: SheetController): void,\n    detachActiveView(activeView: SheetView, activeController: SheetController): void,\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Look} from \"@swim/theme\";\nimport {Feel} from \"@swim/theme\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport type {HtmlViewObserver} from \"@swim/dom\";\nimport {HtmlView} from \"@swim/dom\";\n\n/** @public */\nexport type PaneLayout = \"frame\" | \"stack\";\n\n/** @public */\nexport type PanelStyle = \"card\" | \"none\";\n\n/** @public */\nexport interface PanelViewObserver<V extends PanelView = PanelView> extends HtmlViewObserver<V> {\n  viewDidSetUnitWidth?(unitWidth: number, view: V): void;\n\n  viewDidSetUnitHeight?(unitHeight: number, view: V): void;\n\n  viewDidSetMinPanelHeight?(minPanelHeight: number, view: V): void;\n\n  viewDidSetPanelStyle?(panelStyle: PanelStyle, view: V): void;\n\n  viewDidSetPaneLayout?(paneLayout: PaneLayout, view: V): void;\n\n  viewWillAttachHeader(headerView: HtmlView, view: V): void;\n\n  viewDidDetachHeader(headerView: HtmlView, view: V): void;\n\n  viewWillAttachHeaderTitle(titleView: HtmlView, view: V): void;\n\n  viewDidDetachHeaderTitle(titleView: HtmlView, view: V): void;\n\n  viewWillAttachHeaderSubtitle(subtitleView: HtmlView, view: V): void;\n\n  viewDidDetachHeaderSubtitle(subtitleView: HtmlView, view: V): void;\n\n  viewWillAttachPane?(paneView: PanelView, targetView: View | null, view: V): void;\n\n  viewDidDetachPane?(paneView: PanelView, view: V): void;\n}\n\n/** @public */\nexport class PanelView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initPanel();\n    node.addEventListener(\"scroll\", this.onPanelScroll.bind(this));\n  }\n\n  protected initPanel(): void {\n    this.setIntrinsic<PanelView>({\n      classList: [\"panel\"],\n      style: {\n        position: \"relative\",\n        boxSizing: \"border-box\",\n        overflow: \"hidden\",\n      },\n    });\n    this.panelStyle.applyPanelStyle(this.panelStyle.value);\n  }\n\n  declare readonly observerType?: Class<PanelViewObserver>;\n\n  @Property({valueType: Number, updateFlags: View.NeedsResize})\n  readonly widthBasis!: Property<this, number | undefined>;\n\n  @Property({valueType: Number, updateFlags: View.NeedsResize})\n  readonly heightBasis!: Property<this, number | undefined>;\n\n  @Property({\n    valueType: Number,\n    value: 1,\n    didSetValue(unitWidth: number): void {\n      this.owner.callObservers(\"viewDidSetUnitWidth\", unitWidth, this.owner);\n    },\n  })\n  readonly unitWidth!: Property<this, number>;\n\n  @Property({\n    valueType: Number,\n    value: 1,\n    didSetValue(unitHeight: number): void {\n      this.owner.callObservers(\"viewDidSetUnitHeight\", unitHeight, this.owner);\n    },\n  })\n  readonly unitHeight!: Property<this, number>;\n\n  @Property({\n    valueType: Number,\n    value: 180,\n    inherits: true,\n    didSetValue(minPanelHeight: number): void {\n      this.owner.callObservers(\"viewDidSetMinPanelHeight\", minPanelHeight, this.owner);\n    },\n  })\n  readonly minPanelHeight!: Property<this, number>;\n\n  @Property({\n    valueType: String,\n    value: \"none\",\n    updateFlags: View.NeedsResize,\n    didSetValue(panelStyle: PanelStyle): void {\n      this.applyPanelStyle(panelStyle);\n      this.owner.callObservers(\"viewDidSetPanelStyle\", panelStyle, this.owner);\n    },\n    applyPanelStyle(panelStyle: PanelStyle): void {\n      const panelView = this.owner;\n      if (panelStyle === \"card\") {\n        panelView.classList.add(\"panel-card\");\n        panelView.style.setIntrinsic({\n          margin: 6,\n          borderRadius: 4,\n          backgroundColor: Look.backgroundColor,\n        });\n        panelView.modifyTheme(Feel.default, [[Feel.raised, 1]]);\n      } else {\n        panelView.classList.remove(\"panel-card\");\n        panelView.style.setIntrinsic({\n          margin: 0,\n          borderRadius: null,\n          backgroundColor: null,\n        });\n        panelView.modifyTheme(Feel.default, [[Feel.raised, void 0]]);\n      }\n    },\n  })\n  readonly panelStyle!: Property<this, PanelStyle> & {\n    applyPanelStyle(panelStyle: PanelStyle): void,\n  };\n\n  @Property({\n    valueType: String,\n    value: \"frame\",\n    inherits: true,\n    updateFlags: View.NeedsResize,\n    didSetValue(paneLayout: PaneLayout): void {\n      this.owner.callObservers(\"viewDidSetPaneLayout\", paneLayout, this.owner);\n    },\n  })\n  readonly paneLayout!: Property<this, PaneLayout | undefined>;\n\n  @Property({\n    valueType: Number,\n    value: 720,\n    inherits: true,\n    updateFlags: View.NeedsResize,\n  })\n  readonly minFrameWidth!: Property<this, number>;\n\n  @Property({\n    valueType: Number,\n    value: 540,\n    inherits: true,\n    updateFlags: View.NeedsResize,\n  })\n  readonly minFrameHeight!: Property<this, number>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    binds: true,\n    willAttachView(headerView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachHeader\", headerView, this.owner);\n    },\n    didDetachView(headerView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachHeader\", headerView, this.owner);\n    },\n    insertChild(parent: View, child: HtmlView, target: View | null, key: string | undefined): void {\n      if (target !== null) {\n        parent.insertChild(child, target, key);\n      } else {\n        parent.prependChild(child, key);\n      }\n    },\n    createView(): HtmlView {\n      return (super.createView() as HtmlView).setIntrinsic({\n        classList: [\"panel-header\"],\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          position: \"absolute\",\n          left: 0,\n          top: 0,\n          width: Length.pct(100),\n          height: 30,\n          paddingLeft: 12,\n          paddingRight: 12,\n          boxSizing: \"border-box\",\n          userSelect: \"none\",\n          zIndex: 1,\n        },\n      });\n    }\n  })\n  readonly header!: ViewRef<this, HtmlView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: \"panel-title\",\n    binds: true,\n    get parentView(): HtmlView | null {\n      return this.owner.header.insertView();\n    },\n    willAttachView(titleView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachHeaderTitle\", titleView, this.owner);\n    },\n    didDetachView(titleView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachHeaderTitle\", titleView, this.owner);\n    },\n    insertChild(parent: View, child: HtmlView, target: View | null, key: string | undefined): void {\n      if (target === null) {\n        target = this.owner.headerSubtitle.view;\n      }\n      parent.insertChild(child, target, key);\n    },\n    fromLike(value: HtmlView | LikeType<HtmlView> | string | undefined): HtmlView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        view.text.setState(value);\n        return view;\n      }\n      return super.fromLike(value);\n    },\n    createView(): HtmlView {\n      return (super.createView() as HtmlView).setIntrinsic({\n        classList: [\"header-title\"],\n        style: {\n          alignSelf: \"center\",\n          color: Look.legendColor,\n        },\n      });\n    },\n  })\n  readonly headerTitle!: ViewRef<this, Like<HtmlView, string | undefined>>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: \"panel-subtitle\",\n    binds: true,\n    get parentView(): HtmlView | null {\n      return this.owner.header.insertView();\n    },\n    willAttachView(subtitleView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachHeaderSubtitle\", subtitleView, this.owner);\n    },\n    didDetachView(subtitleView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachHeaderSubtitle\", subtitleView, this.owner);\n    },\n    fromLike(value: HtmlView | LikeType<HtmlView> | string | undefined): HtmlView {\n      if (value === void 0 || typeof value === \"string\") {\n        let view = this.view;\n        if (view === null) {\n          view = this.createView();\n        }\n        view.text.setState(value);\n        return view;\n      }\n      return super.fromLike(value);\n    },\n    createView(): HtmlView {\n      return (super.createView() as HtmlView).setIntrinsic({\n        classList: [\"header-subtitle\"],\n        style: {\n          alignSelf: \"center\",\n          color: Look.legendColor,\n        },\n      });\n    },\n  })\n  readonly headerSubtitle!: ViewRef<this, Like<HtmlView, string | undefined>>;\n\n  @ViewSet({\n    get viewType(): typeof PanelView {\n      return PanelView;\n    },\n    binds: true,\n    observes: true,\n    initView(paneView: PanelView): void {\n      paneView.style.setIntrinsic({\n        position: \"absolute\",\n        visibility: \"hidden\",\n      });\n    },\n    willAttachView(paneView: PanelView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachPane\", paneView, target, this.owner);\n    },\n    didDetachView(paneView: PanelView): void {\n      this.owner.callObservers(\"viewDidDetachPane\", paneView, this.owner);\n    },\n    viewDidSetUnitWidth(unitWidth: number, paneView: PanelView): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n    viewDidSetUnitHeight(unitHeight: number, paneView: PanelView): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n    viewDidSetMinPanelHeight(minPanelHeight: number, paneView: PanelView): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n    viewDidSetPanelStyle(panelStyle: PanelStyle, paneView: PanelView): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n  })\n  readonly panes!: ViewSet<this, PanelView> & Observes<PanelView>;\n\n  protected override onResize(): void {\n    super.onResize();\n    this.resizePanel();\n  }\n\n  protected resizePanel(): void {\n    if (!this.paneLayout.derived) {\n      const widthBasis = this.widthBasis.value;\n      const heightBasis = this.heightBasis.value;\n      const width = widthBasis !== void 0 ? widthBasis : this.style.width.pxValue();\n      const height = heightBasis !== void 0 ? heightBasis : this.style.height.pxValue();\n      let paneLayout: PaneLayout;\n      if (width >= this.minFrameWidth.value && height >= this.minFrameHeight.value) {\n        paneLayout = \"frame\";\n      } else {\n        paneLayout = \"stack\";\n      }\n      this.paneLayout.setIntrinsic(paneLayout);\n    }\n\n    if (this.panes.viewCount === 0) {\n      const widthBasis = this.widthBasis.value;\n      if (widthBasis !== void 0) {\n        this.style.width.setIntrinsic(widthBasis);\n      }\n      const heightBasis = this.heightBasis.value;\n      if (heightBasis !== void 0) {\n        this.style.height.setIntrinsic(heightBasis);\n      }\n    }\n  }\n\n  protected override processChildren(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    if ((processFlags & View.NeedsResize) !== 0 && this.panes.viewCount !== 0) {\n      this.paneLayout.recohere(this.updateTime);\n      const paneLayout = this.paneLayout.value;\n      if (paneLayout === \"frame\") {\n        this.resizeFrameChildren(processFlags, processChild);\n      } else {\n        this.resizeStackChildren(processFlags, processChild);\n      }\n    } else {\n      super.processChildren(processFlags, processChild);\n    }\n  }\n\n  protected resizeFrameChildren(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    let x = this.style.paddingLeft.pxValue();\n    let y = this.style.paddingTop.pxValue();\n    const widthBasis = this.widthBasis.value;\n    const heightBasis = this.heightBasis.value;\n    const width = (widthBasis !== void 0 ? widthBasis : this.style.width.pxValue()) - x;\n    const height = (heightBasis !== void 0 ? heightBasis : this.style.height.pxValue()) - y;\n    const left = x;\n    const epsilon = 0.01;\n    let rowHeight = 0;\n    let rightView: PanelView | null = null;\n\n    type self = this;\n    function resizeBlockChild(this: self, child: View, processFlags: ViewFlags): void {\n      if (child instanceof PanelView) {\n        if (rightView === null) { // allocate row\n          let unitRowWidth = 0;\n          let paneView: PanelView | null = child;\n          while (paneView !== null) {\n            const unitPanelWidth = paneView.unitWidth.value;\n            if (rightView === null || unitRowWidth + unitPanelWidth < 1 + epsilon) {\n              unitRowWidth += unitPanelWidth;\n              rightView = paneView;\n              paneView = paneView.getNextSibling(PanelView);\n            } else {\n              break;\n            }\n          }\n        }\n\n        const paneWidth = child.unitWidth.value * width;\n        const paneHeight = Math.max(child.minPanelHeight.value, child.unitHeight.value * height);\n        child.setIntrinsic({\n          style: {\n            left: x,\n            top: y,\n            visibility: void 0,\n          },\n          widthBasis: paneWidth - child.style.marginLeft.pxValue() - child.style.marginRight.pxValue(),\n          heightBasis: paneHeight - child.style.marginTop.pxValue() - child.style.marginBottom.pxValue(),\n        });\n        x += paneWidth;\n      }\n\n      processChild.call(this, child, processFlags);\n\n      if (child instanceof PanelView) {\n        rowHeight = Math.max(rowHeight, child.style.marginTop.pxValue() + child.style.height.pxValue() + child.style.marginBottom.pxValue());\n        if (child === rightView) { // begin new row\n          x = left;\n          y += rowHeight;\n          rowHeight = 0;\n          rightView = null;\n        }\n      }\n    }\n    super.processChildren(processFlags, resizeBlockChild);\n\n    if (widthBasis !== void 0) {\n      this.style.width.setIntrinsic(width);\n    }\n    if (heightBasis !== void 0) {\n      this.style.height.setIntrinsic(y);\n    }\n  }\n\n  protected resizeStackChildren(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    const x = this.style.paddingLeft.pxValue();\n    let y = this.style.paddingTop.pxValue();\n    const widthBasis = this.widthBasis.value;\n    const heightBasis = this.heightBasis.value;\n    const width = (widthBasis !== void 0 ? widthBasis : this.style.width.pxValue()) - x;\n    const height = (heightBasis !== void 0 ? heightBasis : this.style.height.pxValue()) - y;\n\n    type self = this;\n    function resizeStackChild(this: self, child: View, processFlags: ViewFlags): void {\n      if (child instanceof PanelView) {\n        const paneHeight = Math.max(child.minPanelHeight.value, child.unitHeight.value * height);\n        child.setIntrinsic({\n          style: {\n            left: x,\n            top: y,\n          },\n          widthBasis: width - child.style.marginLeft.pxValue() - child.style.marginRight.pxValue(),\n          heightBasis: paneHeight - child.style.marginTop.pxValue() - child.style.marginBottom.pxValue(),\n        });\n      }\n      processChild.call(this, child, processFlags);\n      if (child instanceof PanelView) {\n        child.style.visibility.setIntrinsic(void 0);\n        y += child.style.marginTop.pxValue() + child.style.height.pxValue() + child.style.marginBottom.pxValue();\n      }\n    }\n    super.processChildren(processFlags, resizeStackChild);\n\n    if (widthBasis !== void 0) {\n      this.style.width.setIntrinsic(width);\n    }\n    if (heightBasis !== void 0) {\n      this.style.height.setIntrinsic(y + this.style.paddingBottom.pxValue());\n    }\n  }\n\n  protected onPanelScroll(event: Event): void {\n    this.requireUpdate(View.NeedsScroll);\n  }\n\n  static override readonly InsertChildFlags: ViewFlags = View.InsertChildFlags | this.NeedsResize;\n  static override readonly RemoveChildFlags: ViewFlags = View.RemoveChildFlags | this.NeedsResize;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Like} from \"@swim/util\";\nimport type {LikeType} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {ControllerObserver} from \"@swim/controller\";\nimport {Controller} from \"@swim/controller\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport {PanelView} from \"./PanelView\";\n\n/** @public */\nexport interface PanelControllerObserver<C extends PanelController = PanelController> extends ControllerObserver<C> {\n  controllerWillAttachPanelTrait?(panelTrait: Trait, controller: C): void;\n\n  controllerDidDetachPanelTrait?(panelTrait: Trait, controller: C): void;\n\n  controllerWillAttachPanelView?(panelView: PanelView, controller: C): void;\n\n  controllerDidDetachPanelView?(panelView: PanelView, controller: C): void;\n\n  controllerWillAttachPane?(paneController: PanelController, controller: C): void;\n\n  controllerDidDetachPane?(paneController: PanelController, controller: C): void;\n\n  controllerWillAttachPaneTrait?(paneTrait: Trait, paneController: PanelController, controller: C): void;\n\n  controllerDidDetachPaneTrait?(paneTrait: Trait, paneController: PanelController, controller: C): void;\n\n  controllerWillAttachPaneView?(paneView: PanelView, paneController: PanelController, controller: C): void;\n\n  controllerDidDetachPaneView?(paneView: PanelView, paneController: PanelController, controller: C): void;\n}\n\n/** @public */\nexport class PanelController extends Controller {\n  declare readonly observerType?: Class<PanelControllerObserver>;\n\n  @TraitViewRef({\n    willAttachTrait(panelTrait: Trait): void {\n      this.owner.callObservers(\"controllerWillAttachPanelTrait\", panelTrait, this.owner);\n    },\n    didDetachTrait(panelTrait: Trait): void {\n      this.owner.callObservers(\"controllerDidDetachPanelTrait\", panelTrait, this.owner);\n    },\n    viewType: PanelView,\n    observesView: true,\n    didAttachView(panelView: PanelView, targetView: View | null): void {\n      this.owner.panelHeader.setView(panelView.header.view);\n      this.owner.panelTitle.setView(panelView.headerTitle.view);\n      this.owner.panelSubtitle.setView(panelView.headerSubtitle.view);\n    },\n    willDetachView(panelView: PanelView): void {\n      this.owner.panelHeader.setView(null);\n      this.owner.panelTitle.setView(null);\n      this.owner.panelSubtitle.setView(null);\n    },\n    willAttachView(panelView: PanelView): void {\n      this.owner.callObservers(\"controllerWillAttachPanelView\", panelView, this.owner);\n    },\n    didDetachView(panelView: PanelView): void {\n      this.owner.callObservers(\"controllerDidDetachPanelView\", panelView, this.owner);\n    },\n    viewWillAttachHeader(headerView: HtmlView): void {\n      this.owner.panelHeader.setView(headerView);\n    },\n    viewDidDetachHeader(headerView: HtmlView): void {\n      this.owner.panelHeader.setView(null);\n    },\n    viewWillAttachHeaderTitle(titleView: HtmlView): void {\n      this.owner.panelTitle.setView(titleView);\n    },\n    viewDidDetachHeaderTitle(titleView: HtmlView): void {\n      this.owner.panelTitle.setView(null);\n    },\n    viewWillAttachHeaderSubtitle(subtitleView: HtmlView): void {\n      this.owner.panelSubtitle.setView(subtitleView);\n    },\n    viewDidDetachHeaderSubtitle(subtitleView: HtmlView): void {\n      this.owner.panelSubtitle.setView(null);\n    },\n  })\n  readonly panel!: TraitViewRef<this, Trait, PanelView> & Observes<PanelView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    get parentView(): View | null {\n      return this.owner.panel.attachView().header.parentView;\n    },\n    initView(headerView: HtmlView): void {\n      this.owner.panel.attachView().header.setView(headerView);\n    },\n    createView(): HtmlView {\n      return this.owner.panel.attachView().header.createView();\n    },\n  })\n  readonly panelHeader!: ViewRef<this, HtmlView>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    get parentView(): View | null {\n      return this.owner.panel.attachView().headerTitle.parentView;\n    },\n    initView(titleView: HtmlView): void {\n      this.owner.panel.attachView().headerTitle.setView(titleView);\n    },\n    fromLike(value: HtmlView | LikeType<HtmlView> | string | undefined): HtmlView {\n      if (value === void 0 || typeof value === \"string\") {\n        return this.owner.panel.attachView().headerTitle.fromLike(value);\n      }\n      return super.fromLike(value);\n    },\n    createView(): HtmlView {\n      return this.owner.panel.attachView().headerTitle.createView();\n    },\n  })\n  readonly panelTitle!: ViewRef<this, Like<HtmlView, string | undefined>>;\n\n  @ViewRef({\n    viewType: HtmlView,\n    viewKey: true,\n    get parentView(): View | null {\n      return this.owner.panel.attachView().headerSubtitle.parentView;\n    },\n    initView(subtitleView: HtmlView): void {\n      this.owner.panel.attachView().headerSubtitle.setView(subtitleView);\n    },\n    fromLike(value: HtmlView | LikeType<HtmlView> | string | undefined): HtmlView {\n      if (value === void 0 || typeof value === \"string\") {\n        return this.owner.panel.attachView().headerSubtitle.fromLike(value);\n      }\n      return super.fromLike(value);\n    },\n    createView(): HtmlView {\n      return this.owner.panel.attachView().headerSubtitle.createView();\n    },\n  })\n  readonly panelSubtitle!: ViewRef<this, Like<HtmlView, string | undefined>>;\n\n  @TraitViewControllerSet({\n    get controllerType(): typeof PanelController {\n      return PanelController;\n    },\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.panel.attachView();\n    },\n    getTraitViewRef(paneController: PanelController): TraitViewRef<unknown, Trait, PanelView> {\n      return paneController.panel;\n    },\n    willAttachController(paneController: PanelController): void {\n      this.owner.callObservers(\"controllerWillAttachPane\", paneController, this.owner);\n    },\n    didAttachController(paneController: PanelController): void {\n      const paneTrait = paneController.panel.trait;\n      if (paneTrait !== null) {\n        this.attachPaneTrait(paneTrait, paneController);\n      }\n      const paneView = paneController.panel.view;\n      if (paneView !== null) {\n        this.attachPaneView(paneView, paneController);\n      }\n    },\n    willDetachController(paneController: PanelController): void {\n      const paneView = paneController.panel.view;\n      if (paneView !== null) {\n        this.detachPaneView(paneView, paneController);\n      }\n      const paneTrait = paneController.panel.trait;\n      if (paneTrait !== null) {\n        this.detachPaneTrait(paneTrait, paneController);\n      }\n    },\n    didDetachController(paneController: PanelController): void {\n      this.owner.callObservers(\"controllerDidDetachPane\", paneController, this.owner);\n    },\n    controllerWillAttachPanelTrait(paneTrait: Trait, paneController: PanelController): void {\n      this.owner.callObservers(\"controllerWillAttachPaneTrait\", paneTrait, paneController, this.owner);\n      this.attachPaneTrait(paneTrait, paneController);\n    },\n    controllerDidDetachPanelTrait(paneTrait: Trait, paneController: PanelController): void {\n      this.detachPaneTrait(paneTrait, paneController);\n      this.owner.callObservers(\"controllerDidDetachPaneTrait\", paneTrait, paneController, this.owner);\n    },\n    attachPaneTrait(paneTrait: Trait, paneController: PanelController): void {\n      // hook\n    },\n    detachPaneTrait(paneTrait: Trait, paneController: PanelController): void {\n      // hook\n    },\n    controllerWillAttachPanelView(paneView: PanelView, paneController: PanelController): void {\n      this.owner.callObservers(\"controllerWillAttachPaneView\", paneView, paneController, this.owner);\n      this.attachPaneView(paneView, paneController);\n    },\n    controllerDidDetachPanelView(paneView: PanelView, paneController: PanelController): void {\n      this.detachPaneView(paneView, paneController);\n      this.owner.callObservers(\"controllerDidDetachPaneView\", paneView, paneController, this.owner);\n    },\n    attachPaneView(paneView: PanelView, paneController: PanelController): void {\n      // hook\n    },\n    detachPaneView(paneView: PanelView, paneController: PanelController): void {\n      paneView.remove();\n    },\n  })\n  readonly panes!: TraitViewControllerSet<this, Trait, PanelView, PanelController> & Observes<PanelController> & {\n    attachPaneTrait(paneTrait: Trait, paneController: PanelController): void,\n    detachPaneTrait(paneTrait: Trait, paneController: PanelController): void,\n    attachPaneView(paneView: PanelView, paneController: PanelController): void,\n    detachPaneView(paneView: PanelView, paneController: PanelController): void,\n  };\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {ViewFlags} from \"@swim/view\";\nimport {View} from \"@swim/view\";\nimport {ViewSet} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {SheetViewObserver} from \"@swim/sheet\";\nimport {SheetView} from \"@swim/sheet\";\nimport type {PanelStyle} from \"./PanelView\";\nimport {PanelView} from \"./PanelView\";\n\n/** @public */\nexport interface BoardViewObserver<V extends BoardView = BoardView> extends SheetViewObserver<V> {\n  viewWillAttachPanel?(panelView: PanelView, targetView: View | null, view: V): void;\n\n  viewDidDetachPanel?(panelView: PanelView, view: V): void;\n}\n\n/** @public */\nexport class BoardView extends SheetView {\n  protected override initSheet(): void {\n    super.initSheet();\n    this.classList.add(\"board\");\n  }\n\n  declare readonly observerType?: Class<BoardViewObserver>;\n\n  @ViewSet({\n    viewType: PanelView,\n    binds: true,\n    observes: true,\n    initView(panelView: PanelView): void {\n      panelView.style.setIntrinsic({\n        position: \"absolute\",\n        visibility: \"hidden\",\n      });\n    },\n    willAttachView(panelView: PanelView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachPanel\", panelView, target, this.owner);\n    },\n    didDetachView(panelView: PanelView): void {\n      this.owner.callObservers(\"viewDidDetachPanel\", panelView, this.owner);\n    },\n    viewDidSetUnitWidth(unitWidth: number, panelView: PanelView): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n    viewDidSetUnitHeight(unitHeight: number, panelView: PanelView): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n    viewDidSetMinPanelHeight(minPanelHeight: number, paneView: PanelView): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n    viewDidSetPanelStyle(panelStyle: PanelStyle, paneView: PanelView): void {\n      this.owner.requireUpdate(View.NeedsResize);\n    },\n  })\n  readonly panels!: ViewSet<this, PanelView> & Observes<PanelView>;\n\n  protected override processChildren(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    if ((processFlags & View.NeedsResize) !== 0) {\n      this.resizeChildren(processFlags, processChild);\n    } else {\n      super.processChildren(processFlags, processChild);\n    }\n  }\n\n  protected resizeChildren(processFlags: ViewFlags, processChild: (this: this, child: View, processFlags: ViewFlags) => void): void {\n    const edgeInsets = this.edgeInsets.value;\n    const insetTop = Math.max(this.style.paddingTop.pxValue(), edgeInsets.insetTop);\n    const insetRight = Math.max(this.style.paddingRight.pxValue(), edgeInsets.insetRight);\n    const insetBottom = Math.max(this.style.paddingBottom.pxValue(), edgeInsets.insetBottom);\n    const insetLeft = Math.max(this.style.paddingLeft.pxValue(), edgeInsets.insetLeft);\n    const width = this.style.width.pxValue() - this.style.marginLeft.pxValue() - insetLeft - insetRight - this.style.marginRight.pxValue();\n    const height = this.style.height.pxValue() - this.style.marginTop.pxValue() - insetTop - insetBottom - this.style.marginBottom.pxValue();\n    const x = insetLeft;\n    let y = insetTop;\n\n    type self = this;\n    function resizeChild(this: self, child: View, processFlags: ViewFlags): void {\n      if (child instanceof PanelView) {\n        const panelHeight = Math.max(child.minPanelHeight.value, child.unitHeight.value * height);\n        child.setIntrinsic({\n          style: {\n            left: x,\n            top: y,\n          },\n          widthBasis: width - child.style.marginLeft.pxValue() - child.style.marginRight.pxValue(),\n          heightBasis: panelHeight - child.style.marginTop.pxValue() - child.style.marginBottom.pxValue(),\n        });\n      }\n      if (child instanceof HtmlView) {\n        child.style.paddingBottom.setState(child.nextSibling === null ? this.style.paddingBottom.value : null, Affinity.Transient);\n      }\n      processChild.call(this, child, processFlags);\n      if (child instanceof PanelView) {\n        child.style.visibility.setIntrinsic(void 0);\n        y += child.style.marginTop.pxValue() + child.style.height.pxValue() + child.style.marginBottom.pxValue();\n      }\n    }\n    super.processChildren(processFlags, resizeChild);\n  }\n\n  static override readonly InsertChildFlags: ViewFlags = View.InsertChildFlags | this.NeedsResize;\n  static override readonly RemoveChildFlags: ViewFlags = View.RemoveChildFlags | this.NeedsResize;\n}\n","// Copyright 2015-2023 Nstream, inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {Observes} from \"@swim/util\";\nimport type {Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TraitViewControllerSet} from \"@swim/controller\";\nimport type {SheetControllerObserver} from \"@swim/sheet\";\nimport {SheetController} from \"@swim/sheet\";\nimport type {PanelView} from \"./PanelView\";\nimport {PanelController} from \"./PanelController\";\nimport {BoardView} from \"./BoardView\";\n\n/** @public */\nexport interface BoardControllerObserver<C extends BoardController = BoardController> extends SheetControllerObserver<C> {\n  controllerWillAttachSheetTrait?(boatdTrait: Trait, controller: C): void;\n\n  controllerDidDetachSheetTrait?(boatdTrait: Trait, controller: C): void;\n\n  controllerWillAttachSheetView?(boardView: BoardView, controller: C): void;\n\n  controllerDidDetachSheetView?(boardView: BoardView, controller: C): void;\n\n  controllerWillAttachPanel?(panelController: PanelController, controller: C): void;\n\n  controllerDidDetachPanel?(panelController: PanelController, controller: C): void;\n\n  controllerWillAttachPanelTrait?(panelTrait: Trait, panelController: PanelController, controller: C): void;\n\n  controllerDidDetachPanelTrait?(panelTrait: Trait, panelController: PanelController, controller: C): void;\n\n  controllerWillAttachPanelView?(panelView: PanelView, panelController: PanelController, controller: C): void;\n\n  controllerDidDetachPanelView?(panelView: PanelView, panelController: PanelController, controller: C): void;\n}\n\n/** @public */\nexport class BoardController extends SheetController {\n  declare readonly observerType?: Class<BoardControllerObserver>;\n\n  @TraitViewRef({\n    extends: true,\n    viewType: BoardView,\n  })\n  override readonly sheet!: TraitViewRef<this, Trait, BoardView> & SheetController[\"sheet\"];\n\n  @TraitViewControllerSet({\n    controllerType: PanelController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.sheet.attachView();\n    },\n    getTraitViewRef(panelController: PanelController): TraitViewRef<unknown, Trait, PanelView> {\n      return panelController.panel;\n    },\n    willAttachController(panelController: PanelController): void {\n      this.owner.callObservers(\"controllerWillAttachPanel\", panelController, this.owner);\n    },\n    didAttachController(panelController: PanelController): void {\n      const panelTrait = panelController.panel.trait;\n      if (panelTrait !== null) {\n        this.attachPanelTrait(panelTrait, panelController);\n      }\n      const panelView = panelController.panel.view;\n      if (panelView !== null) {\n        this.attachPanelView(panelView, panelController);\n      }\n    },\n    willDetachController(panelController: PanelController): void {\n      const panelView = panelController.panel.view;\n      if (panelView !== null) {\n        this.detachPanelView(panelView, panelController);\n      }\n      const panelTrait = panelController.panel.trait;\n      if (panelTrait !== null) {\n        this.detachPanelTrait(panelTrait, panelController);\n      }\n    },\n    didDetachController(panelController: PanelController): void {\n      this.owner.callObservers(\"controllerDidDetachPanel\", panelController, this.owner);\n    },\n    controllerWillAttachPanelTrait(panelTrait: Trait, panelController: PanelController): void {\n      this.owner.callObservers(\"controllerWillAttachPanelTrait\", panelTrait, panelController, this.owner);\n      this.attachPanelTrait(panelTrait, panelController);\n    },\n    controllerDidDetachPanelTrait(panelTrait: Trait, panelController: PanelController): void {\n      this.detachPanelTrait(panelTrait, panelController);\n      this.owner.callObservers(\"controllerDidDetachPanelTrait\", panelTrait, panelController, this.owner);\n    },\n    attachPanelTrait(panelTrait: Trait, panelController: PanelController): void {\n      // hook\n    },\n    detachPanelTrait(panelTrait: Trait, panelController: PanelController): void {\n      // hook\n    },\n    controllerWillAttachPanelView(panelView: PanelView, panelController: PanelController): void {\n      this.owner.callObservers(\"controllerWillAttachPanelView\", panelView, panelController, this.owner);\n      this.attachPanelView(panelView, panelController);\n    },\n    controllerDidDetachPanelView(panelView: PanelView, panelController: PanelController): void {\n      this.detachPanelView(panelView, panelController);\n      this.owner.callObservers(\"controllerDidDetachPanelView\", panelView, panelController, this.owner);\n    },\n    attachPanelView(panelView: PanelView, panelController: PanelController): void {\n      // hook\n    },\n    detachPanelView(panelView: PanelView, panelController: PanelController): void {\n      panelView.remove();\n    },\n  })\n  readonly panels!: TraitViewControllerSet<this, Trait, PanelView, PanelController> & Observes<PanelController> & {\n    attachPanelTrait(panelTrait: Trait, panelController: PanelController): void,\n    detachPanelTrait(panelTrait: Trait, panelController: PanelController): void,\n    attachPanelView(panelView: PanelView, panelController: PanelController): void,\n    detachPanelView(panelView: PanelView, panelController: PanelController): void,\n  };\n}\n"],"names":["__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","f","TypeError","_","kind","key","target","prototype","descriptor","Object","getOwnPropertyDescriptor","name","done","i","length","context","p","access","addInitializer","push","result","get","set","init","unshift","defineProperty","__runInitializers","thisArg","value","useValue","arguments","call","SuppressedError","ButtonGlow","HtmlView","_a","_classSuper","constructor","node","super","this","glowState","_instanceExtraInitializers","left","_left_initializers","opacity","_opacity_initializers","glowTimer","initGlow","setIntrinsic","classList","style","position","width","Length","zero","height","borderRadius","pct","pointerEvents","didMount","backgroundColor","hasAffinity","Affinity","Intrinsic","highlightColor","getLookOr","Look","alpha","onUnmount","cancelGlow","remove","onApplyTheme","theme","mood","timing","getOr","glow","clientX","clientY","delay","bind","setTimeout","Timing","fromLike","willGlow","offsetParent","clientBounds","getBoundingClientRect","cx","cy","top","rx","Math","max","ry","r","sqrt","getLook","didGlow","clearTimeout","pulse","willPulse","didPulse","fade","didFade","willFade","_left_decorators","Animator","inherits","parent","owner","didTransition","_opacity_decorators","static","private","has","obj","metadata","_metadata","ButtonMembrane","glows","_glows_initializers","gesture","_gesture_initializers","initMembrane","add","input","detail","x","y","inputType","prependChild","_glows_decorators","Property","valueType","Boolean","_gesture_decorators","PositionGesture","bindsOwner","didBeginPress","event","didMovePress","isRunaway","cancelPress","contains","clearHoldTimer","beginHover","didEndPress","endHover","didCancelPress","FloatingButton","buttonType","_buttonType_initializers","icons","_icons_initializers","icon","_icon_initializers","presence","_presence_initializers","initButton","overflow","userSelect","cursor","accentColor","shadow","Mood","floating","shadowColor","color","phase","getPhaseOr","withColor","boxShadow","onLayout","_buttonType_decorators","String","updateButtonType","didSetValue","newButtonType","oldButtonType","_icons_decorators","ViewSet","viewType","HtmlIconView","observes","viewDidApplyTheme","iconView","iconColor","viewDidAnimate","tweening","view","deleteView","_icon_decorators","ViewRef","createView","create","state","transform","Transform","rotate","Angle","deg","iconLayout","setAffinity","Extrinsic","viewCount","oldIconView","newIconView","graphics","attachView","insertView","pop","iconViews","views","viewId","_presence_decorators","PresenceAnimator","extends","didStartHovering","modifyMood","Feel","default","hovering","didStopHovering","ButtonItem","initButtonItem","button","createButton","setChild","childView","getChild","buttonIcon","label","onInsertChild","targetView","childKey","onInsertButton","onInsertLabel","onRemoveChild","onRemoveButton","onRemoveLabel","display","right","bottom","fontSize","fontWeight","lineHeight","whiteSpace","labelColor","ButtonStack","stackHeight","_stackHeight_initializers","buttonSpacing","_buttonSpacing_initializers","itemSpacing","_itemSpacing_initializers","_button_initializers","items","_items_initializers","modality","_modality_initializers","click","_click_initializers","contextmenu","_contextmenu_initializers","initButtonStack","closeIcon","insertItem","item","index","childNodes","insertChild","removeItems","NodeView","removeChild","layoutStack","getPhase","childCount","buttonView","zIndex","itemIndex","pxValue","dy","show","willShowStack","didShowStack","callObservers","requireUpdate","View","NeedsLayout","hide","willHideStack","didHideStack","VectorIcon","Number","_buttonSpacing_decorators","ThemeAnimator","updateFlags","_itemSpacing_decorators","_button_decorators","viewKey","binds","willAttachView","Presence","presented","presenting","initView","_items_decorators","itemView","dismissed","transition","willPresent","modal","present","didPresent","willDismiss","didDismiss","_modality_decorators","defaultPrevented","min","y0","setPhase","asPresenting","t","t0","holdDelay","dismiss","buttons","toggle","didLongPress","preventDefault","_click_decorators","EventHandler","eventType","handle","_b","stopPropagation","_contextmenu_decorators","Lazy","_static_get_closeIcon_decorators","_staticExtraInitializers","_stackHeight_decorators","IconButton","_iconLayout_initializers","_iconColor_initializers","_graphics_initializers","hovers","_hovers_initializers","initTheme","justifyContent","alignItems","modifyTheme","translucent","Color","derived","oldGraphics","Icon","newGraphics","withTheme","isThemed","onResize","_iconLayout_decorators","IconLayout","initValue","of","_iconColor_decorators","didSetState","_graphics_decorators","IconGraphicsAnimator","Graphics","SvgIconView","attributes","viewWillLayout","viewBox","setInherits","_hovers_decorators","DisclosureButton","disclosure","_disclosure_initializers","collapsedColor","_collapsedColor_initializers","expandedColor","_expandedColor_initializers","initDisclosureButton","flexGrow","flexShrink","appendChild","SvgView","points","translate","arrow","needsDisplay","displayFlags","flags","fill","colorInterpolator","interpolateTo","_disclosure_decorators","ExpansionAnimator","look","textColor","_collapsedColor_decorators","_expandedColor_decorators","ToolLayout","grow","shrink","basis","align","inAlign","outAlign","overlap","overpad","inPresence","outPresence","withKey","copy","withFlex","withAlign","withOverlap","withOverpad","withPresence","resized","that","ToolLayoutInterpolator","equivalentTo","epsilon","Equivalent","equals","Equals","debug","output","write","toString","Format","fromInit","_super","l0","l1","interpolator","u","growInterpolator","shrinkInterpolator","basisInterpolator","alignInterpolator","inAlignInterpolator","outAlignInterpolator","overlapInterpolator","overpadInterpolator","presenceInterpolator","inPresenceInterpolator","outPresenceInterpolator","widthInterpolator","leftInterpolator","rightInterpolator","setPrototypeOf","Interpolator","width0","width1","PxLength","StepInterpolator","configurable","BarLayout","spacing","tools","getTool","tool","oldTools","toolCount","newTools","Array","barWidth","barLeft","barRight","toolSpacing","k","toolWidth","delta","j","BarLayoutInterpolator","theseTools","thoseTools","n","Arrays","equal","barTools","spacingInterpolator","toolInterpolators","tools0","tools1","tool0","tool1","asDismissing","ToolView","xAlign","_xAlign_initializers","effectiveWidth","_effectiveWidth_initializers","initTool","_xAlign_decorators","ConstraintProperty","_effectiveWidth_decorators","TitleToolView","content","_content_initializers","overflowX","layoutTool","contentView","contentWidth","didPress","_content_decorators","didDetachView","text","setState","fromTag","textOverflow","overflowY","ButtonToolView","svg","_svg_initializers","hover","_hover_initializers","boxSizing","getter","Reflexive","svgView","_get_iconColor_decorators","_svg_decorators","_hover_decorators","FocusAnimator","Focus","unfocused","newHover","oldHover","transparent","viewDidUnmount","unfocus","focus","SearchToolView","_input_initializers","stylesheet","_stylesheet_initializers","inputRule","_inputRule_initializers","inputFocusRule","_inputFocusRule_initializers","inputPlaceholderRule","_inputPlaceholderRule_initializers","inputSearchCancelButtonRule","_inputSearchCancelButtonRule_initializers","inputView","toolHeight","inputWidth","excessWidth","excessHeight","_input_decorators","onInput","onKeyDown","didAttachView","addEventListener","willDetachView","removeEventListener","query","type","paddingTop","paddingRight","paddingBottom","paddingLeft","_stylesheet_decorators","StyleView","_inputRule_decorators","StyleRule","styleView","sheet","selector","appearance","borderWidth","borderStyle","borderColor","outlineWidth","outlineStyle","outlineColor","setStyle","_inputFocusRule_decorators","focusColor","_inputPlaceholderRule_decorators","placeholderColor","_inputSearchCancelButtonRule_decorators","ToolController","Controller","_tool_initializers","layout","_layout_initializers","_tool_decorators","TraitViewRef","observesView","toolView","viewDidPress","viewDidLongPress","_layout_decorators","toolLayout","TitleToolController","setView","deinitView","viewWillAttachContent","viewDidDetachContent","ButtonToolController","viewDidSetGraphics","toolIcon","SearchToolController","viewWillAttachInput","viewDidDetachInput","viewDidUpdateSearch","viewDidSubmitSearch","viewDidCancelSearch","BarView","placement","_placement_initializers","barHeight","_barHeight_initializers","_toolSpacing_initializers","_tools_initializers","initBar","primary","edgeInsets","toolViewClass","getOrCreateTool","setTool","resizeBar","resizeBarTop","resizeBarBottom","resizeBarNone","plus","insetTop","oldLayout","pxState","insetLeft","insetRight","getValue","newLayout","insetBottom","displayChildren","displayChild","layoutChildren","toolTop","px","toolBottom","child","dismissing","Transient","didLayout","layoutTools","overlapView","toolX","offsetLeft","overlapX","overlapWidth","_placement_decorators","NeedsResize","applyEdgeInsets","decohereOutlets","transformState","_barHeight_decorators","ThemeConstraintAnimator","_toolSpacing_decorators","_get_edgeInsets_decorators","getOutletValue","outlet","_tools_decorators","BarController","bar","_bar_initializers","createLayout","toolControllers","controllers","controllerId","updateLayout","barView","barLayout","navigating","toolControllerClass","toolController","getToolView","getOrCreateToolView","Error","setToolView","onAssemble","_bar_decorators","NeedsAssemble","viewDidSetBarLayout","viewDidDismissTool","TraitViewControllerSet","controllerType","parentView","getTraitViewRef","willAttachController","didAttachController","attachToolView","willDetachController","detachToolView","didDetachController","controllerWillAttachToolView","controllerDidDetachToolView","toolContentView","attachToolContentView","detachToolContentView","controllerDidSetToolLayout","controllerWillAttachToolContentView","controllerDidDetachToolContentView","controllerDidSetToolIcon","controllerDidUpdateSearch","controllerDidSubmitSearch","controllerDidCancelSearch","controllerDidPressToolView","controllerDidLongPressToolView","TokenView","tokenState","expandedPhase","_expandedPhase_initializers","shape","_shape_initializers","head","_head_initializers","headGesture","_headGesture_initializers","headIcon","_headIcon_initializers","body","_body_initializers","bodyGesture","_bodyGesture_initializers","foot","_foot_initializers","footGesture","_footGesture_initializers","footIcon","_footIcon_initializers","accessory","_accessory_initializers","labelContainer","_labelContainer_initializers","_label_initializers","onClickHead","onClickBody","onClickFoot","initToken","initShape","shapeView","initHead","headView","fillRule","initHeadIcon","headIconView","initBody","bodyView","initFoot","footView","initFootIcon","footIconView","initLabelContainer","initLabel","labelView","expanded","collapsed","fillLook","needsProcess","processFlags","NeedsAnimate","layoutToken","getStateOr","boxHeight","clientHeight","tokenHeight","radius","pad","gap","padAngle","asin","labelPaddingLeft","labelPaddingRight","accessoryPaddingRight","accessoryIcon","labelWidth","bodyWidth","clientWidth","accessoryWidth","footWidth","tokenWidth","bodyRight","PathContext","setPrecision","arc","PI","closePath","embossed","renderer","PathRenderer","frame","R2Box","render","removeView","d","expand","willExpand","onExpand","didExpand","collapse","willCollapse","onCollapse","didCollapse","blur","didPressHead","didPressBody","didPressFoot","_expandedPhase_decorators","_shape_decorators","_head_decorators","forTag","viewDidMount","viewWillUnmount","updated","_headGesture_decorators","_headIcon_decorators","_body_decorators","_bodyGesture_decorators","_foot_decorators","_footGesture_decorators","_footIcon_decorators","_accessory_decorators","_labelContainer_decorators","_label_decorators","InputTokenView","placeholderRule","_placeholderRule_initializers","onInputUpdate","onInputChange","onInputKey","padding","placeholderLook","font","didUpdateInput","didChangeInput","didAcceptInput","_placeholderRule_decorators","ColLayout","optional","persistent","hidden","asOptional","asPersistent","withTextColor","ColorLook","asHidden","TableLayout","colSpacing","cols","getCol","col","oldCols","colCount","newCols","tableWidth","tableLeft","tableRight","colWidth","theseCols","thoseCols","tableCols","CellView","initCell","hyperlink","tryValue","activate","_get_hyperlink_decorators","Hyperlink","href","title","textDecorationLine","TextCellView","alignSelf","IconCellView","layoutIcon","DisclosureCellView","superDisclosure","inlet","CellTrait","Trait","createCellController","CellController","TextCellTrait","TextCellController","IconCellTrait","IconCellController","cell","_cell_initializers","_cell_decorators","traitType","willAttachTrait","cellTrait","initTrait","bindInlet","deinitTrait","unbindInlet","didDetachTrait","cellView","setContentView","observesTrait","traitDidSetContent","trait","setIcon","traitDidSetIcon","cellIcon","LeafView","depth","_depth_initializers","rowSpacing","_rowSpacing_initializers","rowHeight","_rowHeight_initializers","stretch","_stretch_initializers","highlight","_highlight_initializers","cells","_cells_initializers","initLeaf","getCell","cellViewClass","getOrCreateCell","setCell","recohere","updateTime","layoutLeaf","_stretch_decorators","willFocus","willUnfocus","_highlight_decorators","selectionColor","didFocus","didUnfocus","_cells_decorators","Node","parentNode","_depth_decorators","_rowSpacing_decorators","_rowHeight_decorators","LeafTrait","cellTraitClass","getTrait","setTrait","onStartConsuming","consumeTraits","onStopConsuming","unconsumeTraits","TraitSet","targetTrait","didAttachTrait","consuming","consume","willDetachTrait","unconsume","detectModel","model","LeafController","leaf","_leaf_initializers","cellControllerClass","cellController","getCellTrait","leafTrait","getOrCreateCellTrait","setCellTrait","getCellView","leafView","getOrCreateCellView","setCellView","_leaf_decorators","addTraits","traits","deleteTraits","traitWillAttachCell","addTrait","traitDidDetachCell","deleteTrait","cellControllers","viewWillHighlight","viewDidHighlight","viewWillUnhighlight","viewDidUnhighlight","viewDidEnter","viewDidLeave","attachCellTrait","attachCellView","detachCellView","detachCellTrait","controllerWillAttachCellTrait","controllerDidDetachCellTrait","controllerWillAttachCellView","controllerDidDetachCellView","cellContentView","attachCellContentView","detachCellContentView","controllerDidPressCellView","controllerDidLongPressCellView","controllerWillAttachCellContentView","controllerDidDetachCellContentView","controllerDidSetCellIcon","createController","RowView","tree","_tree_initializers","expansion","_expansion_initializers","expanding","_expanding_initializers","disclosing","_disclosing_initializers","visibleFrame","_visibleFrame_initializers","initRow","detectVisibleFrame","yBleed","getValueOr","parentVisibleFrame","xMin","yMin","xMax","yMax","bounds","window","innerWidth","innerHeight","onProcess","setOutletValue","NeedsScroll","onDisplay","resizeRow","superLayout","inletValue","layoutRow","disclosingPhase","leafHeightValue","leafHeightState","treeHeightValue","treeHeightState","treeView","heightValue","heightState","setInterpolatedValue","onCull","onUncull","newDepth","oldDepth","_tree_decorators","TableView","_expansion_decorators","_expanding_decorators","Expansion","newDisclosure","oldDisclosure","direction","tableView","getRoot","_disclosing_decorators","_visibleFrame_decorators","outletValue","newOutletValue","oldOutletValue","equalValues","RowTrait","TraitRef","TableTrait","treeTrait","detectTrait","RowController","row","_row_initializers","_row_decorators","rowTrait","traitWillAttachTree","traitDidDetachTree","rowView","treeController","controller","table","viewWillExpand","viewDidExpand","viewWillCollapse","viewDidCollapse","viewWillAttachTree","TraitViewControllerRef","TableController","initController","attachTreeTrait","attachTreeView","deinitController","detachTreeTrait","detachTreeView","controllerWillAttachTreeTrait","controllerDidDetachTreeTrait","controllerWillAttachTableView","controllerDidDetachTableView","detectController","ColView","initCol","TextColView","legendColor","IconColView","DisclosureColView","inheritName","ColTrait","createColController","ColController","TextColTrait","TextColController","IconColTrait","IconColController","_col_initializers","_col_decorators","colTrait","traitDidSetLayout","colLayout","colView","setLabelView","traitDidSetLabel","viewWillAttachLabel","viewDidDetachLabel","colIcon","HeaderView","_cols_initializers","initHeader","colViewClass","getOrCreateCol","setCol","layoutHeader","_cols_decorators","HeaderTrait","colTraitClass","HeaderController","header","_header_initializers","colControllerClass","colController","getColTrait","headerTrait","getOrCreateColTrait","setColTrait","getColView","headerView","getOrCreateColView","setColView","_header_decorators","traitWillAttachCol","traitDidDetachCol","colControllers","insertChildView","attachColTrait","attachColView","detachColView","detachColTrait","controllerWillAttachColTrait","controllerDidDetachColTrait","controllerWillAttachColView","controllerDidDetachColView","controllerDidSetColLayout","colLabelView","attachColLabelView","detachColLabelView","controllerDidPressColView","controllerDidLongPressColView","controllerWillAttachColLabelView","controllerDidDetachColLabelView","controllerDidSetColIcon","rows","_rows_initializers","visibleViews","initTable","getRow","rowViewClass","getOrCreateRow","setRow","resizeTable","processVisibleViews","processChild","RemovingFlag","setFlags","processChildren","culled","scrollChildren","expandingPhase","yValue","yState","rowIndex","isVisible","yMin0","yMax0","yMin1","yMax1","setCulled","displayVisibleViews","disclosurePhase","nested","newExpansion","oldExpansion","_rows_decorators","viewWillAttachLeaf","viewDidDetachLeaf","viewDidEnterLeaf","viewDidLeaveLeaf","viewDidPressLeaf","viewDidLongPressLeaf","viewDidDetachTree","viewWillHighlightLeaf","viewDidHighlightLeaf","viewWillUnhighlightLeaf","viewDidUnhighlightLeaf","_colSpacing_initializers","colLayouts","colTraits","traitId","_colSpacing_decorators","newColSpacing","oldColSpacing","_table_initializers","layoutTable","tableLayout","_table_decorators","tableTrait","traitDidSetTableLayout","traitWillAttachHeader","traitDidDetachHeader","traitWillAttachRow","traitDidDetachRow","headerController","rowControllers","rowController","getTargetView","viewWillAttachHeader","viewDidDetachHeader","attachHeaderTrait","attachHeaderView","detachHeaderView","detachHeaderTrait","controllerWillAttachHeaderTrait","controllerDidDetachHeaderTrait","controllerWillAttachHeaderView","controllerDidDetachHeaderView","controllerDidPressHeaderView","controllerDidLongPressHeaderView","attachRowTrait","attachRowView","detachRowView","detachRowTrait","controllerDidAttachParent","targetController","getNextSibling","reinsertChild","controllerWillAttachRowTrait","controllerDidDetachRowTrait","controllerWillAttachRowView","controllerDidDetachRowView","controllerWillAttachLeafTrait","attachLeafTrait","controllerDidDetachLeafTrait","detachLeafTrait","controllerWillAttachLeafView","attachLeafView","controllerDidDetachLeafView","detachLeafView","controllerWillAttachCell","attachCell","controllerDidDetachCell","detachCell","controllerWillAttachTree","attachTree","controllerDidDetachTree","detachTree","controllerWillAttachTreeView","controllerDidDetachTreeView","controllerWillExpandRowView","controllerDidExpandRowView","controllerWillCollapseRowView","controllerDidCollapseRowView","ScrimView","displayState","_backgroundColor_initializers","syntheticClick","_syntheticClick_initializers","HiddenState","initScrim","black","setDisplayState","isShown","ShownState","ShowingState","ShowState","isHidden","HidingState","HideState","willShowScrim","didShowScrim","willHideScrim","didHideScrim","Provider","serviceDidSetModality","newModality","oldModality","modalService","_backgroundColor_decorators","willTransition","_get_modal_decorators","didAttachService","service","willDetachService","initEventType","PointerEvent","TouchEvent","displaceModals","_syntheticClick_decorators","enabled","PopoverView","placementGap","_placementGap_initializers","arrowWidth","_arrowWidth_initializers","arrowHeight","_arrowHeight_initializers","source","_source_initializers","placementFrame","_placementFrame_initializers","dropdown","_dropdown_initializers","sourceFrame","currentPlacement","initArrow","createArrow","place","force","sourceView","oldSourceFrame","newSourceFrame","popoverFrame","placePopover","placeArrow","popoverWidth","popoverHeight","parentBounds","parentLeft","parentTop","sourceLeft","pageXOffset","sourceRight","sourceTop","pageYOffset","sourceBottom","sourceWidth","sourceHeight","sourceX","sourceY","placementLeft","placementRight","placementTop","placementBottom","marginLeft","marginRight","marginTop","marginBottom","allowedPlacement","offsetTop","oldWidth","oldHeight","oldMaxWidth","maxWidth","oldMaxHeight","maxHeight","round","willPlacePopover","onPlacePopover","didPlacePopover","offsetRight","offsetBottom","arrowXMin","arrowXMax","arrowYMin","arrowYMax","borderLeftWidth","borderLeftStyle","borderLeftColor","borderRightWidth","borderRightStyle","borderRightColor","borderTopWidth","borderTopStyle","borderTopColor","borderBottomWidth","borderBottomStyle","borderBottomColor","_placementGap_decorators","_arrowWidth_decorators","_arrowHeight_decorators","_source_decorators","viewDidResize","viewDidScroll","viewDidLayout","viewDidProject","viewDidSetAttribute","viewDidSetStyle","priority","visibility","a","b","_placementFrame_decorators","_dropdown_decorators","DrawerView","collapsedWidth","_collapsedWidth_initializers","expandedWidth","_expandedWidth_initializers","effectiveHeight","_effectiveHeight_initializers","initDrawer","overscrollBehaviorY","overflowScrolling","isHorizontal","isVertical","layoutDrawer","viewIdiom","layoutDrawerTop","layoutDrawerRight","layoutDrawerBottom","layoutDrawerLeft","presencePhase","getCssValue","times","stretchPhase","_collapsedWidth_decorators","_expandedWidth_decorators","newValue","oldValue","toNumber","_effectiveHeight_decorators","DrawerButton","drawerView","initIcon","hamburgerIcon","setDrawerView","_static_get_hamburgerIcon_decorators","SheetView","fullBleed","_fullBleed_initializers","sheetAlign","_sheetAlign_initializers","scroll","_scroll_initializers","initSheet","layoutSheet","sheetWidth","_fullBleed_decorators","_scroll_decorators","_sheetAlign_decorators","SheetController","searchable","_searchable_initializers","searching","_searching_initializers","_sheet_initializers","back","_back_initializers","forward","_forward_initializers","_title_initializers","_handle_initializers","modeTools","_modeTools_initializers","updateSearch","submitSearch","sheetView","setValue","Inherited","_searchable_decorators","_searching_decorators","_sheet_decorators","sheetTrait","viewDidSetFullBleed","viewWillPresent","viewDidPresent","viewWillDismiss","viewDidDismiss","_back_decorators","ControllerRef","backController","_forward_decorators","forwardController","_title_decorators","titleController","titleView","_handle_decorators","handleController","active","handleView","updateActive","setActive","inserting","insertController","_modeTools_decorators","ordered","modeToolController","targetToolController","Objects","getNextValue","uid","modeToolView","NavBarController","showBackTitle","_showBackTitle_initializers","closeButton","_closeButton_initializers","backButton","_backButton_initializers","searchButton","_searchButton_initializers","searchInput","_searchInput_initializers","cancelSearch","_cancelSearch_initializers","front","_front_initializers","frontController","createSearchLayout","createNavLayout","frontKey","backKey","closeButtonController","closeButtonLayout","closeButtonView","backButtonController","backButtonLayout","backTitleLayout","backTitleView","frontTitleLayout","frontTitleView","oldBarLayout","oldBackLayout","searchButtonController","searchButtonLayout","searchInputController","searchInputLayout","cancelSearchController","cancelSearchLayout","backIcon","searchIcon","withFillLook","_showBackTitle_decorators","_closeButton_decorators","_backButton_decorators","_searchButton_decorators","_searchInput_decorators","placeholder","_cancelSearch_decorators","searchInputView","_front_decorators","controllerWillAttachBack","controllerDidDetachBack","controllerWillAttachForward","controllerDidDetachForward","controllerDidSetSearchable","controllerDidSetSearching","controllerWillAttachTitle","controllerDidDetachTitle","_static_get_backIcon_decorators","_static_get_searchIcon_decorators","StackView","navBar","_navBar_initializers","sheets","_sheets_initializers","initStack","resizeStack","stackWidth","cssState","navBarView","navBarHeight","mounted","sheetViews","_navBar_decorators","viewDidSetBarHeight","_sheets_decorators","StackController","backAlign","_backAlign_initializers","stack","_stack_initializers","root","_root_initializers","didPressCloseButton","didPressBackButton","didPressSearchButton","_backAlign_decorators","_stack_decorators","stackTrait","stackView","navBarController","sheetControllers","sheetController","viewWillAttachNavBar","viewDidDetachNavBar","detachNavBarView","controllerWillAttachBarView","attachNavBarView","controllerDidDetachBarView","frontView","frontViewDidScroll","controllerDidPressCloseButton","controllerDidPressBackButton","controllerDidPressSearchButton","setController","attachSheetTrait","attachSheetView","detachSheetView","detachSheetTrait","controllerWillAttachSheetTrait","controllerDidDetachSheetTrait","controllerWillAttachSheetView","controllerDidDetachSheetView","attachTitle","addView","detachTitle","controllerWillPresentSheetView","controllerDidPresentSheetView","controllerWillDismissSheetView","controllerDidDismissSheetView","deleteController","_root_decorators","rootController","rootTrait","attachRootTrait","rootView","attachRootView","detachRootView","detachRootTrait","frontTrait","attachFrontTrait","attachFrontView","detachFrontView","detachFrontTrait","nextSibling","presentFrontView","detachView","dismissFrontView","controllerDidScrollSheetView","AppBarController","menuButton","_menuButton_initializers","actionButton","_actionButton_initializers","cover","_cover_initializers","fullScreen","_fullScreen_initializers","menuButtonController","menuButtonLayout","modeToolControllers","modeToolCount","modeToolLayout","modeToolKey","targetToolView","coverLayout","coverController","coverTitleView","actionButtonController","actionButtonLayout","menuIcon","menuCloseIcon","actionIcon","_menuButton_decorators","_actionButton_decorators","_cover_decorators","_fullScreen_decorators","_static_get_menuIcon_decorators","_static_get_menuCloseIcon_decorators","_static_get_actionIcon_decorators","FolioView","folioStyle","_folioStyle_initializers","appBar","_appBar_initializers","drawer","_drawer_initializers","initFolio","resizeFolio","resizeStacked","resizeUnstacked","coverView","folioWidth","folioHeight","drawerWidth","minus","appBarView","appBarHeight","layoutFolio","layoutStacked","layoutUnstacked","_folioStyle_decorators","_appBar_decorators","_drawer_decorators","viewDidSetPresence","viewDidSetEffectiveWidth","FolioController","folio","_folio_initializers","didPressMenuButton","didPressActionButton","attachController","detachController","updateFolioStyle","appBarController","folioView","updateFullBleed","_folio_decorators","folioTrait","viewDidSetFolioStyle","viewWillAttachDrawer","viewDidDetachDrawer","viewWillAttachAppBar","viewDidDetachAppBar","attachAppBarView","detachAppBarView","coverViewDidScroll","controllerDidPressMenuButton","controllerDidPressActionButton","consumed","coverTrait","attachCoverTrait","attachCoverView","detachCoverView","detachCoverTrait","controllerDidSetFullBleed","controllerWillAttachModeTool","controllerDidDetachModeTool","TabBarController","tabs","_tabs_initializers","_active_initializers","tabStyle","_tabStyle_initializers","tabControllers","tabController","tabKey","tabHandleLayout","_tabs_decorators","controllerWillAttachHandle","tabHandleController","controllerDidDetachHandle","controllerDidPressHandle","controllerDidLongPressHandle","_active_decorators","activeController","_tabStyle_decorators","BinderView","tabBar","_tabBar_initializers","initBinder","getTab","tabViewClass","tabView","getOrCreateTab","setTab","resizeBinder","binderWidth","binderHeight","tabBarView","tabBarHeight","tabBarWidth","tabViews","_tabBar_decorators","detectView","BinderController","binder","_binder_initializers","didPressTabHandle","didLongPressTabHandle","newTabController","oldTabController","targetTabController","tabBarController","updateTabStyle","binderView","_binder_decorators","binderTrait","viewWillAttachTabBar","viewDidDetachTabBar","attachTabBarView","detachTabBarView","controllerDidPressTabHandle","controllerDidLongPressTabHandle","tabTrait","attachTabTrait","attachTabView","attachTabHandle","detachTabHandle","detachTabView","detachTabTrait","attachTrait","detachTrait","tabToolController","activeTrait","attachActiveTrait","activeView","attachActiveView","detachActiveView","detachActiveTrait","PanelView","widthBasis","_widthBasis_initializers","heightBasis","_heightBasis_initializers","unitWidth","_unitWidth_initializers","unitHeight","_unitHeight_initializers","minPanelHeight","_minPanelHeight_initializers","panelStyle","_panelStyle_initializers","paneLayout","_paneLayout_initializers","minFrameWidth","_minFrameWidth_initializers","minFrameHeight","_minFrameHeight_initializers","headerTitle","_headerTitle_initializers","headerSubtitle","_headerSubtitle_initializers","panes","_panes_initializers","initPanel","onPanelScroll","applyPanelStyle","resizePanel","resizeFrameChildren","resizeStackChildren","rightView","unitRowWidth","paneView","unitPanelWidth","paneWidth","paneHeight","_widthBasis_decorators","_heightBasis_decorators","_unitWidth_decorators","_unitHeight_decorators","_minPanelHeight_decorators","_panelStyle_decorators","panelView","margin","raised","_paneLayout_decorators","_minFrameWidth_decorators","_minFrameHeight_decorators","_headerTitle_decorators","_headerSubtitle_decorators","subtitleView","_panes_decorators","viewDidSetUnitWidth","viewDidSetUnitHeight","viewDidSetMinPanelHeight","viewDidSetPanelStyle","InsertChildFlags","RemoveChildFlags","PanelController","panel","_panel_initializers","panelHeader","_panelHeader_initializers","panelTitle","_panelTitle_initializers","panelSubtitle","_panelSubtitle_initializers","_panel_decorators","panelTrait","viewWillAttachHeaderTitle","viewDidDetachHeaderTitle","viewWillAttachHeaderSubtitle","viewDidDetachHeaderSubtitle","_panelHeader_decorators","_panelTitle_decorators","_panelSubtitle_decorators","paneController","paneTrait","attachPaneTrait","attachPaneView","detachPaneView","detachPaneTrait","controllerWillAttachPanelTrait","controllerDidDetachPanelTrait","controllerWillAttachPanelView","controllerDidDetachPanelView","BoardView","panels","_panels_initializers","resizeChildren","panelHeight","_panels_decorators","BoardController","panelController","attachPanelTrait","attachPanelView","detachPanelView","detachPanelTrait"],"mappings":"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","x_google_ignoreList":[0]}