trigger: ["main", "byte-routing"]
pr: ["main", "byte-routing"]

schedules:
  - cron: "0 0 * * *"
    displayName: Nightly code coverage run
    branches:
      include:
        - main
        - byte-routing


variables:
    RUSTFLAGS: -Dwarnings

jobs:
  - job: Code_coverage
    displayName: Code coverage

    pool:
      vmImage: ubuntu-22.04

    steps:
      - template: azure-install-rust.yml
        parameters:
          rust_version: 1.68.0
      - template: azure-install-sccache.yml

      - script: cargo install cargo-tarpaulin
        displayName: Install Tarpaulin
        workingDirectory: $(Build.SourcesDirectory)

      - script: cargo tarpaulin --ignore-tests -o Xml -t 600 --exclude-files demos form_derive agent_derive --avoid-cfg-tarpaulin
        displayName: Generate code coverage
        workingDirectory: $(Build.SourcesDirectory)

      - bash: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
        displayName: Download the Codecov uploader and its keys
        workingDirectory: $(Build.SourcesDirectory)

      - bash: |
          echo $PUBLIC_KEY | base64 --decode | gpg --import
          gpg --verify codecov.SHA256SUM.sig codecov.SHA256SUM
        displayName: Verify the signature of the SHA256SUM
        workingDirectory: $(Build.SourcesDirectory)
        env:
          PUBLIC_KEY: $(CODECOV_PUBLIC_KEY)

      - bash: |
          shasum -a 256 -c codecov.SHA256SUM
        displayName: Verify the integrity of the Codecov uploader
        workingDirectory: $(Build.SourcesDirectory)

      - bash: |
          set -ex
          chmod +x codecov
          ./codecov -t $TOKEN
        displayName: Upload code coverage
        workingDirectory: $(Build.SourcesDirectory)
        env:
          TOKEN: $(CODECOV_TOKEN)
