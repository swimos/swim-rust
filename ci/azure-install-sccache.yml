# This template installs sccache (Shared Compilation Cache)
# More info: https://github.com/mozilla/sccache

steps:
  - bash: |
      set -ex
      curl -L https://github.com/mozilla/sccache/releases/download/0.2.10/sccache-0.2.10-x86_64-unknown-linux-musl.tar.gz | tar xzf -
      sccache=`pwd`/sccache-0.2.10-x86_64-unknown-linux-musl/sccache
      echo "##vso[task.setvariable variable=RUSTC_WRAPPER;]$sccache"
    displayName: Install sccache - Linux X64
    condition: and(eq(variables['Agent.OS'], 'Linux'), eq(variables['Agent.OSArchitecture'], 'X64'))
  - bash: |
      set -ex
      brew install openssl@1.1
      curl -L https://github.com/mozilla/sccache/releases/download/0.2.10/sccache-0.2.10-x86_64-apple-darwin.tar.gz | tar xzf -
      sccache=`pwd`/sccache-0.2.10-x86_64-apple-darwin/sccache
      echo "##vso[task.setvariable variable=RUSTC_WRAPPER;]$sccache"
    displayName: Install sccache - Darwin
    condition: eq( variables['Agent.OS'], 'Darwin' )
  - bash: |
      set -ex
      SCCACHE_ERROR_LOG=`pwd`/sccache.log RUST_LOG=debug $RUSTC_WRAPPER --start-server
      $RUSTC_WRAPPER -s
      cat sccache.log
    displayName: "start sccache"
    condition: not(eq( variables['Agent.OS'], 'Windows_NT' ))
    env:
      SCCACHE_AZURE_CONNECTION_STRING: $(SCCACHE_AZURE_CONNECTION_STRING)
      SCCACHE_AZURE_BLOB_CONTAINER: $(SCCACHE_AZURE_BLOB_CONTAINER)