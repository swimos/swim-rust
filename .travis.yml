language: rust

branches:
  only:
    - master
    - router

jobs:
  include:
    - if: env(TRAVIS_EVENT_TYPE) != "cron"
      dist: bionic
      os: linux
      arch: amd64
      services:
        - docker
      env:
        - ARCH=amd64
        - TEST_SERVER_VERSION=v1.0
        - TEST_SERVER_IMAGE_NAME="org.swimos/swim-docker-example:1.0"
        - REPO_URL="https://github.com/swimos/swim-docker-example/"
      script:
        - cargo fmt -- --check
        - cargo clippy --all-features -- -D warnings -A clippy::match_wild_err_arm
        - cargo test --workspace --exclude client
        - cd client
        # Features aren't allowed in the root of a virtual workspace
        - cargo test --package client --features test-server
        - cd ..

    - if: env(TRAVIS_EVENT_TYPE) != "cron"
      os: linux
      arch: arm64
      env: ARCH=arm64
      script:
        - cargo fmt -- --check
        - cargo clippy --all-features -- -D warnings -A clippy::match_wild_err_arm
        - cargo test --workspace

    - if: env(TRAVIS_EVENT_TYPE) != "cron"
      os: osx
      arch: amd64
      env: ARCH=amd64
      script:
        - cargo fmt -- --check
        - cargo clippy --all-features -- -D warnings -A clippy::match_wild_err_arm
        - cargo test --workspace

    - if: env(TRAVIS_EVENT_TYPE) != "cron"
      os: windows
      arch: amd64
      env: ARCH=amd64
      script:
        - cargo fmt -- --check
        - cargo clippy --all-features -- -D warnings -A clippy::match_wild_err_arm
        - cargo test --workspace

    - if: env(TRAVIS_EVENT_TYPE) = "cron"
      os: windows
      arch: amd64
      env: ARCH=amd64
      before_script:
        - rustup target add wasm32-unknown-unknown
        - cargo install wasm-pack
      script:
        - wasm-pack build

rust:
  - 1.44.0

cache:
  directories:
    - $HOME/.cargo
    - $HOME/.rustup

before_cache:
  - rm -rf /home/travis/.cargo/registry

before_script:
  - rustup component add clippy
  - rustup component add rustfmt
  - |
    if [[ "$ARCH" == "amd64" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      cargo install cargo-tarpaulin
    fi

addons:
  apt:
    packages:
      - libssl-dev

after_success:
  - |
    if [[ "$ARCH" == "amd64" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      cargo tarpaulin --out Xml -t 300
      bash <(curl -s https://codecov.io/bash)
    fi